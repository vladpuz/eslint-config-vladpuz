exports[`ESLint config rules > Snapshot of the schema has not been changed 1`] = `
{
  "accessor-pairs": [
    {
      "type": "object",
      "properties": {
        "getWithoutSet": {
          "type": "boolean"
        },
        "setWithoutGet": {
          "type": "boolean"
        },
        "enforceForClassMembers": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "array-bracket-newline": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never",
            "consistent"
          ]
        },
        {
          "type": "object",
          "properties": {
            "multiline": {
              "type": "boolean"
            },
            "minItems": {
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "array-bracket-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "singleValue": {
          "type": "boolean"
        },
        "objectsInArrays": {
          "type": "boolean"
        },
        "arraysInArrays": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "array-callback-return": [
    {
      "type": "object",
      "properties": {
        "allowImplicit": {
          "type": "boolean"
        },
        "checkForEach": {
          "type": "boolean"
        },
        "allowVoid": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "array-element-newline": {
    "definitions": {
      "basicConfig": {
        "oneOf": [
          {
            "enum": [
              "always",
              "never",
              "consistent"
            ]
          },
          {
            "type": "object",
            "properties": {
              "multiline": {
                "type": "boolean"
              },
              "minItems": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "type": "array",
    "items": [
      {
        "oneOf": [
          {
            "$ref": "#/definitions/basicConfig"
          },
          {
            "type": "object",
            "properties": {
              "ArrayExpression": {
                "$ref": "#/definitions/basicConfig"
              },
              "ArrayPattern": {
                "$ref": "#/definitions/basicConfig"
              }
            },
            "additionalProperties": false,
            "minProperties": 1
          }
        ]
      }
    ]
  },
  "arrow-body-style": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "never"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "as-needed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "requireReturnForObjectLiteral": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "arrow-parens": [
    {
      "enum": [
        "always",
        "as-needed"
      ]
    },
    {
      "type": "object",
      "properties": {
        "requireForBlockBody": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "arrow-spacing": [
    {
      "type": "object",
      "properties": {
        "before": {
          "type": "boolean",
          "default": true
        },
        "after": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "block-scoped-var": [],
  "block-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "brace-style": [
    {
      "enum": [
        "1tbs",
        "stroustrup",
        "allman"
      ]
    },
    {
      "type": "object",
      "properties": {
        "allowSingleLine": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "callback-return": [
    {
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  ],
  "camelcase": [
    {
      "type": "object",
      "properties": {
        "ignoreDestructuring": {
          "type": "boolean"
        },
        "ignoreImports": {
          "type": "boolean"
        },
        "ignoreGlobals": {
          "type": "boolean"
        },
        "properties": {
          "enum": [
            "always",
            "never"
          ]
        },
        "allow": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "capitalized-comments": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "ignorePattern": {
              "type": "string"
            },
            "ignoreInlineComments": {
              "type": "boolean"
            },
            "ignoreConsecutiveComments": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "line": {
              "type": "object",
              "properties": {
                "ignorePattern": {
                  "type": "string"
                },
                "ignoreInlineComments": {
                  "type": "boolean"
                },
                "ignoreConsecutiveComments": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "block": {
              "type": "object",
              "properties": {
                "ignorePattern": {
                  "type": "string"
                },
                "ignoreInlineComments": {
                  "type": "boolean"
                },
                "ignoreConsecutiveComments": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "class-methods-use-this": [
    {
      "type": "object",
      "properties": {
        "exceptMethods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enforceForClassFields": {
          "type": "boolean"
        },
        "ignoreOverrideMethods": {
          "type": "boolean"
        },
        "ignoreClassesWithImplements": {
          "enum": [
            "all",
            "public-fields"
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "comma-dangle": {
    "definitions": {
      "value": {
        "enum": [
          "always-multiline",
          "always",
          "never",
          "only-multiline"
        ]
      },
      "valueWithIgnore": {
        "enum": [
          "always-multiline",
          "always",
          "ignore",
          "never",
          "only-multiline"
        ]
      }
    },
    "type": "array",
    "items": [
      {
        "oneOf": [
          {
            "$ref": "#/definitions/value"
          },
          {
            "type": "object",
            "properties": {
              "arrays": {
                "$ref": "#/definitions/valueWithIgnore"
              },
              "objects": {
                "$ref": "#/definitions/valueWithIgnore"
              },
              "imports": {
                "$ref": "#/definitions/valueWithIgnore"
              },
              "exports": {
                "$ref": "#/definitions/valueWithIgnore"
              },
              "functions": {
                "$ref": "#/definitions/valueWithIgnore"
              }
            },
            "additionalProperties": false
          }
        ]
      }
    ],
    "additionalItems": false
  },
  "comma-spacing": [
    {
      "type": "object",
      "properties": {
        "before": {
          "type": "boolean",
          "default": false
        },
        "after": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "comma-style": [
    {
      "enum": [
        "first",
        "last"
      ]
    },
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "complexity": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "maximum": {
              "type": "integer",
              "minimum": 0
            },
            "max": {
              "type": "integer",
              "minimum": 0
            },
            "variant": {
              "enum": [
                "classic",
                "modified"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "computed-property-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "enforceForClassMembers": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "consistent-return": [
    {
      "type": "object",
      "properties": {
        "treatUndefinedAsUnspecified": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "consistent-this": {
    "type": "array",
    "items": {
      "type": "string",
      "minLength": 1
    },
    "uniqueItems": true
  },
  "constructor-super": [],
  "curly": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "all"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "multi",
              "multi-line",
              "multi-or-nest"
            ]
          },
          {
            "enum": [
              "consistent"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "default-case": [
    {
      "type": "object",
      "properties": {
        "commentPattern": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "default-case-last": [],
  "default-param-last": [],
  "dot-location": [
    {
      "enum": [
        "object",
        "property"
      ]
    }
  ],
  "dot-notation": [
    {
      "type": "object",
      "properties": {
        "allowKeywords": {
          "type": "boolean"
        },
        "allowPattern": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "eol-last": [
    {
      "enum": [
        "always",
        "never",
        "unix",
        "windows"
      ]
    }
  ],
  "eqeqeq": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always"
            ]
          },
          {
            "type": "object",
            "properties": {
              "null": {
                "enum": [
                  "always",
                  "never",
                  "ignore"
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalItems": false
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "smart",
              "allow-null"
            ]
          }
        ],
        "additionalItems": false
      }
    ]
  },
  "for-direction": [],
  "func-call-spacing": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "never"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always"
            ]
          },
          {
            "type": "object",
            "properties": {
              "allowNewlines": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "func-name-matching": {
    "anyOf": [
      {
        "type": "array",
        "additionalItems": false,
        "items": [
          {
            "enum": [
              "always",
              "never"
            ]
          },
          {
            "type": "object",
            "properties": {
              "considerPropertyDescriptor": {
                "type": "boolean"
              },
              "includeCommonJSModuleExports": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      {
        "type": "array",
        "additionalItems": false,
        "items": [
          {
            "type": "object",
            "properties": {
              "considerPropertyDescriptor": {
                "type": "boolean"
              },
              "includeCommonJSModuleExports": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ]
      }
    ]
  },
  "func-names": {
    "definitions": {
      "value": {
        "enum": [
          "always",
          "as-needed",
          "never"
        ]
      }
    },
    "items": [
      {
        "$ref": "#/definitions/value"
      },
      {
        "type": "object",
        "properties": {
          "generators": {
            "$ref": "#/definitions/value"
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "func-style": [
    {
      "enum": [
        "declaration",
        "expression"
      ]
    },
    {
      "type": "object",
      "properties": {
        "allowArrowFunctions": {
          "type": "boolean"
        },
        "allowTypeAnnotation": {
          "type": "boolean"
        },
        "overrides": {
          "type": "object",
          "properties": {
            "namedExports": {
              "enum": [
                "declaration",
                "expression",
                "ignore"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "function-call-argument-newline": [
    {
      "enum": [
        "always",
        "never",
        "consistent"
      ]
    }
  ],
  "function-paren-newline": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never",
            "consistent",
            "multiline",
            "multiline-arguments"
          ]
        },
        {
          "type": "object",
          "properties": {
            "minItems": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "generator-star-spacing": [
    {
      "oneOf": [
        {
          "enum": [
            "before",
            "after",
            "both",
            "neither"
          ]
        },
        {
          "type": "object",
          "properties": {
            "before": {
              "type": "boolean"
            },
            "after": {
              "type": "boolean"
            },
            "named": {
              "oneOf": [
                {
                  "enum": [
                    "before",
                    "after",
                    "both",
                    "neither"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "boolean"
                    },
                    "after": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "anonymous": {
              "oneOf": [
                {
                  "enum": [
                    "before",
                    "after",
                    "both",
                    "neither"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "boolean"
                    },
                    "after": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "method": {
              "oneOf": [
                {
                  "enum": [
                    "before",
                    "after",
                    "both",
                    "neither"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "boolean"
                    },
                    "after": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "getter-return": [
    {
      "type": "object",
      "properties": {
        "allowImplicit": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "global-require": [],
  "grouped-accessor-pairs": [
    {
      "enum": [
        "anyOrder",
        "getBeforeSet",
        "setBeforeGet"
      ]
    }
  ],
  "guard-for-in": [],
  "handle-callback-err": [
    {
      "type": "string"
    }
  ],
  "id-blacklist": {
    "type": "array",
    "items": {
      "type": "string"
    },
    "uniqueItems": true
  },
  "id-denylist": {
    "type": "array",
    "items": {
      "type": "string"
    },
    "uniqueItems": true
  },
  "id-length": [
    {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer"
        },
        "max": {
          "type": "integer"
        },
        "exceptions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "exceptionPatterns": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "enum": [
            "always",
            "never"
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "id-match": [
    {
      "type": "string"
    },
    {
      "type": "object",
      "properties": {
        "properties": {
          "type": "boolean"
        },
        "classFields": {
          "type": "boolean"
        },
        "onlyDeclarations": {
          "type": "boolean"
        },
        "ignoreDestructuring": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "implicit-arrow-linebreak": [
    {
      "enum": [
        "beside",
        "below"
      ]
    }
  ],
  "indent": [
    {
      "oneOf": [
        {
          "enum": [
            "tab"
          ]
        },
        {
          "type": "integer",
          "minimum": 0
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "SwitchCase": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "VariableDeclarator": {
          "oneOf": [
            {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first",
                    "off"
                  ]
                }
              ]
            },
            {
              "type": "object",
              "properties": {
                "var": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "enum": [
                        "first",
                        "off"
                      ]
                    }
                  ]
                },
                "let": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "enum": [
                        "first",
                        "off"
                      ]
                    }
                  ]
                },
                "const": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "enum": [
                        "first",
                        "off"
                      ]
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "outerIIFEBody": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "off"
              ]
            }
          ]
        },
        "MemberExpression": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "off"
              ]
            }
          ]
        },
        "FunctionDeclaration": {
          "type": "object",
          "properties": {
            "parameters": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first",
                    "off"
                  ]
                }
              ]
            },
            "body": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "FunctionExpression": {
          "type": "object",
          "properties": {
            "parameters": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first",
                    "off"
                  ]
                }
              ]
            },
            "body": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "StaticBlock": {
          "type": "object",
          "properties": {
            "body": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "CallExpression": {
          "type": "object",
          "properties": {
            "arguments": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first",
                    "off"
                  ]
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "ArrayExpression": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "first",
                "off"
              ]
            }
          ]
        },
        "ObjectExpression": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "first",
                "off"
              ]
            }
          ]
        },
        "ImportDeclaration": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "first",
                "off"
              ]
            }
          ]
        },
        "flatTernaryExpressions": {
          "type": "boolean",
          "default": false
        },
        "offsetTernaryExpressions": {
          "type": "boolean",
          "default": false
        },
        "ignoredNodes": {
          "type": "array",
          "items": {
            "type": "string",
            "not": {
              "pattern": ":exit$"
            }
          }
        },
        "ignoreComments": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "indent-legacy": [
    {
      "oneOf": [
        {
          "enum": [
            "tab"
          ]
        },
        {
          "type": "integer",
          "minimum": 0
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "SwitchCase": {
          "type": "integer",
          "minimum": 0
        },
        "VariableDeclarator": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "object",
              "properties": {
                "var": {
                  "type": "integer",
                  "minimum": 0
                },
                "let": {
                  "type": "integer",
                  "minimum": 0
                },
                "const": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          ]
        },
        "outerIIFEBody": {
          "type": "integer",
          "minimum": 0
        },
        "MemberExpression": {
          "type": "integer",
          "minimum": 0
        },
        "FunctionDeclaration": {
          "type": "object",
          "properties": {
            "parameters": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first"
                  ]
                }
              ]
            },
            "body": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "FunctionExpression": {
          "type": "object",
          "properties": {
            "parameters": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first"
                  ]
                }
              ]
            },
            "body": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "CallExpression": {
          "type": "object",
          "properties": {
            "parameters": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "enum": [
                    "first"
                  ]
                }
              ]
            }
          }
        },
        "ArrayExpression": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "first"
              ]
            }
          ]
        },
        "ObjectExpression": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "enum": [
                "first"
              ]
            }
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "init-declarations": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "never"
            ]
          },
          {
            "type": "object",
            "properties": {
              "ignoreForLoopInit": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "jsx-quotes": [
    {
      "enum": [
        "prefer-single",
        "prefer-double"
      ]
    }
  ],
  "key-spacing": [
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "align": {
              "anyOf": [
                {
                  "enum": [
                    "colon",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "mode": {
                      "enum": [
                        "strict",
                        "minimum"
                      ]
                    },
                    "on": {
                      "enum": [
                        "colon",
                        "value"
                      ]
                    },
                    "beforeColon": {
                      "type": "boolean"
                    },
                    "afterColon": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "mode": {
              "enum": [
                "strict",
                "minimum"
              ]
            },
            "beforeColon": {
              "type": "boolean"
            },
            "afterColon": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "singleLine": {
              "type": "object",
              "properties": {
                "mode": {
                  "enum": [
                    "strict",
                    "minimum"
                  ]
                },
                "beforeColon": {
                  "type": "boolean"
                },
                "afterColon": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "multiLine": {
              "type": "object",
              "properties": {
                "align": {
                  "anyOf": [
                    {
                      "enum": [
                        "colon",
                        "value"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "enum": [
                            "strict",
                            "minimum"
                          ]
                        },
                        "on": {
                          "enum": [
                            "colon",
                            "value"
                          ]
                        },
                        "beforeColon": {
                          "type": "boolean"
                        },
                        "afterColon": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                "mode": {
                  "enum": [
                    "strict",
                    "minimum"
                  ]
                },
                "beforeColon": {
                  "type": "boolean"
                },
                "afterColon": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "singleLine": {
              "type": "object",
              "properties": {
                "mode": {
                  "enum": [
                    "strict",
                    "minimum"
                  ]
                },
                "beforeColon": {
                  "type": "boolean"
                },
                "afterColon": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "multiLine": {
              "type": "object",
              "properties": {
                "mode": {
                  "enum": [
                    "strict",
                    "minimum"
                  ]
                },
                "beforeColon": {
                  "type": "boolean"
                },
                "afterColon": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "align": {
              "type": "object",
              "properties": {
                "mode": {
                  "enum": [
                    "strict",
                    "minimum"
                  ]
                },
                "on": {
                  "enum": [
                    "colon",
                    "value"
                  ]
                },
                "beforeColon": {
                  "type": "boolean"
                },
                "afterColon": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "keyword-spacing": [
    {
      "type": "object",
      "properties": {
        "before": {
          "type": "boolean",
          "default": true
        },
        "after": {
          "type": "boolean",
          "default": true
        },
        "overrides": {
          "type": "object",
          "properties": {
            "abstract": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "as": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "async": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "await": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "boolean": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "break": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "byte": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "case": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "catch": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "char": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "class": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "const": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "continue": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "debugger": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "default": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "delete": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "do": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "double": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "else": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "enum": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "export": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "extends": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "false": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "final": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "finally": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "float": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "for": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "from": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "function": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "get": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "goto": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "if": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "implements": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "import": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "in": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "instanceof": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "int": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "interface": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "let": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "long": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "native": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "new": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "null": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "of": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "package": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "private": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "protected": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "public": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "return": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "set": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "short": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "static": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "super": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "switch": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "synchronized": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "this": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "throw": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "throws": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "transient": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "true": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "try": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "typeof": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "var": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "void": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "volatile": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "while": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "with": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "yield": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "boolean"
                },
                "after": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "line-comment-position": [
    {
      "oneOf": [
        {
          "enum": [
            "above",
            "beside"
          ]
        },
        {
          "type": "object",
          "properties": {
            "position": {
              "enum": [
                "above",
                "beside"
              ]
            },
            "ignorePattern": {
              "type": "string"
            },
            "applyDefaultPatterns": {
              "type": "boolean"
            },
            "applyDefaultIgnorePatterns": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "linebreak-style": [
    {
      "enum": [
        "unix",
        "windows"
      ]
    }
  ],
  "lines-around-comment": [
    {
      "type": "object",
      "properties": {
        "beforeBlockComment": {
          "type": "boolean",
          "default": true
        },
        "afterBlockComment": {
          "type": "boolean",
          "default": false
        },
        "beforeLineComment": {
          "type": "boolean",
          "default": false
        },
        "afterLineComment": {
          "type": "boolean",
          "default": false
        },
        "allowBlockStart": {
          "type": "boolean",
          "default": false
        },
        "allowBlockEnd": {
          "type": "boolean",
          "default": false
        },
        "allowClassStart": {
          "type": "boolean"
        },
        "allowClassEnd": {
          "type": "boolean"
        },
        "allowObjectStart": {
          "type": "boolean"
        },
        "allowObjectEnd": {
          "type": "boolean"
        },
        "allowArrayStart": {
          "type": "boolean"
        },
        "allowArrayEnd": {
          "type": "boolean"
        },
        "ignorePattern": {
          "type": "string"
        },
        "applyDefaultIgnorePatterns": {
          "type": "boolean"
        },
        "afterHashbangComment": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "lines-around-directive": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never"
          ]
        },
        {
          "type": "object",
          "properties": {
            "before": {
              "enum": [
                "always",
                "never"
              ]
            },
            "after": {
              "enum": [
                "always",
                "never"
              ]
            }
          },
          "additionalProperties": false,
          "minProperties": 2
        }
      ]
    }
  ],
  "lines-between-class-members": [
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "enforce": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "blankLine": {
                    "enum": [
                      "always",
                      "never"
                    ]
                  },
                  "prev": {
                    "enum": [
                      "method",
                      "field",
                      "*"
                    ]
                  },
                  "next": {
                    "enum": [
                      "method",
                      "field",
                      "*"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "blankLine",
                  "prev",
                  "next"
                ]
              },
              "minItems": 1
            }
          },
          "additionalProperties": false,
          "required": [
            "enforce"
          ]
        },
        {
          "enum": [
            "always",
            "never"
          ]
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "exceptAfterSingleLine": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "logical-assignment-operators": {
    "type": "array",
    "oneOf": [
      {
        "items": [
          {
            "const": "always"
          },
          {
            "type": "object",
            "properties": {
              "enforceForIfStatements": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      },
      {
        "items": [
          {
            "const": "never"
          }
        ],
        "minItems": 1,
        "maxItems": 1
      }
    ]
  },
  "max-classes-per-file": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 1
        },
        {
          "type": "object",
          "properties": {
            "ignoreExpressions": {
              "type": "boolean"
            },
            "max": {
              "type": "integer",
              "minimum": 1
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "max-depth": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "maximum": {
              "type": "integer",
              "minimum": 0
            },
            "max": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "max-len": [
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "minimum": 0
            },
            "comments": {
              "type": "integer",
              "minimum": 0
            },
            "tabWidth": {
              "type": "integer",
              "minimum": 0
            },
            "ignorePattern": {
              "type": "string"
            },
            "ignoreComments": {
              "type": "boolean"
            },
            "ignoreStrings": {
              "type": "boolean"
            },
            "ignoreUrls": {
              "type": "boolean"
            },
            "ignoreTemplateLiterals": {
              "type": "boolean"
            },
            "ignoreRegExpLiterals": {
              "type": "boolean"
            },
            "ignoreTrailingComments": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "integer",
          "minimum": 0
        }
      ]
    },
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "minimum": 0
            },
            "comments": {
              "type": "integer",
              "minimum": 0
            },
            "tabWidth": {
              "type": "integer",
              "minimum": 0
            },
            "ignorePattern": {
              "type": "string"
            },
            "ignoreComments": {
              "type": "boolean"
            },
            "ignoreStrings": {
              "type": "boolean"
            },
            "ignoreUrls": {
              "type": "boolean"
            },
            "ignoreTemplateLiterals": {
              "type": "boolean"
            },
            "ignoreRegExpLiterals": {
              "type": "boolean"
            },
            "ignoreTrailingComments": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "integer",
          "minimum": 0
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "minimum": 0
        },
        "comments": {
          "type": "integer",
          "minimum": 0
        },
        "tabWidth": {
          "type": "integer",
          "minimum": 0
        },
        "ignorePattern": {
          "type": "string"
        },
        "ignoreComments": {
          "type": "boolean"
        },
        "ignoreStrings": {
          "type": "boolean"
        },
        "ignoreUrls": {
          "type": "boolean"
        },
        "ignoreTemplateLiterals": {
          "type": "boolean"
        },
        "ignoreRegExpLiterals": {
          "type": "boolean"
        },
        "ignoreTrailingComments": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "max-lines": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "max": {
              "type": "integer",
              "minimum": 0
            },
            "skipComments": {
              "type": "boolean"
            },
            "skipBlankLines": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "max-lines-per-function": [
    {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "max": {
              "type": "integer",
              "minimum": 0
            },
            "skipComments": {
              "type": "boolean"
            },
            "skipBlankLines": {
              "type": "boolean"
            },
            "IIFEs": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "integer",
          "minimum": 1
        }
      ]
    }
  ],
  "max-nested-callbacks": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "maximum": {
              "type": "integer",
              "minimum": 0
            },
            "max": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "max-params": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "maximum": {
              "type": "integer",
              "minimum": 0
            },
            "max": {
              "type": "integer",
              "minimum": 0
            },
            "countVoidThis": {
              "type": "boolean",
              "description": "Whether to count a \`this\` declaration when the type is \`void\`."
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "max-statements": [
    {
      "oneOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "type": "object",
          "properties": {
            "maximum": {
              "type": "integer",
              "minimum": 0
            },
            "max": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "ignoreTopLevelFunctions": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "max-statements-per-line": [
    {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "additionalProperties": false
    }
  ],
  "multiline-comment-style": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "starred-block",
              "bare-block"
            ]
          }
        ],
        "additionalItems": false
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "separate-lines"
            ]
          },
          {
            "type": "object",
            "properties": {
              "checkJSDoc": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalItems": false
      }
    ]
  },
  "multiline-ternary": [
    {
      "enum": [
        "always",
        "always-multiline",
        "never"
      ]
    }
  ],
  "new-cap": [
    {
      "type": "object",
      "properties": {
        "newIsCap": {
          "type": "boolean"
        },
        "capIsNew": {
          "type": "boolean"
        },
        "newIsCapExceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "newIsCapExceptionPattern": {
          "type": "string"
        },
        "capIsNewExceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capIsNewExceptionPattern": {
          "type": "string"
        },
        "properties": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "new-parens": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "newline-after-var": [
    {
      "enum": [
        "never",
        "always"
      ]
    }
  ],
  "newline-before-return": [],
  "newline-per-chained-call": [
    {
      "type": "object",
      "properties": {
        "ignoreChainWithDepth": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "default": 2
        }
      },
      "additionalProperties": false
    }
  ],
  "no-alert": [],
  "no-array-constructor": [],
  "no-async-promise-executor": [],
  "no-await-in-loop": [],
  "no-bitwise": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "enum": [
              "^",
              "|",
              "&",
              "<<",
              ">>",
              ">>>",
              "^=",
              "|=",
              "&=",
              "<<=",
              ">>=",
              ">>>=",
              "~"
            ]
          },
          "uniqueItems": true
        },
        "int32Hint": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-buffer-constructor": [],
  "no-caller": [],
  "no-case-declarations": [],
  "no-catch-shadow": [],
  "no-class-assign": [],
  "no-compare-neg-zero": [],
  "no-cond-assign": [
    {
      "enum": [
        "except-parens",
        "always"
      ]
    }
  ],
  "no-confusing-arrow": [
    {
      "type": "object",
      "properties": {
        "allowParens": {
          "type": "boolean",
          "default": true
        },
        "onlyOneSimpleParam": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-console": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-const-assign": [],
  "no-constant-binary-expression": [],
  "no-constant-condition": [
    {
      "type": "object",
      "properties": {
        "checkLoops": {
          "enum": [
            "all",
            "allExceptWhileTrue",
            "none",
            true,
            false
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "no-constructor-return": [],
  "no-continue": [],
  "no-control-regex": [],
  "no-debugger": [],
  "no-delete-var": [],
  "no-div-regex": [],
  "no-dupe-args": [],
  "no-dupe-class-members": [],
  "no-dupe-else-if": [],
  "no-dupe-keys": [],
  "no-duplicate-case": [],
  "no-duplicate-imports": [
    {
      "type": "object",
      "properties": {
        "includeExports": {
          "type": "boolean"
        },
        "allowSeparateTypeImports": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-else-return": [
    {
      "type": "object",
      "properties": {
        "allowElseIf": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-empty": [
    {
      "type": "object",
      "properties": {
        "allowEmptyCatch": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-empty-character-class": [],
  "no-empty-function": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "enum": [
              "functions",
              "arrowFunctions",
              "generatorFunctions",
              "methods",
              "generatorMethods",
              "getters",
              "setters",
              "constructors",
              "asyncFunctions",
              "asyncMethods",
              "privateConstructors",
              "protectedConstructors",
              "decoratedFunctions",
              "overrideMethods"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-empty-pattern": [
    {
      "type": "object",
      "properties": {
        "allowObjectPatternsAsParameters": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-empty-static-block": [],
  "no-eq-null": [],
  "no-eval": [
    {
      "type": "object",
      "properties": {
        "allowIndirect": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-ex-assign": [],
  "no-extend-native": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-extra-bind": [],
  "no-extra-boolean-cast": [
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "enforceForInnerExpressions": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "enforceForLogicalOperands": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-extra-label": [],
  "no-extra-parens": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "functions"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "all"
            ]
          },
          {
            "type": "object",
            "properties": {
              "conditionalAssign": {
                "type": "boolean"
              },
              "ternaryOperandBinaryExpressions": {
                "type": "boolean"
              },
              "nestedBinaryExpressions": {
                "type": "boolean"
              },
              "returnAssign": {
                "type": "boolean"
              },
              "ignoreJSX": {
                "enum": [
                  "none",
                  "all",
                  "single-line",
                  "multi-line"
                ]
              },
              "enforceForArrowConditionals": {
                "type": "boolean"
              },
              "enforceForSequenceExpressions": {
                "type": "boolean"
              },
              "enforceForNewInMemberExpressions": {
                "type": "boolean"
              },
              "enforceForFunctionPrototypeMethods": {
                "type": "boolean"
              },
              "allowParensAfterCommentPattern": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "no-extra-semi": [],
  "no-fallthrough": [
    {
      "type": "object",
      "properties": {
        "commentPattern": {
          "type": "string"
        },
        "allowEmptyCase": {
          "type": "boolean"
        },
        "reportUnusedFallthroughComment": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-floating-decimal": [],
  "no-func-assign": [],
  "no-global-assign": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-implicit-coercion": [
    {
      "type": "object",
      "properties": {
        "boolean": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "string": {
          "type": "boolean"
        },
        "disallowTemplateShorthand": {
          "type": "boolean"
        },
        "allow": {
          "type": "array",
          "items": {
            "enum": [
              "~",
              "!!",
              "+",
              "- -",
              "-",
              "*"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-implicit-globals": [
    {
      "type": "object",
      "properties": {
        "lexicalBindings": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-implied-eval": [],
  "no-import-assign": [],
  "no-inline-comments": [
    {
      "type": "object",
      "properties": {
        "ignorePattern": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-inner-declarations": [
    {
      "enum": [
        "functions",
        "both"
      ]
    },
    {
      "type": "object",
      "properties": {
        "blockScopedFunctions": {
          "enum": [
            "allow",
            "disallow"
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "no-invalid-regexp": [
    {
      "type": "object",
      "properties": {
        "allowConstructorFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "no-invalid-this": [
    {
      "type": "object",
      "properties": {
        "capIsConstructor": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-irregular-whitespace": [
    {
      "type": "object",
      "properties": {
        "skipComments": {
          "type": "boolean"
        },
        "skipStrings": {
          "type": "boolean"
        },
        "skipTemplates": {
          "type": "boolean"
        },
        "skipRegExps": {
          "type": "boolean"
        },
        "skipJSXText": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-iterator": [],
  "no-label-var": [],
  "no-labels": [
    {
      "type": "object",
      "properties": {
        "allowLoop": {
          "type": "boolean"
        },
        "allowSwitch": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-lone-blocks": [],
  "no-lonely-if": [],
  "no-loop-func": [],
  "no-loss-of-precision": [],
  "no-magic-numbers": [
    {
      "type": "object",
      "properties": {
        "detectObjects": {
          "type": "boolean",
          "default": false
        },
        "enforceConst": {
          "type": "boolean",
          "default": false
        },
        "ignore": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "pattern": "^[+-]?(?:0|[1-9][0-9]*)n$"
              }
            ]
          },
          "uniqueItems": true
        },
        "ignoreArrayIndexes": {
          "type": "boolean",
          "default": false
        },
        "ignoreDefaultValues": {
          "type": "boolean",
          "default": false
        },
        "ignoreClassFieldInitialValues": {
          "type": "boolean",
          "default": false
        },
        "ignoreEnums": {
          "type": "boolean",
          "default": false
        },
        "ignoreNumericLiteralTypes": {
          "type": "boolean",
          "default": false
        },
        "ignoreReadonlyClassProperties": {
          "type": "boolean",
          "default": false
        },
        "ignoreTypeIndexes": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-misleading-character-class": [
    {
      "type": "object",
      "properties": {
        "allowEscape": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-mixed-operators": [
    {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "enum": [
                "+",
                "-",
                "*",
                "/",
                "%",
                "**",
                "&",
                "|",
                "^",
                "~",
                "<<",
                ">>",
                ">>>",
                "==",
                "!=",
                "===",
                "!==",
                ">",
                ">=",
                "<",
                "<=",
                "&&",
                "||",
                "in",
                "instanceof",
                "?:",
                "??"
              ]
            },
            "minItems": 2,
            "uniqueItems": true
          },
          "uniqueItems": true
        },
        "allowSamePrecedence": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-mixed-requires": [
    {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "grouping": {
              "type": "boolean"
            },
            "allowCall": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-mixed-spaces-and-tabs": [
    {
      "enum": [
        "smart-tabs",
        true,
        false
      ]
    }
  ],
  "no-multi-assign": [
    {
      "type": "object",
      "properties": {
        "ignoreNonDeclaration": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-multi-spaces": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "object",
          "patternProperties": {
            "^([A-Z][a-z]*)+$": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "ignoreEOLComments": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-multi-str": [],
  "no-multiple-empty-lines": [
    {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "minimum": 0
        },
        "maxEOF": {
          "type": "integer",
          "minimum": 0
        },
        "maxBOF": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "max"
      ],
      "additionalProperties": false
    }
  ],
  "no-native-reassign": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-negated-condition": [],
  "no-negated-in-lhs": [],
  "no-nested-ternary": [],
  "no-new": [],
  "no-new-func": [],
  "no-new-native-nonconstructor": [],
  "no-new-object": [],
  "no-new-require": [],
  "no-new-symbol": [],
  "no-new-wrappers": [],
  "no-nonoctal-decimal-escape": [],
  "no-obj-calls": [],
  "no-object-constructor": [],
  "no-octal": [],
  "no-octal-escape": [],
  "no-param-reassign": [
    {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "props": {
              "enum": [
                false
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "props": {
              "enum": [
                true
              ]
            },
            "ignorePropertyModificationsFor": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "ignorePropertyModificationsForRegex": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-path-concat": [],
  "no-plusplus": [
    {
      "type": "object",
      "properties": {
        "allowForLoopAfterthoughts": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-process-env": [],
  "no-process-exit": [],
  "no-promise-executor-return": [
    {
      "type": "object",
      "properties": {
        "allowVoid": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-proto": [],
  "no-prototype-builtins": [],
  "no-redeclare": [
    {
      "type": "object",
      "properties": {
        "builtinGlobals": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-regex-spaces": [],
  "no-restricted-exports": [
    {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "restrictedNamedExports": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "restrictedNamedExportsPattern": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "restrictedNamedExports": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^(?!default$)"
              },
              "uniqueItems": true
            },
            "restrictedNamedExportsPattern": {
              "type": "string"
            },
            "restrictDefaultExports": {
              "type": "object",
              "properties": {
                "direct": {
                  "type": "boolean"
                },
                "named": {
                  "type": "boolean"
                },
                "defaultFrom": {
                  "type": "boolean"
                },
                "namedFrom": {
                  "type": "boolean"
                },
                "namespaceFrom": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-restricted-globals": {
    "type": "array",
    "items": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        }
      ]
    },
    "uniqueItems": true,
    "minItems": 0
  },
  "no-restricted-imports": {
    "anyOf": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "importNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowImportNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false,
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "importNames",
                  "allowImportNames"
                ]
              }
            }
          ]
        },
        "uniqueItems": true
      },
      {
        "type": "array",
        "items": [
          {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "importNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowImportNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "importNames",
                          "allowImportNames"
                        ]
                      }
                    }
                  ]
                },
                "uniqueItems": true
              },
              "patterns": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "importNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "allowImportNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "group": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "regex": {
                          "type": "string"
                        },
                        "importNamePattern": {
                          "type": "string"
                        },
                        "allowImportNamePattern": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "caseSensitive": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "importNames",
                              "allowImportNames"
                            ]
                          },
                          {
                            "required": [
                              "importNamePattern",
                              "allowImportNamePattern"
                            ]
                          },
                          {
                            "required": [
                              "importNames",
                              "allowImportNamePattern"
                            ]
                          },
                          {
                            "required": [
                              "importNamePattern",
                              "allowImportNames"
                            ]
                          },
                          {
                            "required": [
                              "allowImportNames",
                              "allowImportNamePattern"
                            ]
                          }
                        ]
                      },
                      "oneOf": [
                        {
                          "required": [
                            "group"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ]
                    },
                    "uniqueItems": true
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "additionalItems": false
      }
    ]
  },
  "no-restricted-modules": {
    "anyOf": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false,
              "required": [
                "name"
              ]
            }
          ]
        },
        "uniqueItems": true
      },
      {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "paths": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "name"
                    ]
                  }
                ]
              },
              "uniqueItems": true
            },
            "patterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          "additionalProperties": false
        },
        "additionalItems": false
      }
    ]
  },
  "no-restricted-properties": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string"
        },
        "property": {
          "type": "string"
        },
        "allowObjects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "allowProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "message": {
          "type": "string"
        }
      },
      "anyOf": [
        {
          "required": [
            "object"
          ]
        },
        {
          "required": [
            "property"
          ]
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "allowObjects",
              "object"
            ]
          },
          {
            "required": [
              "allowProperties",
              "property"
            ]
          }
        ]
      },
      "additionalProperties": false
    },
    "uniqueItems": true
  },
  "no-restricted-syntax": {
    "type": "array",
    "items": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "selector"
          ],
          "additionalProperties": false
        }
      ]
    },
    "uniqueItems": true,
    "minItems": 0
  },
  "no-return-assign": [
    {
      "enum": [
        "except-parens",
        "always"
      ]
    }
  ],
  "no-return-await": [],
  "no-script-url": [],
  "no-self-assign": [
    {
      "type": "object",
      "properties": {
        "props": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-self-compare": [],
  "no-sequences": [
    {
      "type": "object",
      "properties": {
        "allowInParentheses": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-setter-return": [],
  "no-shadow": [
    {
      "type": "object",
      "properties": {
        "builtinGlobals": {
          "type": "boolean"
        },
        "hoist": {
          "enum": [
            "all",
            "functions",
            "never",
            "types",
            "functions-and-types"
          ]
        },
        "allow": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreOnInitialization": {
          "type": "boolean"
        },
        "ignoreTypeValueShadow": {
          "type": "boolean"
        },
        "ignoreFunctionTypeParameterNameValueShadow": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-shadow-restricted-names": [
    {
      "type": "object",
      "properties": {
        "reportGlobalThis": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-spaced-func": [],
  "no-sparse-arrays": [],
  "no-sync": [
    {
      "type": "object",
      "properties": {
        "allowAtRootLevel": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-tabs": [
    {
      "type": "object",
      "properties": {
        "allowIndentationTabs": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-template-curly-in-string": [],
  "no-ternary": [],
  "no-this-before-super": [],
  "no-throw-literal": [],
  "no-trailing-spaces": [
    {
      "type": "object",
      "properties": {
        "skipBlankLines": {
          "type": "boolean",
          "default": false
        },
        "ignoreComments": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unassigned-vars": [],
  "no-undef": [
    {
      "type": "object",
      "properties": {
        "typeof": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-undef-init": [],
  "no-undefined": [],
  "no-underscore-dangle": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowAfterThis": {
          "type": "boolean"
        },
        "allowAfterSuper": {
          "type": "boolean"
        },
        "allowAfterThisConstructor": {
          "type": "boolean"
        },
        "enforceInMethodNames": {
          "type": "boolean"
        },
        "allowFunctionParams": {
          "type": "boolean"
        },
        "enforceInClassFields": {
          "type": "boolean"
        },
        "allowInArrayDestructuring": {
          "type": "boolean"
        },
        "allowInObjectDestructuring": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unexpected-multiline": [],
  "no-unmodified-loop-condition": [],
  "no-unneeded-ternary": [
    {
      "type": "object",
      "properties": {
        "defaultAssignment": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unreachable": [],
  "no-unreachable-loop": [
    {
      "type": "object",
      "properties": {
        "ignore": {
          "type": "array",
          "items": {
            "enum": [
              "WhileStatement",
              "DoWhileStatement",
              "ForStatement",
              "ForInStatement",
              "ForOfStatement"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unsafe-finally": [],
  "no-unsafe-negation": [
    {
      "type": "object",
      "properties": {
        "enforceForOrderingRelations": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unsafe-optional-chaining": [
    {
      "type": "object",
      "properties": {
        "disallowArithmeticOperators": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unused-expressions": [
    {
      "type": "object",
      "properties": {
        "allowShortCircuit": {
          "type": "boolean"
        },
        "allowTernary": {
          "type": "boolean"
        },
        "allowTaggedTemplates": {
          "type": "boolean"
        },
        "enforceForJSX": {
          "type": "boolean"
        },
        "ignoreDirectives": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-unused-labels": [],
  "no-unused-private-class-members": [],
  "no-unused-vars": [
    {
      "oneOf": [
        {
          "enum": [
            "all",
            "local"
          ]
        },
        {
          "type": "object",
          "properties": {
            "vars": {
              "enum": [
                "all",
                "local"
              ]
            },
            "varsIgnorePattern": {
              "type": "string"
            },
            "args": {
              "enum": [
                "all",
                "after-used",
                "none"
              ]
            },
            "ignoreRestSiblings": {
              "type": "boolean"
            },
            "argsIgnorePattern": {
              "type": "string"
            },
            "caughtErrors": {
              "enum": [
                "all",
                "none"
              ]
            },
            "caughtErrorsIgnorePattern": {
              "type": "string"
            },
            "destructuredArrayIgnorePattern": {
              "type": "string"
            },
            "ignoreClassWithStaticInitBlock": {
              "type": "boolean"
            },
            "reportUsedIgnorePattern": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-use-before-define": [
    {
      "oneOf": [
        {
          "enum": [
            "nofunc"
          ]
        },
        {
          "type": "object",
          "properties": {
            "functions": {
              "type": "boolean"
            },
            "classes": {
              "type": "boolean"
            },
            "variables": {
              "type": "boolean"
            },
            "allowNamedExports": {
              "type": "boolean"
            },
            "enums": {
              "type": "boolean"
            },
            "typedefs": {
              "type": "boolean"
            },
            "ignoreTypeReferences": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "no-useless-assignment": [],
  "no-useless-backreference": [],
  "no-useless-call": [],
  "no-useless-catch": [],
  "no-useless-computed-key": [
    {
      "type": "object",
      "properties": {
        "enforceForClassMembers": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-useless-concat": [],
  "no-useless-constructor": [],
  "no-useless-escape": [
    {
      "type": "object",
      "properties": {
        "allowRegexCharacters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-useless-rename": [
    {
      "type": "object",
      "properties": {
        "ignoreDestructuring": {
          "type": "boolean"
        },
        "ignoreImport": {
          "type": "boolean"
        },
        "ignoreExport": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-useless-return": [],
  "no-var": [],
  "no-void": [
    {
      "type": "object",
      "properties": {
        "allowAsStatement": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "no-warning-comments": [
    {
      "type": "object",
      "properties": {
        "terms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "enum": [
            "start",
            "anywhere"
          ]
        },
        "decoration": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\S$"
          },
          "minItems": 1,
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "no-whitespace-before-property": [],
  "no-with": [],
  "nonblock-statement-body-position": [
    {
      "enum": [
        "beside",
        "below",
        "any"
      ]
    },
    {
      "properties": {
        "overrides": {
          "properties": {
            "if": {
              "enum": [
                "beside",
                "below",
                "any"
              ]
            },
            "else": {
              "enum": [
                "beside",
                "below",
                "any"
              ]
            },
            "while": {
              "enum": [
                "beside",
                "below",
                "any"
              ]
            },
            "do": {
              "enum": [
                "beside",
                "below",
                "any"
              ]
            },
            "for": {
              "enum": [
                "beside",
                "below",
                "any"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "object-curly-newline": [
    {
      "oneOf": [
        {
          "oneOf": [
            {
              "enum": [
                "always",
                "never"
              ]
            },
            {
              "type": "object",
              "properties": {
                "multiline": {
                  "type": "boolean"
                },
                "minProperties": {
                  "type": "integer",
                  "minimum": 0
                },
                "consistent": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "minProperties": 1
            }
          ]
        },
        {
          "type": "object",
          "properties": {
            "ObjectExpression": {
              "oneOf": [
                {
                  "enum": [
                    "always",
                    "never"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "multiline": {
                      "type": "boolean"
                    },
                    "minProperties": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "consistent": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1
                }
              ]
            },
            "ObjectPattern": {
              "oneOf": [
                {
                  "enum": [
                    "always",
                    "never"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "multiline": {
                      "type": "boolean"
                    },
                    "minProperties": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "consistent": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1
                }
              ]
            },
            "ImportDeclaration": {
              "oneOf": [
                {
                  "enum": [
                    "always",
                    "never"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "multiline": {
                      "type": "boolean"
                    },
                    "minProperties": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "consistent": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1
                }
              ]
            },
            "ExportDeclaration": {
              "oneOf": [
                {
                  "enum": [
                    "always",
                    "never"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "multiline": {
                      "type": "boolean"
                    },
                    "minProperties": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "consistent": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "minProperties": 1
                }
              ]
            }
          },
          "additionalProperties": false,
          "minProperties": 1
        }
      ]
    }
  ],
  "object-curly-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "arraysInObjects": {
          "type": "boolean"
        },
        "objectsInObjects": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "object-property-newline": [
    {
      "type": "object",
      "properties": {
        "allowAllPropertiesOnSameLine": {
          "type": "boolean",
          "default": false
        },
        "allowMultiplePropertiesPerLine": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "object-shorthand": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "methods",
              "properties",
              "never",
              "consistent",
              "consistent-as-needed"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "methods",
              "properties"
            ]
          },
          {
            "type": "object",
            "properties": {
              "avoidQuotes": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "methods"
            ]
          },
          {
            "type": "object",
            "properties": {
              "ignoreConstructors": {
                "type": "boolean"
              },
              "methodsIgnorePattern": {
                "type": "string"
              },
              "avoidQuotes": {
                "type": "boolean"
              },
              "avoidExplicitReturnArrows": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "one-var": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never",
            "consecutive"
          ]
        },
        {
          "type": "object",
          "properties": {
            "separateRequires": {
              "type": "boolean"
            },
            "var": {
              "enum": [
                "always",
                "never",
                "consecutive"
              ]
            },
            "let": {
              "enum": [
                "always",
                "never",
                "consecutive"
              ]
            },
            "const": {
              "enum": [
                "always",
                "never",
                "consecutive"
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "initialized": {
              "enum": [
                "always",
                "never",
                "consecutive"
              ]
            },
            "uninitialized": {
              "enum": [
                "always",
                "never",
                "consecutive"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "one-var-declaration-per-line": [
    {
      "enum": [
        "always",
        "initializations"
      ]
    }
  ],
  "operator-assignment": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "operator-linebreak": [
    {
      "enum": [
        "after",
        "before",
        "none",
        null
      ]
    },
    {
      "type": "object",
      "properties": {
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "enum": [
              "after",
              "before",
              "none",
              "ignore"
            ]
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "padded-blocks": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never"
          ]
        },
        {
          "type": "object",
          "properties": {
            "blocks": {
              "enum": [
                "always",
                "never"
              ]
            },
            "switches": {
              "enum": [
                "always",
                "never"
              ]
            },
            "classes": {
              "enum": [
                "always",
                "never"
              ]
            }
          },
          "additionalProperties": false,
          "minProperties": 1
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "allowSingleLineBlocks": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "padding-line-between-statements": {
    "definitions": {
      "paddingType": {
        "enum": [
          "any",
          "never",
          "always"
        ]
      },
      "statementType": {
        "anyOf": [
          {
            "enum": [
              "*",
              "block-like",
              "cjs-export",
              "cjs-import",
              "directive",
              "expression",
              "iife",
              "multiline-block-like",
              "multiline-expression",
              "multiline-const",
              "multiline-let",
              "multiline-var",
              "singleline-const",
              "singleline-let",
              "singleline-var",
              "block",
              "empty",
              "function",
              "break",
              "case",
              "class",
              "const",
              "continue",
              "debugger",
              "default",
              "do",
              "export",
              "for",
              "if",
              "import",
              "let",
              "return",
              "switch",
              "throw",
              "try",
              "var",
              "while",
              "with"
            ]
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "*",
                "block-like",
                "cjs-export",
                "cjs-import",
                "directive",
                "expression",
                "iife",
                "multiline-block-like",
                "multiline-expression",
                "multiline-const",
                "multiline-let",
                "multiline-var",
                "singleline-const",
                "singleline-let",
                "singleline-var",
                "block",
                "empty",
                "function",
                "break",
                "case",
                "class",
                "const",
                "continue",
                "debugger",
                "default",
                "do",
                "export",
                "for",
                "if",
                "import",
                "let",
                "return",
                "switch",
                "throw",
                "try",
                "var",
                "while",
                "with"
              ]
            },
            "minItems": 1,
            "uniqueItems": true
          }
        ]
      }
    },
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "blankLine": {
          "$ref": "#/definitions/paddingType"
        },
        "prev": {
          "$ref": "#/definitions/statementType"
        },
        "next": {
          "$ref": "#/definitions/statementType"
        }
      },
      "additionalProperties": false,
      "required": [
        "blankLine",
        "prev",
        "next"
      ]
    }
  },
  "prefer-arrow-callback": [
    {
      "type": "object",
      "properties": {
        "allowNamedFunctions": {
          "type": "boolean"
        },
        "allowUnboundThis": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-const": [
    {
      "type": "object",
      "properties": {
        "destructuring": {
          "enum": [
            "any",
            "all"
          ]
        },
        "ignoreReadBeforeAssign": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-destructuring": [
    {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "VariableDeclarator": {
              "type": "object",
              "properties": {
                "array": {
                  "type": "boolean"
                },
                "object": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "AssignmentExpression": {
              "type": "object",
              "properties": {
                "array": {
                  "type": "boolean"
                },
                "object": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "array": {
              "type": "boolean"
            },
            "object": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "enforceForRenamedProperties": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-exponentiation-operator": [],
  "prefer-named-capture-group": [],
  "prefer-numeric-literals": [],
  "prefer-object-has-own": [],
  "prefer-object-spread": [],
  "prefer-promise-reject-errors": [
    {
      "type": "object",
      "properties": {
        "allowEmptyReject": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-reflect": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "enum": [
              "apply",
              "call",
              "delete",
              "defineProperty",
              "getOwnPropertyDescriptor",
              "getPrototypeOf",
              "setPrototypeOf",
              "isExtensible",
              "getOwnPropertyNames",
              "preventExtensions"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-regex-literals": [
    {
      "type": "object",
      "properties": {
        "disallowRedundantWrapping": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "prefer-rest-params": [],
  "prefer-spread": [],
  "prefer-template": [],
  "quote-props": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "as-needed",
              "consistent",
              "consistent-as-needed"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always",
              "as-needed",
              "consistent",
              "consistent-as-needed"
            ]
          },
          {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "boolean"
              },
              "unnecessary": {
                "type": "boolean"
              },
              "numbers": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "quotes": [
    {
      "enum": [
        "single",
        "double",
        "backtick"
      ]
    },
    {
      "anyOf": [
        {
          "enum": [
            "avoid-escape"
          ]
        },
        {
          "type": "object",
          "properties": {
            "avoidEscape": {
              "type": "boolean"
            },
            "allowTemplateLiterals": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "radix": [
    {
      "enum": [
        "always",
        "as-needed"
      ]
    }
  ],
  "require-atomic-updates": [
    {
      "type": "object",
      "properties": {
        "allowProperties": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "require-await": [],
  "require-unicode-regexp": [
    {
      "type": "object",
      "properties": {
        "requireFlag": {
          "enum": [
            "u",
            "v"
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "require-yield": [],
  "rest-spread-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "semi": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "never"
            ]
          },
          {
            "type": "object",
            "properties": {
              "beforeStatementContinuationChars": {
                "enum": [
                  "always",
                  "any",
                  "never"
                ]
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always"
            ]
          },
          {
            "type": "object",
            "properties": {
              "omitLastInOneLineBlock": {
                "type": "boolean"
              },
              "omitLastInOneLineClassBody": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "semi-spacing": [
    {
      "type": "object",
      "properties": {
        "before": {
          "type": "boolean",
          "default": false
        },
        "after": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "semi-style": [
    {
      "enum": [
        "last",
        "first"
      ]
    }
  ],
  "sort-imports": [
    {
      "type": "object",
      "properties": {
        "ignoreCase": {
          "type": "boolean"
        },
        "memberSyntaxSortOrder": {
          "type": "array",
          "items": {
            "enum": [
              "none",
              "all",
              "multiple",
              "single"
            ]
          },
          "uniqueItems": true,
          "minItems": 4,
          "maxItems": 4
        },
        "ignoreDeclarationSort": {
          "type": "boolean"
        },
        "ignoreMemberSort": {
          "type": "boolean"
        },
        "allowSeparatedGroups": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "sort-keys": [
    {
      "enum": [
        "asc",
        "desc"
      ]
    },
    {
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "natural": {
          "type": "boolean"
        },
        "minKeys": {
          "type": "integer",
          "minimum": 2
        },
        "allowLineSeparatedGroups": {
          "type": "boolean"
        },
        "ignoreComputedKeys": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "sort-vars": [
    {
      "type": "object",
      "properties": {
        "ignoreCase": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "space-before-blocks": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never"
          ]
        },
        {
          "type": "object",
          "properties": {
            "keywords": {
              "enum": [
                "always",
                "never",
                "off"
              ]
            },
            "functions": {
              "enum": [
                "always",
                "never",
                "off"
              ]
            },
            "classes": {
              "enum": [
                "always",
                "never",
                "off"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "space-before-function-paren": [
    {
      "oneOf": [
        {
          "enum": [
            "always",
            "never"
          ]
        },
        {
          "type": "object",
          "properties": {
            "anonymous": {
              "enum": [
                "always",
                "never",
                "ignore"
              ]
            },
            "named": {
              "enum": [
                "always",
                "never",
                "ignore"
              ]
            },
            "asyncArrow": {
              "enum": [
                "always",
                "never",
                "ignore"
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "space-in-parens": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "enum": [
              "{}",
              "[]",
              "()",
              "empty"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "space-infix-ops": [
    {
      "type": "object",
      "properties": {
        "int32Hint": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "space-unary-ops": [
    {
      "type": "object",
      "properties": {
        "words": {
          "type": "boolean",
          "default": true
        },
        "nonwords": {
          "type": "boolean",
          "default": false
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "spaced-comment": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "markers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "line": {
          "type": "object",
          "properties": {
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "markers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "block": {
          "type": "object",
          "properties": {
            "exceptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "markers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "balanced": {
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "strict": [
    {
      "enum": [
        "never",
        "global",
        "function",
        "safe"
      ]
    }
  ],
  "switch-colon-spacing": [
    {
      "type": "object",
      "properties": {
        "before": {
          "type": "boolean",
          "default": false
        },
        "after": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "symbol-description": [],
  "template-curly-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "template-tag-spacing": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "unicode-bom": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "use-isnan": [
    {
      "type": "object",
      "properties": {
        "enforceForSwitchCase": {
          "type": "boolean"
        },
        "enforceForIndexOf": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "valid-typeof": [
    {
      "type": "object",
      "properties": {
        "requireStringLiterals": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "vars-on-top": [],
  "wrap-iife": [
    {
      "enum": [
        "outside",
        "inside",
        "any"
      ]
    },
    {
      "type": "object",
      "properties": {
        "functionPrototypeMethods": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  ],
  "wrap-regex": [],
  "yield-star-spacing": [
    {
      "oneOf": [
        {
          "enum": [
            "before",
            "after",
            "both",
            "neither"
          ]
        },
        {
          "type": "object",
          "properties": {
            "before": {
              "type": "boolean"
            },
            "after": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "yoda": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {
        "exceptRange": {
          "type": "boolean"
        },
        "onlyEquality": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ]
}
`;

exports[`Plugin \"@typescript-eslint\" config rules > Snapshot of the schema has not been changed 1`] = `
{
  "@typescript-eslint/adjacent-overload-signatures": [],
  "@typescript-eslint/array-type": [
    {
      "type": "object",
      "$defs": {
        "arrayOption": {
          "type": "string",
          "enum": [
            "array",
            "generic",
            "array-simple"
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "default": {
          "$ref": "#/items/0/$defs/arrayOption",
          "description": "The array type expected for mutable cases."
        },
        "readonly": {
          "$ref": "#/items/0/$defs/arrayOption",
          "description": "The array type expected for readonly cases. If omitted, the value for \`default\` will be used."
        }
      }
    }
  ],
  "@typescript-eslint/await-thenable": [],
  "@typescript-eslint/ban-ts-comment": [
    {
      "type": "object",
      "$defs": {
        "directiveConfigSchema": {
          "oneOf": [
            {
              "type": "boolean",
              "default": true
            },
            {
              "type": "string",
              "enum": [
                "allow-with-description"
              ]
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "descriptionFormat": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "minimumDescriptionLength": {
          "type": "number",
          "default": 3,
          "description": "A minimum character length for descriptions when \`allow-with-description\` is enabled."
        },
        "ts-check": {
          "$ref": "#/items/0/$defs/directiveConfigSchema"
        },
        "ts-expect-error": {
          "$ref": "#/items/0/$defs/directiveConfigSchema"
        },
        "ts-ignore": {
          "$ref": "#/items/0/$defs/directiveConfigSchema"
        },
        "ts-nocheck": {
          "$ref": "#/items/0/$defs/directiveConfigSchema"
        }
      }
    }
  ],
  "@typescript-eslint/ban-tslint-comment": [],
  "@typescript-eslint/class-literal-property-style": [
    {
      "type": "string",
      "description": "Which literal class member syntax to prefer.",
      "enum": [
        "fields",
        "getters"
      ]
    }
  ],
  "@typescript-eslint/class-methods-use-this": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enforceForClassFields": {
          "type": "boolean",
          "default": true,
          "description": "Enforces that functions used as instance field initializers utilize \`this\`."
        },
        "exceptMethods": {
          "type": "array",
          "description": "Allows specified method names to be ignored with this rule.",
          "items": {
            "type": "string"
          }
        },
        "ignoreClassesThatImplementAnInterface": {
          "description": "Whether to ignore class members that are defined within a class that \`implements\` a type.",
          "oneOf": [
            {
              "type": "boolean",
              "description": "Ignore all classes that implement an interface"
            },
            {
              "type": "string",
              "description": "Ignore only the public fields of classes that implement an interface",
              "enum": [
                "public-fields"
              ]
            }
          ]
        },
        "ignoreOverrideMethods": {
          "type": "boolean",
          "description": "Whether to ignore members marked with the \`override\` modifier."
        }
      }
    }
  ],
  "@typescript-eslint/consistent-generic-constructors": [
    {
      "type": "string",
      "description": "Which constructor call syntax to prefer.",
      "enum": [
        "type-annotation",
        "constructor"
      ]
    }
  ],
  "@typescript-eslint/consistent-indexed-object-style": [
    {
      "type": "string",
      "description": "Which indexed object syntax to prefer.",
      "enum": [
        "record",
        "index-signature"
      ]
    }
  ],
  "@typescript-eslint/consistent-return": [
    {
      "type": "object",
      "properties": {
        "treatUndefinedAsUnspecified": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "@typescript-eslint/consistent-type-assertions": [
    {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "assertionStyle": {
              "type": "string",
              "description": "The expected assertion style to enforce.",
              "enum": [
                "never"
              ]
            }
          },
          "required": [
            "assertionStyle"
          ]
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "arrayLiteralTypeAssertions": {
              "type": "string",
              "description": "Whether to always prefer type declarations for array literals used as variable initializers, rather than type assertions.",
              "enum": [
                "allow",
                "allow-as-parameter",
                "never"
              ]
            },
            "assertionStyle": {
              "type": "string",
              "description": "The expected assertion style to enforce.",
              "enum": [
                "as",
                "angle-bracket"
              ]
            },
            "objectLiteralTypeAssertions": {
              "type": "string",
              "description": "Whether to always prefer type declarations for object literals used as variable initializers, rather than type assertions.",
              "enum": [
                "allow",
                "allow-as-parameter",
                "never"
              ]
            }
          }
        }
      ]
    }
  ],
  "@typescript-eslint/consistent-type-definitions": [
    {
      "type": "string",
      "description": "Which type definition syntax to prefer.",
      "enum": [
        "interface",
        "type"
      ]
    }
  ],
  "@typescript-eslint/consistent-type-exports": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fixMixedExportsWithInlineTypeSpecifier": {
          "type": "boolean",
          "description": "Whether the rule will autofix \\"mixed\\" export cases using TS inline type specifiers."
        }
      }
    }
  ],
  "@typescript-eslint/consistent-type-imports": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "disallowTypeAnnotations": {
          "type": "boolean",
          "description": "Whether to disallow type imports in type annotations (\`import()\`)."
        },
        "fixStyle": {
          "type": "string",
          "description": "The expected type modifier to be added when an import is detected as used only in the type position.",
          "enum": [
            "separate-type-imports",
            "inline-type-imports"
          ]
        },
        "prefer": {
          "type": "string",
          "description": "The expected import kind for type-only imports.",
          "enum": [
            "type-imports",
            "no-type-imports"
          ]
        }
      }
    }
  ],
  "@typescript-eslint/default-param-last": [],
  "@typescript-eslint/dot-notation": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowIndexSignaturePropertyAccess": {
          "type": "boolean",
          "default": false,
          "description": "Whether to allow accessing properties matching an index signature with array notation."
        },
        "allowKeywords": {
          "type": "boolean",
          "default": true,
          "description": "Whether to allow keywords such as [\\"class\\"]\`."
        },
        "allowPattern": {
          "type": "string",
          "default": "",
          "description": "Regular expression of names to allow."
        },
        "allowPrivateClassPropertyAccess": {
          "type": "boolean",
          "default": false,
          "description": "Whether to allow accessing class members marked as \`private\` with array notation."
        },
        "allowProtectedClassPropertyAccess": {
          "type": "boolean",
          "default": false,
          "description": "Whether to allow accessing class members marked as \`protected\` with array notation."
        }
      }
    }
  ],
  "@typescript-eslint/explicit-function-return-type": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowConciseArrowFunctionExpressionsStartingWithVoid": {
          "type": "boolean",
          "description": "Whether to allow arrow functions that start with the \`void\` keyword."
        },
        "allowDirectConstAssertionInArrowFunctions": {
          "type": "boolean",
          "description": "Whether to ignore arrow functions immediately returning a \`as const\` value."
        },
        "allowedNames": {
          "type": "array",
          "description": "An array of function/method names that will not have their arguments or return values checked.",
          "items": {
            "type": "string"
          }
        },
        "allowExpressions": {
          "type": "boolean",
          "description": "Whether to ignore function expressions (functions which are not part of a declaration)."
        },
        "allowFunctionsWithoutTypeParameters": {
          "type": "boolean",
          "description": "Whether to ignore functions that don't have generic type parameters."
        },
        "allowHigherOrderFunctions": {
          "type": "boolean",
          "description": "Whether to ignore functions immediately returning another function expression."
        },
        "allowIIFEs": {
          "type": "boolean",
          "description": "Whether to ignore immediately invoked function expressions (IIFEs)."
        },
        "allowTypedFunctionExpressions": {
          "type": "boolean",
          "description": "Whether to ignore type annotations on the variable of function expressions."
        }
      }
    }
  ],
  "@typescript-eslint/explicit-member-accessibility": [
    {
      "type": "object",
      "$defs": {
        "accessibilityLevel": {
          "oneOf": [
            {
              "type": "string",
              "description": "Always require an accessor.",
              "enum": [
                "explicit"
              ]
            },
            {
              "type": "string",
              "description": "Require an accessor except when public.",
              "enum": [
                "no-public"
              ]
            },
            {
              "type": "string",
              "description": "Never check whether there is an accessor.",
              "enum": [
                "off"
              ]
            }
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "accessibility": {
          "$ref": "#/items/0/$defs/accessibilityLevel",
          "description": "Which accessibility modifier is required to exist or not exist."
        },
        "ignoredMethodNames": {
          "type": "array",
          "description": "Specific method names that may be ignored.",
          "items": {
            "type": "string"
          }
        },
        "overrides": {
          "type": "object",
          "additionalProperties": false,
          "description": "Changes to required accessibility modifiers for specific kinds of class members.",
          "properties": {
            "accessors": {
              "$ref": "#/items/0/$defs/accessibilityLevel"
            },
            "constructors": {
              "$ref": "#/items/0/$defs/accessibilityLevel"
            },
            "methods": {
              "$ref": "#/items/0/$defs/accessibilityLevel"
            },
            "parameterProperties": {
              "$ref": "#/items/0/$defs/accessibilityLevel"
            },
            "properties": {
              "$ref": "#/items/0/$defs/accessibilityLevel"
            }
          }
        }
      }
    }
  ],
  "@typescript-eslint/explicit-module-boundary-types": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowArgumentsExplicitlyTypedAsAny": {
          "type": "boolean",
          "description": "Whether to ignore arguments that are explicitly typed as \`any\`."
        },
        "allowDirectConstAssertionInArrowFunctions": {
          "type": "boolean",
          "description": "Whether to ignore return type annotations on body-less arrow functions that return an \`as const\` type assertion.\\nYou must still type the parameters of the function."
        },
        "allowedNames": {
          "type": "array",
          "description": "An array of function/method names that will not have their arguments or return values checked.",
          "items": {
            "type": "string"
          }
        },
        "allowHigherOrderFunctions": {
          "type": "boolean",
          "description": "Whether to ignore return type annotations on functions immediately returning another function expression.\\nYou must still type the parameters of the function."
        },
        "allowOverloadFunctions": {
          "type": "boolean",
          "description": "Whether to ignore return type annotations on functions with overload signatures."
        },
        "allowTypedFunctionExpressions": {
          "type": "boolean",
          "description": "Whether to ignore type annotations on the variable of a function expression."
        }
      }
    }
  ],
  "@typescript-eslint/init-declarations": {
    "anyOf": [
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "always"
            ]
          }
        ],
        "minItems": 0,
        "maxItems": 1
      },
      {
        "type": "array",
        "items": [
          {
            "enum": [
              "never"
            ]
          },
          {
            "type": "object",
            "properties": {
              "ignoreForLoopInit": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "minItems": 0,
        "maxItems": 2
      }
    ]
  },
  "@typescript-eslint/max-params": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "countVoidThis": {
          "type": "boolean",
          "description": "Whether to count a \`this\` declaration when the type is \`void\`."
        },
        "max": {
          "type": "integer",
          "description": "A maximum number of parameters in function definitions.",
          "minimum": 0
        },
        "maximum": {
          "type": "integer",
          "description": "(deprecated) A maximum number of parameters in function definitions.",
          "minimum": 0
        }
      }
    }
  ],
  "@typescript-eslint/member-ordering": [
    {
      "type": "object",
      "$defs": {
        "allItems": {
          "type": "string",
          "enum": [
            "readonly-signature",
            "signature",
            "readonly-field",
            "public-readonly-field",
            "public-decorated-readonly-field",
            "decorated-readonly-field",
            "static-readonly-field",
            "public-static-readonly-field",
            "instance-readonly-field",
            "public-instance-readonly-field",
            "abstract-readonly-field",
            "public-abstract-readonly-field",
            "protected-readonly-field",
            "protected-decorated-readonly-field",
            "protected-static-readonly-field",
            "protected-instance-readonly-field",
            "protected-abstract-readonly-field",
            "private-readonly-field",
            "private-decorated-readonly-field",
            "private-static-readonly-field",
            "private-instance-readonly-field",
            "#private-readonly-field",
            "#private-static-readonly-field",
            "#private-instance-readonly-field",
            "field",
            "public-field",
            "public-decorated-field",
            "decorated-field",
            "static-field",
            "public-static-field",
            "instance-field",
            "public-instance-field",
            "abstract-field",
            "public-abstract-field",
            "protected-field",
            "protected-decorated-field",
            "protected-static-field",
            "protected-instance-field",
            "protected-abstract-field",
            "private-field",
            "private-decorated-field",
            "private-static-field",
            "private-instance-field",
            "#private-field",
            "#private-static-field",
            "#private-instance-field",
            "method",
            "public-method",
            "public-decorated-method",
            "decorated-method",
            "static-method",
            "public-static-method",
            "instance-method",
            "public-instance-method",
            "abstract-method",
            "public-abstract-method",
            "protected-method",
            "protected-decorated-method",
            "protected-static-method",
            "protected-instance-method",
            "protected-abstract-method",
            "private-method",
            "private-decorated-method",
            "private-static-method",
            "private-instance-method",
            "#private-method",
            "#private-static-method",
            "#private-instance-method",
            "call-signature",
            "constructor",
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "accessor",
            "public-accessor",
            "public-decorated-accessor",
            "decorated-accessor",
            "static-accessor",
            "public-static-accessor",
            "instance-accessor",
            "public-instance-accessor",
            "abstract-accessor",
            "public-abstract-accessor",
            "protected-accessor",
            "protected-decorated-accessor",
            "protected-static-accessor",
            "protected-instance-accessor",
            "protected-abstract-accessor",
            "private-accessor",
            "private-decorated-accessor",
            "private-static-accessor",
            "private-instance-accessor",
            "#private-accessor",
            "#private-static-accessor",
            "#private-instance-accessor",
            "get",
            "public-get",
            "public-decorated-get",
            "decorated-get",
            "static-get",
            "public-static-get",
            "instance-get",
            "public-instance-get",
            "abstract-get",
            "public-abstract-get",
            "protected-get",
            "protected-decorated-get",
            "protected-static-get",
            "protected-instance-get",
            "protected-abstract-get",
            "private-get",
            "private-decorated-get",
            "private-static-get",
            "private-instance-get",
            "#private-get",
            "#private-static-get",
            "#private-instance-get",
            "set",
            "public-set",
            "public-decorated-set",
            "decorated-set",
            "static-set",
            "public-static-set",
            "instance-set",
            "public-instance-set",
            "abstract-set",
            "public-abstract-set",
            "protected-set",
            "protected-decorated-set",
            "protected-static-set",
            "protected-instance-set",
            "protected-abstract-set",
            "private-set",
            "private-decorated-set",
            "private-static-set",
            "private-instance-set",
            "#private-set",
            "#private-static-set",
            "#private-instance-set",
            "static-initialization",
            "static-static-initialization",
            "public-static-static-initialization",
            "instance-static-initialization",
            "public-instance-static-initialization",
            "abstract-static-initialization",
            "public-abstract-static-initialization",
            "protected-static-static-initialization",
            "protected-instance-static-initialization",
            "protected-abstract-static-initialization",
            "private-static-static-initialization",
            "private-instance-static-initialization",
            "#private-static-static-initialization",
            "#private-instance-static-initialization"
          ]
        },
        "optionalityOrderOptions": {
          "type": "string",
          "enum": [
            "optional-first",
            "required-first"
          ]
        },
        "orderOptions": {
          "type": "string",
          "enum": [
            "alphabetically",
            "alphabetically-case-insensitive",
            "as-written",
            "natural",
            "natural-case-insensitive"
          ]
        },
        "typeItems": {
          "type": "string",
          "enum": [
            "readonly-signature",
            "signature",
            "readonly-field",
            "field",
            "method",
            "constructor"
          ]
        },
        "baseConfig": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "never"
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/items/0/$defs/allItems"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/items/0/$defs/allItems"
                    }
                  }
                ]
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "memberTypes": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/items/0/$defs/allItems"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/items/0/$defs/allItems"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "enum": [
                        "never"
                      ]
                    }
                  ]
                },
                "optionalityOrder": {
                  "$ref": "#/items/0/$defs/optionalityOrderOptions"
                },
                "order": {
                  "$ref": "#/items/0/$defs/orderOptions"
                }
              }
            }
          ]
        },
        "typesConfig": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "never"
              ]
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/items/0/$defs/typeItems"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/items/0/$defs/typeItems"
                    }
                  }
                ]
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "memberTypes": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/items/0/$defs/typeItems"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/items/0/$defs/typeItems"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "enum": [
                        "never"
                      ]
                    }
                  ]
                },
                "optionalityOrder": {
                  "$ref": "#/items/0/$defs/optionalityOrderOptions"
                },
                "order": {
                  "$ref": "#/items/0/$defs/orderOptions"
                }
              }
            }
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "classes": {
          "$ref": "#/items/0/$defs/baseConfig"
        },
        "classExpressions": {
          "$ref": "#/items/0/$defs/baseConfig"
        },
        "default": {
          "$ref": "#/items/0/$defs/baseConfig"
        },
        "interfaces": {
          "$ref": "#/items/0/$defs/typesConfig"
        },
        "typeLiterals": {
          "$ref": "#/items/0/$defs/typesConfig"
        }
      }
    }
  ],
  "@typescript-eslint/method-signature-style": [
    {
      "type": "string",
      "enum": [
        "property",
        "method"
      ]
    }
  ],
  "@typescript-eslint/naming-convention": {
    "$defs": {
      "predefinedFormats": {
        "enum": [
          "camelCase",
          "strictCamelCase",
          "PascalCase",
          "StrictPascalCase",
          "snake_case",
          "UPPER_CASE"
        ],
        "type": "string"
      },
      "typeModifiers": {
        "enum": [
          "boolean",
          "string",
          "number",
          "function",
          "array"
        ],
        "type": "string"
      },
      "underscoreOptions": {
        "enum": [
          "forbid",
          "allow",
          "require",
          "requireDouble",
          "allowDouble",
          "allowSingleOrDouble"
        ],
        "type": "string"
      },
      "formatOptionsConfig": {
        "oneOf": [
          {
            "additionalItems": false,
            "items": {
              "$ref": "#/$defs/predefinedFormats"
            },
            "type": "array"
          },
          {
            "type": "null"
          }
        ]
      },
      "matchRegexConfig": {
        "additionalProperties": false,
        "properties": {
          "match": {
            "type": "boolean"
          },
          "regex": {
            "type": "string"
          }
        },
        "required": [
          "match",
          "regex"
        ],
        "type": "object"
      },
      "prefixSuffixConfig": {
        "additionalItems": false,
        "items": {
          "minLength": 1,
          "type": "string"
        },
        "type": "array"
      }
    },
    "additionalItems": false,
    "items": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "Multiple selectors in one config",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "const",
                  "readonly",
                  "static",
                  "public",
                  "protected",
                  "private",
                  "#private",
                  "abstract",
                  "destructured",
                  "global",
                  "exported",
                  "unused",
                  "requiresQuotes",
                  "override",
                  "async",
                  "default",
                  "namespace"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "selector": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "default",
                  "variableLike",
                  "memberLike",
                  "typeLike",
                  "method",
                  "property",
                  "accessor",
                  "variable",
                  "function",
                  "parameter",
                  "parameterProperty",
                  "classicAccessor",
                  "enumMember",
                  "classMethod",
                  "objectLiteralMethod",
                  "typeMethod",
                  "classProperty",
                  "objectLiteralProperty",
                  "typeProperty",
                  "autoAccessor",
                  "class",
                  "interface",
                  "typeAlias",
                  "enum",
                  "typeParameter",
                  "import"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'default'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "const",
                  "readonly",
                  "static",
                  "public",
                  "protected",
                  "private",
                  "#private",
                  "abstract",
                  "destructured",
                  "global",
                  "exported",
                  "unused",
                  "requiresQuotes",
                  "override",
                  "async",
                  "default",
                  "namespace"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'variableLike'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "variableLike"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "unused",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'variable'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "variable"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "const",
                  "destructured",
                  "exported",
                  "global",
                  "unused",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'function'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "function"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "exported",
                  "global",
                  "unused",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'parameter'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "parameter"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "destructured",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'memberLike'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "memberLike"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "#private",
                  "protected",
                  "public",
                  "readonly",
                  "requiresQuotes",
                  "static",
                  "override",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'classProperty'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "classProperty"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "#private",
                  "protected",
                  "public",
                  "readonly",
                  "requiresQuotes",
                  "static",
                  "override"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'objectLiteralProperty'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "objectLiteralProperty"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "public",
                  "requiresQuotes"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'typeProperty'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "typeProperty"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "public",
                  "readonly",
                  "requiresQuotes"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'parameterProperty'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "parameterProperty"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "private",
                  "protected",
                  "public",
                  "readonly"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'property'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "property"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "#private",
                  "protected",
                  "public",
                  "readonly",
                  "requiresQuotes",
                  "static",
                  "override",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'classMethod'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "classMethod"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "#private",
                  "protected",
                  "public",
                  "requiresQuotes",
                  "static",
                  "override",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'objectLiteralMethod'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "objectLiteralMethod"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "public",
                  "requiresQuotes",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'typeMethod'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "typeMethod"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "public",
                  "requiresQuotes"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'method'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "method"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "#private",
                  "protected",
                  "public",
                  "requiresQuotes",
                  "static",
                  "override",
                  "async"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'classicAccessor'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "classicAccessor"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "protected",
                  "public",
                  "requiresQuotes",
                  "static",
                  "override"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'autoAccessor'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "autoAccessor"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "protected",
                  "public",
                  "requiresQuotes",
                  "static",
                  "override"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'accessor'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "accessor"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "private",
                  "protected",
                  "public",
                  "requiresQuotes",
                  "static",
                  "override"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "types": {
              "additionalItems": false,
              "items": {
                "$ref": "#/$defs/typeModifiers"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'enumMember'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "enumMember"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "requiresQuotes"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'typeLike'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "typeLike"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "exported",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'class'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "class"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "abstract",
                  "exported",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'interface'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "interface"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "exported",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'typeAlias'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "typeAlias"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "exported",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'enum'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "enum"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "exported",
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'typeParameter'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "typeParameter"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "unused"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Selector 'import'",
          "properties": {
            "custom": {
              "$ref": "#/$defs/matchRegexConfig"
            },
            "failureMessage": {
              "type": "string"
            },
            "format": {
              "$ref": "#/$defs/formatOptionsConfig"
            },
            "leadingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "prefix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "suffix": {
              "$ref": "#/$defs/prefixSuffixConfig"
            },
            "trailingUnderscore": {
              "$ref": "#/$defs/underscoreOptions"
            },
            "filter": {
              "oneOf": [
                {
                  "minLength": 1,
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/matchRegexConfig"
                }
              ]
            },
            "selector": {
              "enum": [
                "import"
              ],
              "type": "string"
            },
            "modifiers": {
              "additionalItems": false,
              "items": {
                "enum": [
                  "default",
                  "namespace"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "selector",
            "format"
          ],
          "type": "object"
        }
      ]
    },
    "type": "array"
  },
  "@typescript-eslint/no-array-constructor": [],
  "@typescript-eslint/no-array-delete": [],
  "@typescript-eslint/no-base-to-string": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "checkUnknown": {
          "type": "boolean",
          "description": "Whether to also check values of type \`unknown\`"
        },
        "ignoredTypeNames": {
          "type": "array",
          "description": "Stringified regular expressions of type names to ignore.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  ],
  "@typescript-eslint/no-confusing-non-null-assertion": [],
  "@typescript-eslint/no-confusing-void-expression": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreArrowShorthand": {
          "type": "boolean",
          "description": "Whether to ignore \\"shorthand\\" \`() =>\` arrow functions: those without \`{ ... }\` braces."
        },
        "ignoreVoidOperator": {
          "type": "boolean",
          "description": "Whether to ignore returns that start with the \`void\` operator."
        },
        "ignoreVoidReturningFunctions": {
          "type": "boolean",
          "description": "Whether to ignore returns from functions with explicit \`void\` return types and functions with contextual \`void\` return types."
        }
      }
    }
  ],
  "@typescript-eslint/no-deprecated": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "Type specifiers that can be allowed."
        }
      }
    }
  ],
  "@typescript-eslint/no-dupe-class-members": [],
  "@typescript-eslint/no-duplicate-enum-values": [],
  "@typescript-eslint/no-duplicate-type-constituents": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreIntersections": {
          "type": "boolean",
          "description": "Whether to ignore \`&\` intersections."
        },
        "ignoreUnions": {
          "type": "boolean",
          "description": "Whether to ignore \`|\` unions."
        }
      }
    }
  ],
  "@typescript-eslint/no-dynamic-delete": [],
  "@typescript-eslint/no-empty-function": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "enum": [
              "functions",
              "arrowFunctions",
              "generatorFunctions",
              "methods",
              "generatorMethods",
              "getters",
              "setters",
              "constructors",
              "private-constructors",
              "protected-constructors",
              "asyncFunctions",
              "asyncMethods",
              "decoratedFunctions",
              "overrideMethods"
            ],
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Locations and kinds of functions that are allowed to be empty."
        }
      },
      "additionalProperties": false
    }
  ],
  "@typescript-eslint/no-empty-interface": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowSingleExtends": {
          "type": "boolean",
          "description": "Whether to allow empty interfaces that extend a single other interface."
        }
      }
    }
  ],
  "@typescript-eslint/no-empty-object-type": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowInterfaces": {
          "type": "string",
          "description": "Whether to allow empty interfaces.",
          "enum": [
            "always",
            "never",
            "with-single-extends"
          ]
        },
        "allowObjectTypes": {
          "type": "string",
          "description": "Whether to allow empty object type literals.",
          "enum": [
            "always",
            "never"
          ]
        },
        "allowWithName": {
          "type": "string",
          "description": "A stringified regular expression to allow interfaces and object type aliases with the configured name."
        }
      }
    }
  ],
  "@typescript-eslint/no-explicit-any": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fixToUnknown": {
          "type": "boolean",
          "description": "Whether to enable auto-fixing in which the \`any\` type is converted to the \`unknown\` type."
        },
        "ignoreRestArgs": {
          "type": "boolean",
          "description": "Whether to ignore rest parameter arrays."
        }
      }
    }
  ],
  "@typescript-eslint/no-extra-non-null-assertion": [],
  "@typescript-eslint/no-extraneous-class": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowConstructorOnly": {
          "type": "boolean",
          "description": "Whether to allow extraneous classes that contain only a constructor."
        },
        "allowEmpty": {
          "type": "boolean",
          "description": "Whether to allow extraneous classes that have no body (i.e. are empty)."
        },
        "allowStaticOnly": {
          "type": "boolean",
          "description": "Whether to allow extraneous classes that only contain static members."
        },
        "allowWithDecorator": {
          "type": "boolean",
          "description": "Whether to allow extraneous classes that include a decorator."
        }
      }
    }
  ],
  "@typescript-eslint/no-floating-promises": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowForKnownSafeCalls": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "Type specifiers of functions whose calls are safe to float."
        },
        "allowForKnownSafePromises": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "Type specifiers that are known to be safe to float."
        },
        "checkThenables": {
          "type": "boolean",
          "description": "Whether to check all \\"Thenable\\"s, not just the built-in Promise type."
        },
        "ignoreIIFE": {
          "type": "boolean",
          "description": "Whether to ignore async IIFEs (Immediately Invoked Function Expressions)."
        },
        "ignoreVoid": {
          "type": "boolean",
          "description": "Whether to ignore \`void\` expressions."
        }
      }
    }
  ],
  "@typescript-eslint/no-for-in-array": [],
  "@typescript-eslint/no-implied-eval": [],
  "@typescript-eslint/no-import-type-side-effects": [],
  "@typescript-eslint/no-inferrable-types": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreParameters": {
          "type": "boolean",
          "description": "Whether to ignore function parameters."
        },
        "ignoreProperties": {
          "type": "boolean",
          "description": "Whether to ignore class properties."
        }
      }
    }
  ],
  "@typescript-eslint/no-invalid-this": [
    {
      "type": "object",
      "properties": {
        "capIsConstructor": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "@typescript-eslint/no-invalid-void-type": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowAsThisParameter": {
          "type": "boolean",
          "description": "Whether a \`this\` parameter of a function may be \`void\`."
        },
        "allowInGenericTypeArguments": {
          "description": "Whether \`void\` can be used as a valid value for generic type parameters.",
          "oneOf": [
            {
              "type": "boolean",
              "description": "Whether \`void\` can be used as a valid value for all generic type parameters."
            },
            {
              "type": "array",
              "description": "Allowlist of types that may accept \`void\` as a generic type parameter.",
              "items": {
                "type": "string"
              },
              "minItems": 1
            }
          ]
        }
      }
    }
  ],
  "@typescript-eslint/no-loop-func": [],
  "@typescript-eslint/no-loss-of-precision": [],
  "@typescript-eslint/no-magic-numbers": [
    {
      "type": "object",
      "properties": {
        "detectObjects": {
          "type": "boolean",
          "default": false
        },
        "enforceConst": {
          "type": "boolean",
          "default": false
        },
        "ignore": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string",
                "pattern": "^[+-]?(?:0|[1-9][0-9]*)n$"
              }
            ]
          },
          "uniqueItems": true
        },
        "ignoreArrayIndexes": {
          "type": "boolean",
          "default": false
        },
        "ignoreDefaultValues": {
          "type": "boolean",
          "default": false
        },
        "ignoreClassFieldInitialValues": {
          "type": "boolean",
          "default": false
        },
        "ignoreEnums": {
          "type": "boolean",
          "default": false,
          "description": "Whether enums used in TypeScript are considered okay."
        },
        "ignoreNumericLiteralTypes": {
          "type": "boolean",
          "default": false,
          "description": "Whether numbers used in TypeScript numeric literal types are considered okay."
        },
        "ignoreReadonlyClassProperties": {
          "type": "boolean",
          "default": false,
          "description": "Whether \`readonly\` class properties are considered okay."
        },
        "ignoreTypeIndexes": {
          "type": "boolean",
          "default": false,
          "description": "Whether numbers used to index types are okay."
        }
      },
      "additionalProperties": false
    }
  ],
  "@typescript-eslint/no-meaningless-void-operator": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "checkNever": {
          "type": "boolean",
          "default": false,
          "description": "Whether to suggest removing \`void\` when the argument has type \`never\`."
        }
      }
    }
  ],
  "@typescript-eslint/no-misused-new": [],
  "@typescript-eslint/no-misused-promises": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "checksConditionals": {
          "type": "boolean",
          "description": "Whether to warn when a Promise is provided to conditional statements."
        },
        "checksSpreads": {
          "type": "boolean",
          "description": "Whether to warn when \`...\` spreading a \`Promise\`."
        },
        "checksVoidReturn": {
          "description": "Whether to warn when a Promise is returned from a function typed as returning \`void\`.",
          "oneOf": [
            {
              "type": "boolean",
              "description": "Whether to disable checking all asynchronous functions."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "description": "Which forms of functions may have checking disabled.",
              "properties": {
                "arguments": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous function passed as argument where the parameter type expects a function that returns \`void\`."
                },
                "attributes": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous function passed as a JSX attribute expected to be a function that returns \`void\`."
                },
                "inheritedMethods": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous method in a type that extends or implements another type expecting that method to return \`void\`."
                },
                "properties": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous function passed as an object property expected to be a function that returns \`void\`."
                },
                "returns": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous function returned in a function whose return type is a function that returns \`void\`."
                },
                "variables": {
                  "type": "boolean",
                  "description": "Disables checking an asynchronous function used as a variable whose return type is a function that returns \`void\`."
                }
              }
            }
          ]
        }
      }
    }
  ],
  "@typescript-eslint/no-misused-spread": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "An array of type specifiers that are known to be safe to spread."
        }
      }
    }
  ],
  "@typescript-eslint/no-mixed-enums": [],
  "@typescript-eslint/no-namespace": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowDeclarations": {
          "type": "boolean",
          "description": "Whether to allow \`declare\` with custom TypeScript namespaces."
        },
        "allowDefinitionFiles": {
          "type": "boolean",
          "description": "Whether to allow \`declare\` with custom TypeScript namespaces inside definition files."
        }
      }
    }
  ],
  "@typescript-eslint/no-non-null-asserted-nullish-coalescing": [],
  "@typescript-eslint/no-non-null-asserted-optional-chain": [],
  "@typescript-eslint/no-non-null-assertion": [],
  "@typescript-eslint/no-redeclare": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "builtinGlobals": {
          "type": "boolean",
          "description": "Whether to report shadowing of built-in global variables."
        },
        "ignoreDeclarationMerge": {
          "type": "boolean",
          "description": "Whether to ignore declaration merges between certain TypeScript declaration types."
        }
      }
    }
  ],
  "@typescript-eslint/no-redundant-type-constituents": [],
  "@typescript-eslint/no-require-imports": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "type": "array",
          "description": "Patterns of import paths to allow requiring from.",
          "items": {
            "type": "string"
          }
        },
        "allowAsImport": {
          "type": "boolean",
          "description": "Allows \`require\` statements in import declarations."
        }
      }
    }
  ],
  "@typescript-eslint/no-restricted-imports": {
    "anyOf": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "importNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowImportNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowTypeImports": {
                  "type": "boolean",
                  "description": "Whether to allow type-only imports for a path."
                }
              },
              "required": [
                "name"
              ]
            }
          ]
        },
        "uniqueItems": true
      },
      {
        "type": "array",
        "additionalItems": false,
        "items": [
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "importNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowImportNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowTypeImports": {
                          "type": "boolean",
                          "description": "Whether to allow type-only imports for a path."
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  ]
                },
                "uniqueItems": true
              },
              "patterns": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "importNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "allowImportNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "group": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1,
                          "uniqueItems": true
                        },
                        "regex": {
                          "type": "string"
                        },
                        "importNamePattern": {
                          "type": "string"
                        },
                        "allowImportNamePattern": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "caseSensitive": {
                          "type": "boolean"
                        },
                        "allowTypeImports": {
                          "type": "boolean",
                          "description": "Whether to allow type-only imports for a path."
                        }
                      }
                    },
                    "uniqueItems": true
                  }
                ]
              }
            }
          }
        ]
      }
    ]
  },
  "@typescript-eslint/no-restricted-types": [
    {
      "type": "object",
      "$defs": {
        "banConfig": {
          "oneOf": [
            {
              "type": "boolean",
              "description": "Bans the type with the default message.",
              "enum": [
                true
              ]
            },
            {
              "type": "string",
              "description": "Bans the type with a custom message."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "description": "Bans a type.",
              "properties": {
                "fixWith": {
                  "type": "string",
                  "description": "Type to autofix replace with. Note that autofixers can be applied automatically - so you need to be careful with this option."
                },
                "message": {
                  "type": "string",
                  "description": "Custom error message."
                },
                "suggest": {
                  "type": "array",
                  "description": "Types to suggest replacing with.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/items/0/$defs/banConfig"
          },
          "description": "An object whose keys are the types you want to ban, and the values are error messages."
        }
      }
    }
  ],
  "@typescript-eslint/no-shadow": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "type": "array",
          "description": "Identifier names for which shadowing is allowed.",
          "items": {
            "type": "string"
          }
        },
        "builtinGlobals": {
          "type": "boolean",
          "description": "Whether to report shadowing of built-in global variables."
        },
        "hoist": {
          "type": "string",
          "description": "Whether to report shadowing before outer functions or variables are defined.",
          "enum": [
            "all",
            "functions",
            "functions-and-types",
            "never",
            "types"
          ]
        },
        "ignoreFunctionTypeParameterNameValueShadow": {
          "type": "boolean",
          "description": "Whether to ignore function parameters named the same as a variable."
        },
        "ignoreOnInitialization": {
          "type": "boolean",
          "description": "Whether to ignore the variable initializers when the shadowed variable is presumably still unitialized."
        },
        "ignoreTypeValueShadow": {
          "type": "boolean",
          "description": "Whether to ignore types named the same as a variable."
        }
      }
    }
  ],
  "@typescript-eslint/no-this-alias": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowDestructuring": {
          "type": "boolean",
          "description": "Whether to ignore destructurings, such as \`const { props, state } = this\`."
        },
        "allowedNames": {
          "type": "array",
          "description": "Names to ignore, such as [\\"self\\"] for \`const self = this;\`.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  ],
  "@typescript-eslint/no-type-alias": [
    {
      "type": "object",
      "$defs": {
        "expandedOptions": {
          "type": "string",
          "enum": [
            "always",
            "never",
            "in-unions",
            "in-intersections",
            "in-unions-and-intersections"
          ]
        },
        "simpleOptions": {
          "type": "string",
          "enum": [
            "always",
            "never"
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "allowAliases": {
          "$ref": "#/items/0/$defs/expandedOptions",
          "description": "Whether to allow direct one-to-one type aliases."
        },
        "allowCallbacks": {
          "$ref": "#/items/0/$defs/simpleOptions",
          "description": "Whether to allow type aliases for callbacks."
        },
        "allowConditionalTypes": {
          "$ref": "#/items/0/$defs/simpleOptions",
          "description": "Whether to allow type aliases for conditional types."
        },
        "allowConstructors": {
          "$ref": "#/items/0/$defs/simpleOptions",
          "description": "Whether to allow type aliases with constructors."
        },
        "allowGenerics": {
          "$ref": "#/items/0/$defs/simpleOptions",
          "description": "Whether to allow type aliases with generic types."
        },
        "allowLiterals": {
          "$ref": "#/items/0/$defs/expandedOptions",
          "description": "Whether to allow type aliases with object literal types."
        },
        "allowMappedTypes": {
          "$ref": "#/items/0/$defs/expandedOptions",
          "description": "Whether to allow type aliases with mapped types."
        },
        "allowTupleTypes": {
          "$ref": "#/items/0/$defs/expandedOptions",
          "description": "Whether to allow type aliases with tuple types."
        }
      }
    }
  ],
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowComparingNullableBooleansToFalse": {
          "type": "boolean",
          "description": "Whether to allow comparisons between nullable boolean variables and \`false\`."
        },
        "allowComparingNullableBooleansToTrue": {
          "type": "boolean",
          "description": "Whether to allow comparisons between nullable boolean variables and \`true\`."
        },
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": {
          "type": "boolean",
          "description": "Unless this is set to \`true\`, the rule will error on every file whose \`tsconfig.json\` does _not_ have the \`strictNullChecks\` compiler option (or \`strict\`) set to \`true\`."
        }
      }
    }
  ],
  "@typescript-eslint/no-unnecessary-condition": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowConstantLoopConditions": {
          "description": "Whether to ignore constant loop conditions, such as \`while (true)\`.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "always",
                "never",
                "only-allowed-literals"
              ]
            }
          ]
        },
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": {
          "type": "boolean",
          "description": "Whether to not error when running with a tsconfig that has strictNullChecks turned."
        },
        "checkTypePredicates": {
          "type": "boolean",
          "description": "Whether to check the asserted argument of a type predicate function for unnecessary conditions"
        }
      }
    }
  ],
  "@typescript-eslint/no-unnecessary-parameter-property-assignment": [],
  "@typescript-eslint/no-unnecessary-qualifier": [],
  "@typescript-eslint/no-unnecessary-template-expression": [],
  "@typescript-eslint/no-unnecessary-type-arguments": [],
  "@typescript-eslint/no-unnecessary-type-assertion": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "checkLiteralConstAssertions": {
          "type": "boolean",
          "description": "Whether to check literal const assertions."
        },
        "typesToIgnore": {
          "type": "array",
          "description": "A list of type names to ignore.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  ],
  "@typescript-eslint/no-unnecessary-type-constraint": [],
  "@typescript-eslint/no-unnecessary-type-conversion": [],
  "@typescript-eslint/no-unnecessary-type-parameters": [],
  "@typescript-eslint/no-unsafe-argument": [],
  "@typescript-eslint/no-unsafe-assignment": [],
  "@typescript-eslint/no-unsafe-call": [],
  "@typescript-eslint/no-unsafe-declaration-merging": [],
  "@typescript-eslint/no-unsafe-enum-comparison": [],
  "@typescript-eslint/no-unsafe-function-type": [],
  "@typescript-eslint/no-unsafe-member-access": [],
  "@typescript-eslint/no-unsafe-return": [],
  "@typescript-eslint/no-unsafe-type-assertion": [],
  "@typescript-eslint/no-unsafe-unary-minus": [],
  "@typescript-eslint/no-unused-expressions": [
    {
      "type": "object",
      "properties": {
        "allowShortCircuit": {
          "type": "boolean"
        },
        "allowTernary": {
          "type": "boolean"
        },
        "allowTaggedTemplates": {
          "type": "boolean"
        },
        "enforceForJSX": {
          "type": "boolean"
        },
        "ignoreDirectives": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "@typescript-eslint/no-unused-vars": [
    {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "all",
            "local"
          ]
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "args": {
              "type": "string",
              "description": "Whether to check all, some, or no arguments.",
              "enum": [
                "all",
                "after-used",
                "none"
              ]
            },
            "argsIgnorePattern": {
              "type": "string",
              "description": "Regular expressions of argument names to not check for usage."
            },
            "caughtErrors": {
              "type": "string",
              "description": "Whether to check catch block arguments.",
              "enum": [
                "all",
                "none"
              ]
            },
            "caughtErrorsIgnorePattern": {
              "type": "string",
              "description": "Regular expressions of catch block argument names to not check for usage."
            },
            "destructuredArrayIgnorePattern": {
              "type": "string",
              "description": "Regular expressions of destructured array variable names to not check for usage."
            },
            "ignoreClassWithStaticInitBlock": {
              "type": "boolean",
              "description": "Whether to ignore classes with at least one static initialization block."
            },
            "ignoreRestSiblings": {
              "type": "boolean",
              "description": "Whether to ignore sibling properties in \`...\` destructurings."
            },
            "reportUsedIgnorePattern": {
              "type": "boolean",
              "description": "Whether to report variables that match any of the valid ignore pattern options if they have been used."
            },
            "vars": {
              "type": "string",
              "description": "Whether to check all variables or only locally-declared variables.",
              "enum": [
                "all",
                "local"
              ]
            },
            "varsIgnorePattern": {
              "type": "string",
              "description": "Regular expressions of variable names to not check for usage."
            }
          }
        }
      ]
    }
  ],
  "@typescript-eslint/no-use-before-define": [
    {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "nofunc"
          ]
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "allowNamedExports": {
              "type": "boolean",
              "description": "Whether to ignore named exports."
            },
            "classes": {
              "type": "boolean",
              "description": "Whether to ignore references to class declarations."
            },
            "enums": {
              "type": "boolean",
              "description": "Whether to check references to enums."
            },
            "functions": {
              "type": "boolean",
              "description": "Whether to ignore references to function declarations."
            },
            "ignoreTypeReferences": {
              "type": "boolean",
              "description": "Whether to ignore type references, such as in type annotations and assertions."
            },
            "typedefs": {
              "type": "boolean",
              "description": "Whether to check references to types."
            },
            "variables": {
              "type": "boolean",
              "description": "Whether to ignore references to variables."
            }
          }
        }
      ]
    }
  ],
  "@typescript-eslint/no-useless-constructor": [],
  "@typescript-eslint/no-useless-empty-export": [],
  "@typescript-eslint/no-var-requires": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "type": "array",
          "description": "Patterns of import paths to allow requiring from.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  ],
  "@typescript-eslint/no-wrapper-object-types": [],
  "@typescript-eslint/non-nullable-type-assertion-style": [],
  "@typescript-eslint/only-throw-error": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "Type specifiers that can be thrown."
        },
        "allowRethrowing": {
          "type": "boolean",
          "description": "Whether to allow rethrowing caught values that are not \`Error\` objects."
        },
        "allowThrowingAny": {
          "type": "boolean",
          "description": "Whether to always allow throwing values typed as \`any\`."
        },
        "allowThrowingUnknown": {
          "type": "boolean",
          "description": "Whether to always allow throwing values typed as \`unknown\`."
        }
      }
    }
  ],
  "@typescript-eslint/parameter-properties": [
    {
      "type": "object",
      "$defs": {
        "modifier": {
          "type": "string",
          "enum": [
            "readonly",
            "private",
            "protected",
            "public",
            "private readonly",
            "protected readonly",
            "public readonly"
          ]
        }
      },
      "additionalProperties": false,
      "properties": {
        "allow": {
          "type": "array",
          "description": "Whether to allow certain kinds of properties to be ignored.",
          "items": {
            "$ref": "#/items/0/$defs/modifier"
          }
        },
        "prefer": {
          "type": "string",
          "description": "Whether to prefer class properties or parameter properties.",
          "enum": [
            "class-property",
            "parameter-property"
          ]
        }
      }
    }
  ],
  "@typescript-eslint/prefer-as-const": [],
  "@typescript-eslint/prefer-destructuring": [
    {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AssignmentExpression": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "array": {
                  "type": "boolean"
                },
                "object": {
                  "type": "boolean"
                }
              }
            },
            "VariableDeclarator": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "array": {
                  "type": "boolean"
                },
                "object": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "array": {
              "type": "boolean"
            },
            "object": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    {
      "type": "object",
      "properties": {
        "enforceForDeclarationWithTypeAnnotation": {
          "type": "boolean",
          "description": "Whether to enforce destructuring on variable declarations with type annotations."
        },
        "enforceForRenamedProperties": {
          "type": "boolean",
          "description": "Whether to enforce destructuring that use a different variable name than the property name."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-enum-initializers": [],
  "@typescript-eslint/prefer-find": [],
  "@typescript-eslint/prefer-for-of": [],
  "@typescript-eslint/prefer-function-type": [],
  "@typescript-eslint/prefer-includes": [],
  "@typescript-eslint/prefer-literal-enum-member": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowBitwiseExpressions": {
          "type": "boolean",
          "description": "Whether to allow using bitwise expressions in enum initializers."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-namespace-keyword": [],
  "@typescript-eslint/prefer-nullish-coalescing": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": {
          "type": "boolean",
          "description": "Unless this is set to \`true\`, the rule will error on every file whose \`tsconfig.json\` does _not_ have the \`strictNullChecks\` compiler option (or \`strict\`) set to \`true\`."
        },
        "ignoreBooleanCoercion": {
          "type": "boolean",
          "description": "Whether to ignore arguments to the \`Boolean\` constructor"
        },
        "ignoreConditionalTests": {
          "type": "boolean",
          "description": "Whether to ignore cases that are located within a conditional test."
        },
        "ignoreIfStatements": {
          "type": "boolean",
          "description": "Whether to ignore any if statements that could be simplified by using the nullish coalescing operator."
        },
        "ignoreMixedLogicalExpressions": {
          "type": "boolean",
          "description": "Whether to ignore any logical or expressions that are part of a mixed logical expression (with \`&&\`)."
        },
        "ignorePrimitives": {
          "description": "Whether to ignore all (\`true\`) or some (an object with properties) primitive types.",
          "oneOf": [
            {
              "type": "object",
              "description": "Which primitives types may be ignored.",
              "properties": {
                "bigint": {
                  "type": "boolean",
                  "description": "Ignore bigint primitive types."
                },
                "boolean": {
                  "type": "boolean",
                  "description": "Ignore boolean primitive types."
                },
                "number": {
                  "type": "boolean",
                  "description": "Ignore number primitive types."
                },
                "string": {
                  "type": "boolean",
                  "description": "Ignore string primitive types."
                }
              }
            },
            {
              "type": "boolean",
              "description": "Ignore all primitive types.",
              "enum": [
                true
              ]
            }
          ]
        },
        "ignoreTernaryTests": {
          "type": "boolean",
          "description": "Whether to ignore any ternary expressions that could be simplified by using the nullish coalescing operator."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-optional-chain": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowPotentiallyUnsafeFixesThatModifyTheReturnTypeIKnowWhatImDoing": {
          "type": "boolean",
          "description": "Allow autofixers that will change the return type of the expression. This option is considered unsafe as it may break the build."
        },
        "checkAny": {
          "type": "boolean",
          "description": "Check operands that are typed as \`any\` when inspecting \\"loose boolean\\" operands."
        },
        "checkBigInt": {
          "type": "boolean",
          "description": "Check operands that are typed as \`bigint\` when inspecting \\"loose boolean\\" operands."
        },
        "checkBoolean": {
          "type": "boolean",
          "description": "Check operands that are typed as \`boolean\` when inspecting \\"loose boolean\\" operands."
        },
        "checkNumber": {
          "type": "boolean",
          "description": "Check operands that are typed as \`number\` when inspecting \\"loose boolean\\" operands."
        },
        "checkString": {
          "type": "boolean",
          "description": "Check operands that are typed as \`string\` when inspecting \\"loose boolean\\" operands."
        },
        "checkUnknown": {
          "type": "boolean",
          "description": "Check operands that are typed as \`unknown\` when inspecting \\"loose boolean\\" operands."
        },
        "requireNullish": {
          "type": "boolean",
          "description": "Skip operands that are not typed with \`null\` and/or \`undefined\` when inspecting \\"loose boolean\\" operands."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-promise-reject-errors": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowEmptyReject": {
          "type": "boolean",
          "description": "Whether to allow calls to \`Promise.reject()\` with no arguments."
        },
        "allowThrowingAny": {
          "type": "boolean",
          "description": "Whether to always allow throwing values typed as \`any\`."
        },
        "allowThrowingUnknown": {
          "type": "boolean",
          "description": "Whether to always allow throwing values typed as \`unknown\`."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-readonly": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "onlyInlineLambdas": {
          "type": "boolean",
          "description": "Whether to restrict checking only to members immediately assigned a lambda value."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-readonly-parameter-types": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array",
          "description": "An array of type specifiers to ignore."
        },
        "checkParameterProperties": {
          "type": "boolean",
          "description": "Whether to check class parameter properties."
        },
        "ignoreInferredTypes": {
          "type": "boolean",
          "description": "Whether to ignore parameters which don't explicitly specify a type."
        },
        "treatMethodsAsReadonly": {
          "type": "boolean",
          "description": "Whether to treat all mutable methods as though they are readonly."
        }
      }
    }
  ],
  "@typescript-eslint/prefer-reduce-type-parameter": [],
  "@typescript-eslint/prefer-regexp-exec": [],
  "@typescript-eslint/prefer-return-this-type": [],
  "@typescript-eslint/prefer-string-starts-ends-with": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowSingleElementEquality": {
          "type": "string",
          "description": "Whether to allow equality checks against the first or last element of a string.",
          "enum": [
            "always",
            "never"
          ]
        }
      }
    }
  ],
  "@typescript-eslint/prefer-ts-expect-error": [],
  "@typescript-eslint/promise-function-async": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowAny": {
          "type": "boolean",
          "description": "Whether to consider \`any\` and \`unknown\` to be Promises."
        },
        "allowedPromiseNames": {
          "type": "array",
          "description": "Any extra names of classes or interfaces to be considered Promises.",
          "items": {
            "type": "string"
          }
        },
        "checkArrowFunctions": {
          "type": "boolean",
          "description": "Whether to check arrow functions."
        },
        "checkFunctionDeclarations": {
          "type": "boolean",
          "description": "Whether to check standalone function declarations."
        },
        "checkFunctionExpressions": {
          "type": "boolean",
          "description": "Whether to check inline function expressions"
        },
        "checkMethodDeclarations": {
          "type": "boolean",
          "description": "Whether to check methods on classes and object literals."
        }
      }
    }
  ],
  "@typescript-eslint/related-getter-setter-pairs": [],
  "@typescript-eslint/require-array-sort-compare": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreStringArrays": {
          "type": "boolean",
          "description": "Whether to ignore arrays in which all elements are strings."
        }
      }
    }
  ],
  "@typescript-eslint/require-await": [],
  "@typescript-eslint/restrict-plus-operands": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowAny": {
          "type": "boolean",
          "description": "Whether to allow \`any\` typed values."
        },
        "allowBoolean": {
          "type": "boolean",
          "description": "Whether to allow \`boolean\` typed values."
        },
        "allowNullish": {
          "type": "boolean",
          "description": "Whether to allow potentially \`null\` or \`undefined\` typed values."
        },
        "allowNumberAndString": {
          "type": "boolean",
          "description": "Whether to allow \`bigint\`/\`number\` typed values and \`string\` typed values to be added together."
        },
        "allowRegExp": {
          "type": "boolean",
          "description": "Whether to allow \`regexp\` typed values."
        },
        "skipCompoundAssignments": {
          "type": "boolean",
          "description": "Whether to skip compound assignments such as \`+=\`."
        }
      }
    }
  ],
  "@typescript-eslint/restrict-template-expressions": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowAny": {
          "type": "boolean",
          "description": "Whether to allow \`any\` typed values in template expressions."
        },
        "allowArray": {
          "type": "boolean",
          "description": "Whether to allow \`array\` typed values in template expressions."
        },
        "allowBoolean": {
          "type": "boolean",
          "description": "Whether to allow \`boolean\` typed values in template expressions."
        },
        "allowNullish": {
          "type": "boolean",
          "description": "Whether to allow \`nullish\` typed values in template expressions."
        },
        "allowNumber": {
          "type": "boolean",
          "description": "Whether to allow \`number\` typed values in template expressions."
        },
        "allowRegExp": {
          "type": "boolean",
          "description": "Whether to allow \`regexp\` typed values in template expressions."
        },
        "allowNever": {
          "type": "boolean",
          "description": "Whether to allow \`never\` typed values in template expressions."
        },
        "allow": {
          "description": "Types to allow in template expressions.",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "file"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "lib"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  }
                },
                "required": [
                  "from",
                  "name"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "from": {
                    "enum": [
                      "package"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                      }
                    ]
                  },
                  "package": {
                    "type": "string"
                  }
                },
                "required": [
                  "from",
                  "name",
                  "package"
                ],
                "type": "object"
              }
            ]
          },
          "type": "array"
        }
      }
    }
  ],
  "@typescript-eslint/return-await": [
    {
      "type": "string",
      "oneOf": [
        {
          "type": "string",
          "description": "Requires that all returned promises be awaited.",
          "enum": [
            "always"
          ]
        },
        {
          "type": "string",
          "description": "In error-handling contexts, the rule enforces that returned promises must be awaited. In ordinary contexts, the rule does not enforce any particular behavior around whether returned promises are awaited.",
          "enum": [
            "error-handling-correctness-only"
          ]
        },
        {
          "type": "string",
          "description": "In error-handling contexts, the rule enforces that returned promises must be awaited. In ordinary contexts, the rule enforces that returned promises _must not_ be awaited.",
          "enum": [
            "in-try-catch"
          ]
        },
        {
          "type": "string",
          "description": "Disallows awaiting any returned promises.",
          "enum": [
            "never"
          ]
        }
      ]
    }
  ],
  "@typescript-eslint/sort-type-constituents": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "caseSensitive": {
          "type": "boolean",
          "description": "Whether to sort using case sensitive string comparisons."
        },
        "checkIntersections": {
          "type": "boolean",
          "description": "Whether to check intersection types (\`&\`)."
        },
        "checkUnions": {
          "type": "boolean",
          "description": "Whether to check union types (\`|\`)."
        },
        "groupOrder": {
          "type": "array",
          "description": "Ordering of the groups.",
          "items": {
            "type": "string",
            "enum": [
              "conditional",
              "function",
              "import",
              "intersection",
              "keyword",
              "nullish",
              "literal",
              "named",
              "object",
              "operator",
              "tuple",
              "union"
            ]
          }
        }
      }
    }
  ],
  "@typescript-eslint/strict-boolean-expressions": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowAny": {
          "type": "boolean",
          "description": "Whether to allow \`any\`s in a boolean context."
        },
        "allowNullableBoolean": {
          "type": "boolean",
          "description": "Whether to allow nullable \`boolean\`s in a boolean context."
        },
        "allowNullableEnum": {
          "type": "boolean",
          "description": "Whether to allow nullable \`enum\`s in a boolean context."
        },
        "allowNullableNumber": {
          "type": "boolean",
          "description": "Whether to allow nullable \`number\`s in a boolean context."
        },
        "allowNullableObject": {
          "type": "boolean",
          "description": "Whether to allow nullable \`object\`s, \`symbol\`s, and functions in a boolean context."
        },
        "allowNullableString": {
          "type": "boolean",
          "description": "Whether to allow nullable \`string\`s in a boolean context."
        },
        "allowNumber": {
          "type": "boolean",
          "description": "Whether to allow \`number\`s in a boolean context."
        },
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": {
          "type": "boolean",
          "description": "Unless this is set to \`true\`, the rule will error on every file whose \`tsconfig.json\` does _not_ have the \`strictNullChecks\` compiler option (or \`strict\`) set to \`true\`."
        },
        "allowString": {
          "type": "boolean",
          "description": "Whether to allow \`string\`s in a boolean context."
        }
      }
    }
  ],
  "@typescript-eslint/switch-exhaustiveness-check": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allowDefaultCaseForExhaustiveSwitch": {
          "type": "boolean",
          "description": "If 'true', allow 'default' cases on switch statements with exhaustive cases."
        },
        "considerDefaultExhaustiveForUnions": {
          "type": "boolean",
          "description": "If 'true', the 'default' clause is used to determine whether the switch statement is exhaustive for union type"
        },
        "defaultCaseCommentPattern": {
          "type": "string",
          "description": "Regular expression for a comment that can indicate an intentionally omitted default case."
        },
        "requireDefaultForNonUnion": {
          "type": "boolean",
          "description": "If 'true', require a 'default' clause for switches on non-union types."
        }
      }
    }
  ],
  "@typescript-eslint/triple-slash-reference": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "lib": {
          "type": "string",
          "description": "What to enforce for \`/// <reference lib=\\"...\\" />\` references.",
          "enum": [
            "always",
            "never"
          ]
        },
        "path": {
          "type": "string",
          "description": "What to enforce for \`/// <reference path=\\"...\\" />\` references.",
          "enum": [
            "always",
            "never"
          ]
        },
        "types": {
          "type": "string",
          "description": "What to enforce for \`/// <reference types=\\"...\\" />\` references.",
          "enum": [
            "always",
            "never",
            "prefer-import"
          ]
        }
      }
    }
  ],
  "@typescript-eslint/typedef": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "arrayDestructuring": {
          "type": "boolean",
          "description": "Whether to enforce type annotations on variables declared using array destructuring."
        },
        "arrowParameter": {
          "type": "boolean",
          "description": "Whether to enforce type annotations for parameters of arrow functions."
        },
        "memberVariableDeclaration": {
          "type": "boolean",
          "description": "Whether to enforce type annotations on member variables of classes."
        },
        "objectDestructuring": {
          "type": "boolean",
          "description": "Whether to enforce type annotations on variables declared using object destructuring."
        },
        "parameter": {
          "type": "boolean",
          "description": "Whether to enforce type annotations for parameters of functions and methods."
        },
        "propertyDeclaration": {
          "type": "boolean",
          "description": "Whether to enforce type annotations for properties of interfaces and types."
        },
        "variableDeclaration": {
          "type": "boolean",
          "description": "Whether to enforce type annotations for variable declarations, excluding array and object destructuring."
        },
        "variableDeclarationIgnoreFunction": {
          "type": "boolean",
          "description": "Whether to ignore variable declarations for non-arrow and arrow functions."
        }
      }
    }
  ],
  "@typescript-eslint/unbound-method": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreStatic": {
          "type": "boolean",
          "description": "Whether to skip checking whether \`static\` methods are correctly bound."
        }
      }
    }
  ],
  "@typescript-eslint/unified-signatures": [
    {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ignoreDifferentlyNamedParameters": {
          "type": "boolean",
          "description": "Whether two parameters with different names at the same index should be considered different even if their types are the same."
        },
        "ignoreOverloadsWithDifferentJSDoc": {
          "type": "boolean",
          "description": "Whether two overloads with different JSDoc comments should be considered different even if their parameter and return types are the same."
        }
      }
    }
  ],
  "@typescript-eslint/use-unknown-in-catch-callback-variable": []
}
`;

exports[`Plugin \"import-lite\" config rules > Snapshot of the schema has not been changed 1`] = `
{
  "import-lite/consistent-type-specifier-style": [
    {
      "type": "string",
      "enum": [
        "top-level",
        "inline",
        "prefer-top-level"
      ],
      "default": "top-level"
    }
  ],
  "import-lite/first": [
    {
      "type": "string",
      "enum": [
        "absolute-first",
        "disable-absolute-first"
      ]
    }
  ],
  "import-lite/newline-after-import": [
    {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 1
        },
        "exactCount": {
          "type": "boolean"
        },
        "considerComments": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "import-lite/no-default-export": [],
  "import-lite/no-duplicates": [
    {
      "type": "object",
      "properties": {
        "prefer-inline": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "import-lite/no-mutable-exports": [],
  "import-lite/no-named-default": []
}
`;

exports[`Plugin \"n\" config rules > Snapshot of the schema has not been changed 1`] = `
{
  "n/callback-return": [
    {
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  ],
  "n/exports-style": [
    {
      "enum": [
        "module.exports",
        "exports"
      ]
    },
    {
      "type": "object",
      "properties": {
        "allowBatchAssign": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "n/file-extension-in-import": [
    {
      "enum": [
        "always",
        "never"
      ]
    },
    {
      "type": "object",
      "properties": {},
      "additionalProperties": {
        "enum": [
          "always",
          "never"
        ]
      }
    }
  ],
  "n/global-require": [],
  "n/handle-callback-err": [
    {
      "type": "string"
    }
  ],
  "n/hashbang": [
    {
      "type": "object",
      "properties": {
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "ignoreUnpublished": {
          "type": "boolean"
        },
        "additionalExecutables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "executableMap": {
          "type": "object",
          "patternProperties": {
            "^\\\\.\\\\w+$": {
              "type": "string",
              "pattern": "^[\\\\w-]+$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-callback-literal": [],
  "n/no-deprecated-api": [
    {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "ignoreModuleItems": {
          "type": "array",
          "items": {
            "enum": [
              "_linklist",
              "_stream_wrap",
              "async_hooks.currentId",
              "async_hooks.triggerId",
              "buffer.Buffer()",
              "new buffer.Buffer()",
              "buffer.SlowBuffer",
              "constants",
              "crypto._toBuf",
              "crypto.Credentials",
              "crypto.DEFAULT_ENCODING",
              "crypto.createCipher",
              "crypto.createCredentials",
              "crypto.createDecipher",
              "crypto.fips",
              "crypto.prng",
              "crypto.pseudoRandomBytes",
              "crypto.rng",
              "domain",
              "events.EventEmitter.listenerCount",
              "events.listenerCount",
              "freelist",
              "fs.SyncWriteStream",
              "fs.exists",
              "fs.lchmod",
              "fs.lchmodSync",
              "http.createClient",
              "module.Module.createRequireFromPath",
              "module.Module.requireRepl",
              "module.Module._debug",
              "module.createRequireFromPath",
              "module.requireRepl",
              "module._debug",
              "net._setSimultaneousAccepts",
              "os.getNetworkInterfaces",
              "os.tmpDir",
              "path._makeLong",
              "process.EventEmitter",
              "process.assert",
              "process.binding",
              "process.env.NODE_REPL_HISTORY_FILE",
              "process.report.triggerReport",
              "punycode",
              "readline.codePointAt",
              "readline.getStringWidth",
              "readline.isFullWidthCodePoint",
              "readline.stripVTControlCharacters",
              "repl.REPLServer",
              "repl.Recoverable",
              "repl.REPL_MODE_MAGIC",
              "safe-buffer.Buffer()",
              "new safe-buffer.Buffer()",
              "safe-buffer.SlowBuffer",
              "sys",
              "timers.enroll",
              "timers.unenroll",
              "tls.CleartextStream",
              "tls.CryptoStream",
              "tls.SecurePair",
              "tls.convertNPNProtocols",
              "tls.createSecurePair",
              "tls.parseCertString",
              "tty.setRawMode",
              "url.parse",
              "url.resolve",
              "util.debug",
              "util.error",
              "util.isArray",
              "util.isBoolean",
              "util.isBuffer",
              "util.isDate",
              "util.isError",
              "util.isFunction",
              "util.isNull",
              "util.isNullOrUndefined",
              "util.isNumber",
              "util.isObject",
              "util.isPrimitive",
              "util.isRegExp",
              "util.isString",
              "util.isSymbol",
              "util.isUndefined",
              "util.log",
              "util.print",
              "util.pump",
              "util.puts",
              "util._extend",
              "vm.runInDebugContext",
              "zlib.BrotliCompress()",
              "zlib.BrotliDecompress()",
              "zlib.Deflate()",
              "zlib.DeflateRaw()",
              "zlib.Gunzip()",
              "zlib.Gzip()",
              "zlib.Inflate()",
              "zlib.InflateRaw()",
              "zlib.Unzip()"
            ]
          },
          "additionalItems": false,
          "uniqueItems": true
        },
        "ignoreGlobalItems": {
          "type": "array",
          "items": {
            "enum": [
              "Buffer()",
              "new Buffer()",
              "COUNTER_NET_SERVER_CONNECTION",
              "COUNTER_NET_SERVER_CONNECTION_CLOSE",
              "COUNTER_HTTP_SERVER_REQUEST",
              "COUNTER_HTTP_SERVER_RESPONSE",
              "COUNTER_HTTP_CLIENT_REQUEST",
              "COUNTER_HTTP_CLIENT_RESPONSE",
              "GLOBAL",
              "Intl.v8BreakIterator",
              "require.extensions",
              "root",
              "process.EventEmitter",
              "process.assert",
              "process.binding",
              "process.env.NODE_REPL_HISTORY_FILE",
              "process.report.triggerReport"
            ]
          },
          "additionalItems": false,
          "uniqueItems": true
        },
        "ignoreIndirectDependencies": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-exports-assign": [],
  "n/no-extraneous-import": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-extraneous-require": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "tryExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\."
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-hide-core-modules": [
    {
      "type": "object",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "enum": [
              "assert",
              "buffer",
              "child_process",
              "cluster",
              "console",
              "constants",
              "crypto",
              "dgram",
              "dns",
              "events",
              "fs",
              "http",
              "https",
              "module",
              "net",
              "os",
              "path",
              "querystring",
              "readline",
              "repl",
              "stream",
              "string_decoder",
              "timers",
              "tls",
              "tty",
              "url",
              "util",
              "vm",
              "zlib"
            ]
          },
          "additionalItems": false,
          "uniqueItems": true
        },
        "ignoreDirectDependencies": {
          "type": "boolean"
        },
        "ignoreIndirectDependencies": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-missing-import": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "tryExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\."
          },
          "uniqueItems": true
        },
        "ignoreTypeImport": {
          "type": "boolean",
          "default": false
        },
        "tsconfigPath": {
          "type": "string"
        },
        "typescriptExtensionMap": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "array",
                "prefixItems": [
                  {
                    "type": "string",
                    "pattern": "^(?:|\\\\.\\\\w+)$"
                  },
                  {
                    "type": "string",
                    "pattern": "^\\\\.\\\\w+$"
                  }
                ],
                "additionalItems": false
              },
              "uniqueItems": true
            },
            {
              "type": "string",
              "enum": [
                "react",
                "react-jsx",
                "react-jsxdev",
                "react-native",
                "preserve"
              ]
            }
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-missing-require": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "tryExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\."
          },
          "uniqueItems": true
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "typescriptExtensionMap": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "array",
                "prefixItems": [
                  {
                    "type": "string",
                    "pattern": "^(?:|\\\\.\\\\w+)$"
                  },
                  {
                    "type": "string",
                    "pattern": "^\\\\.\\\\w+$"
                  }
                ],
                "additionalItems": false
              },
              "uniqueItems": true
            },
            {
              "type": "string",
              "enum": [
                "react",
                "react-jsx",
                "react-jsxdev",
                "react-native",
                "preserve"
              ]
            }
          ]
        },
        "tsconfigPath": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-mixed-requires": [
    {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "grouping": {
              "type": "boolean"
            },
            "allowCall": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  ],
  "n/no-new-require": [],
  "n/no-path-concat": [],
  "n/no-process-env": [
    {
      "type": "object",
      "properties": {
        "allowedVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-process-exit": [],
  "n/no-restricted-import": [
    {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "additionalItems": false
                  }
                ]
              },
              "message": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "name"
            ]
          }
        ]
      },
      "additionalItems": false
    }
  ],
  "n/no-restricted-require": [
    {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "additionalItems": false
                  }
                ]
              },
              "message": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "required": [
              "name"
            ]
          }
        ]
      },
      "additionalItems": false
    }
  ],
  "n/no-sync": [
    {
      "type": "object",
      "properties": {
        "allowAtRootLevel": {
          "type": "boolean",
          "default": false
        },
        "ignores": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "from": {
                    "const": "file"
                  },
                  "path": {
                    "type": "string"
                  },
                  "name": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "from": {
                    "const": "lib"
                  },
                  "name": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "from": {
                    "const": "package"
                  },
                  "package": {
                    "type": "string"
                  },
                  "name": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "default": []
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-top-level-await": [
    {
      "type": "object",
      "properties": {
        "ignoreBin": {
          "type": "boolean"
        },
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-unpublished-bin": [
    {
      "type": "object",
      "properties": {
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        }
      }
    }
  ],
  "n/no-unpublished-import": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "tryExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\."
          },
          "uniqueItems": true
        },
        "ignoreTypeImport": {
          "type": "boolean",
          "default": false
        },
        "ignorePrivate": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-unpublished-require": [
    {
      "type": "object",
      "properties": {
        "allowModules": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:virtual:)?(?:@[a-zA-Z0-9_\\\\-.]+/)?[a-zA-Z0-9_\\\\-.]+$"
          },
          "uniqueItems": true
        },
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "resolvePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "resolverConfig": {
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "tryExtensions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\\\."
          },
          "uniqueItems": true
        },
        "ignorePrivate": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-unsupported-features/es-builtins": [
    {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "ignores": {
          "type": "array",
          "items": {
            "enum": [
              "AggregateError",
              "Array",
              "Array.from",
              "Array.isArray",
              "Array.length",
              "Array.of",
              "Array.toLocaleString",
              "ArrayBuffer",
              "ArrayBuffer.isView",
              "Atomics",
              "Atomics.add",
              "Atomics.and",
              "Atomics.compareExchange",
              "Atomics.exchange",
              "Atomics.isLockFree",
              "Atomics.load",
              "Atomics.notify",
              "Atomics.or",
              "Atomics.store",
              "Atomics.sub",
              "Atomics.wait",
              "Atomics.waitAsync",
              "Atomics.xor",
              "BigInt",
              "BigInt.asIntN",
              "BigInt.asUintN",
              "BigInt64Array",
              "BigInt64Array.BYTES_PER_ELEMENT",
              "BigInt64Array.from",
              "BigInt64Array.name",
              "BigInt64Array.of",
              "BigUint64Array",
              "BigUint64Array.BYTES_PER_ELEMENT",
              "BigUint64Array.from",
              "BigUint64Array.name",
              "BigUint64Array.of",
              "Boolean",
              "DataView",
              "Date",
              "Date.UTC",
              "Date.now",
              "Date.parse",
              "Date.toLocaleDateString",
              "Date.toLocaleString",
              "Date.toLocaleTimeString",
              "Error",
              "Error.cause",
              "EvalError",
              "FinalizationRegistry",
              "Float32Array",
              "Float32Array.BYTES_PER_ELEMENT",
              "Float32Array.from",
              "Float32Array.name",
              "Float32Array.of",
              "Float64Array",
              "Float64Array.BYTES_PER_ELEMENT",
              "Float64Array.from",
              "Float64Array.name",
              "Float64Array.of",
              "Function",
              "Function.length",
              "Function.name",
              "Infinity",
              "Int16Array",
              "Int16Array.BYTES_PER_ELEMENT",
              "Int16Array.from",
              "Int16Array.name",
              "Int16Array.of",
              "Int32Array",
              "Int32Array.BYTES_PER_ELEMENT",
              "Int32Array.from",
              "Int32Array.name",
              "Int32Array.of",
              "Int8Array",
              "Int8Array.BYTES_PER_ELEMENT",
              "Int8Array.from",
              "Int8Array.name",
              "Int8Array.of",
              "Intl",
              "Intl.Collator",
              "Intl.DateTimeFormat",
              "Intl.DisplayNames",
              "Intl.ListFormat",
              "Intl.Locale",
              "Intl.NumberFormat",
              "Intl.PluralRules",
              "Intl.RelativeTimeFormat",
              "Intl.Segmenter",
              "Intl.Segments",
              "Intl.getCanonicalLocales",
              "Intl.supportedValuesOf",
              "JSON",
              "JSON.parse",
              "JSON.stringify",
              "Map",
              "Map.groupBy",
              "Math",
              "Math.E",
              "Math.LN10",
              "Math.LN2",
              "Math.LOG10E",
              "Math.LOG2E",
              "Math.PI",
              "Math.SQRT1_2",
              "Math.SQRT2",
              "Math.abs",
              "Math.acos",
              "Math.acosh",
              "Math.asin",
              "Math.asinh",
              "Math.atan",
              "Math.atan2",
              "Math.atanh",
              "Math.cbrt",
              "Math.ceil",
              "Math.clz32",
              "Math.cos",
              "Math.cosh",
              "Math.exp",
              "Math.expm1",
              "Math.floor",
              "Math.fround",
              "Math.hypot",
              "Math.imul",
              "Math.log",
              "Math.log10",
              "Math.log1p",
              "Math.log2",
              "Math.max",
              "Math.min",
              "Math.pow",
              "Math.random",
              "Math.round",
              "Math.sign",
              "Math.sin",
              "Math.sinh",
              "Math.sqrt",
              "Math.tan",
              "Math.tanh",
              "Math.trunc",
              "NaN",
              "Number.EPSILON",
              "Number.MAX_SAFE_INTEGER",
              "Number.MAX_VALUE",
              "Number.MIN_SAFE_INTEGER",
              "Number.MIN_VALUE",
              "Number.NEGATIVE_INFINITY",
              "Number.NaN",
              "Number.POSITIVE_INFINITY",
              "Number.isFinite",
              "Number.isInteger",
              "Number.isNaN",
              "Number.isSafeInteger",
              "Number.parseFloat",
              "Number.parseInt",
              "Number.toLocaleString",
              "Object.assign",
              "Object.create",
              "Object.defineGetter",
              "Object.defineProperties",
              "Object.defineProperty",
              "Object.defineSetter",
              "Object.entries",
              "Object.freeze",
              "Object.fromEntries",
              "Object.getOwnPropertyDescriptor",
              "Object.getOwnPropertyDescriptors",
              "Object.getOwnPropertyNames",
              "Object.getOwnPropertySymbols",
              "Object.getPrototypeOf",
              "Object.groupBy",
              "Object.hasOwn",
              "Object.is",
              "Object.isExtensible",
              "Object.isFrozen",
              "Object.isSealed",
              "Object.keys",
              "Object.lookupGetter",
              "Object.lookupSetter",
              "Object.preventExtensions",
              "Object.proto",
              "Object.seal",
              "Object.setPrototypeOf",
              "Object.values",
              "Promise",
              "Promise.all",
              "Promise.allSettled",
              "Promise.any",
              "Promise.race",
              "Promise.reject",
              "Promise.resolve",
              "Proxy",
              "Proxy.revocable",
              "RangeError",
              "ReferenceError",
              "Reflect",
              "Reflect.apply",
              "Reflect.construct",
              "Reflect.defineProperty",
              "Reflect.deleteProperty",
              "Reflect.get",
              "Reflect.getOwnPropertyDescriptor",
              "Reflect.getPrototypeOf",
              "Reflect.has",
              "Reflect.isExtensible",
              "Reflect.ownKeys",
              "Reflect.preventExtensions",
              "Reflect.set",
              "Reflect.setPrototypeOf",
              "RegExp",
              "RegExp.dotAll",
              "RegExp.hasIndices",
              "RegExp.input",
              "RegExp.lastIndex",
              "RegExp.lastMatch",
              "RegExp.lastParen",
              "RegExp.leftContext",
              "RegExp.n",
              "RegExp.rightContext",
              "Set",
              "SharedArrayBuffer",
              "String",
              "String.fromCharCode",
              "String.fromCodePoint",
              "String.length",
              "String.localeCompare",
              "String.raw",
              "String.toLocaleLowerCase",
              "String.toLocaleUpperCase",
              "Symbol",
              "Symbol.asyncIterator",
              "Symbol.for",
              "Symbol.hasInstance",
              "Symbol.isConcatSpreadable",
              "Symbol.iterator",
              "Symbol.keyFor",
              "Symbol.match",
              "Symbol.matchAll",
              "Symbol.replace",
              "Symbol.search",
              "Symbol.species",
              "Symbol.split",
              "Symbol.toPrimitive",
              "Symbol.toStringTag",
              "Symbol.unscopables",
              "SyntaxError",
              "TypeError",
              "URIError",
              "Uint16Array",
              "Uint16Array.BYTES_PER_ELEMENT",
              "Uint16Array.from",
              "Uint16Array.name",
              "Uint16Array.of",
              "Uint32Array",
              "Uint32Array.BYTES_PER_ELEMENT",
              "Uint32Array.from",
              "Uint32Array.name",
              "Uint32Array.of",
              "Uint8Array",
              "Uint8Array.BYTES_PER_ELEMENT",
              "Uint8Array.from",
              "Uint8Array.name",
              "Uint8Array.of",
              "Uint8ClampedArray",
              "Uint8ClampedArray.BYTES_PER_ELEMENT",
              "Uint8ClampedArray.from",
              "Uint8ClampedArray.name",
              "Uint8ClampedArray.of",
              "WeakMap",
              "WeakRef",
              "WeakSet",
              "decodeURI",
              "decodeURIComponent",
              "encodeURI",
              "encodeURIComponent",
              "escape",
              "eval",
              "globalThis",
              "isFinite",
              "isNaN",
              "parseFloat",
              "parseInt",
              "unescape"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-unsupported-features/es-syntax": [
    {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "ignores": {
          "type": "array",
          "items": {
            "enum": [
              "no-accessor-properties",
              "accessor-properties",
              "accessorProperties",
              "no-arbitrary-module-namespace-names",
              "arbitrary-module-namespace-names",
              "arbitraryModuleNamespaceNames",
              "no-array-from",
              "array-from",
              "arrayFrom",
              "no-array-isarray",
              "array-isarray",
              "arrayIsarray",
              "no-array-of",
              "array-of",
              "arrayOf",
              "no-array-prototype-copywithin",
              "array-prototype-copywithin",
              "arrayPrototypeCopywithin",
              "no-array-prototype-entries",
              "array-prototype-entries",
              "arrayPrototypeEntries",
              "no-array-prototype-every",
              "array-prototype-every",
              "arrayPrototypeEvery",
              "no-array-prototype-fill",
              "array-prototype-fill",
              "arrayPrototypeFill",
              "no-array-prototype-filter",
              "array-prototype-filter",
              "arrayPrototypeFilter",
              "no-array-prototype-find",
              "array-prototype-find",
              "arrayPrototypeFind",
              "no-array-prototype-findindex",
              "array-prototype-findindex",
              "arrayPrototypeFindindex",
              "no-array-prototype-findlast-findlastindex",
              "array-prototype-findlast-findlastindex",
              "arrayPrototypeFindlastFindlastindex",
              "no-array-prototype-flat",
              "array-prototype-flat",
              "arrayPrototypeFlat",
              "no-array-prototype-foreach",
              "array-prototype-foreach",
              "arrayPrototypeForeach",
              "no-array-prototype-includes",
              "array-prototype-includes",
              "arrayPrototypeIncludes",
              "no-array-prototype-indexof",
              "array-prototype-indexof",
              "arrayPrototypeIndexof",
              "no-array-prototype-keys",
              "array-prototype-keys",
              "arrayPrototypeKeys",
              "no-array-prototype-lastindexof",
              "array-prototype-lastindexof",
              "arrayPrototypeLastindexof",
              "no-array-prototype-map",
              "array-prototype-map",
              "arrayPrototypeMap",
              "no-array-prototype-reduce",
              "array-prototype-reduce",
              "arrayPrototypeReduce",
              "no-array-prototype-reduceright",
              "array-prototype-reduceright",
              "arrayPrototypeReduceright",
              "no-array-prototype-some",
              "array-prototype-some",
              "arrayPrototypeSome",
              "no-array-prototype-toreversed",
              "array-prototype-toreversed",
              "arrayPrototypeToreversed",
              "no-array-prototype-tosorted",
              "array-prototype-tosorted",
              "arrayPrototypeTosorted",
              "no-array-prototype-tospliced",
              "array-prototype-tospliced",
              "arrayPrototypeTospliced",
              "no-array-prototype-values",
              "array-prototype-values",
              "arrayPrototypeValues",
              "no-array-prototype-with",
              "array-prototype-with",
              "arrayPrototypeWith",
              "no-array-string-prototype-at",
              "array-string-prototype-at",
              "arrayStringPrototypeAt",
              "no-arrow-functions",
              "arrow-functions",
              "arrowFunctions",
              "no-async-functions",
              "async-functions",
              "asyncFunctions",
              "no-async-iteration",
              "async-iteration",
              "asyncIteration",
              "no-atomics-waitasync",
              "atomics-waitasync",
              "atomicsWaitasync",
              "no-atomics",
              "atomics",
              "no-bigint",
              "bigint",
              "no-binary-numeric-literals",
              "binary-numeric-literals",
              "binaryNumericLiterals",
              "no-block-scoped-functions",
              "block-scoped-functions",
              "blockScopedFunctions",
              "no-block-scoped-variables",
              "block-scoped-variables",
              "blockScopedVariables",
              "no-class-fields",
              "class-fields",
              "classFields",
              "no-class-static-block",
              "class-static-block",
              "classStaticBlock",
              "no-classes",
              "classes",
              "no-computed-properties",
              "computed-properties",
              "computedProperties",
              "no-date-now",
              "date-now",
              "dateNow",
              "no-date-prototype-getyear-setyear",
              "date-prototype-getyear-setyear",
              "datePrototypeGetyearSetyear",
              "no-date-prototype-togmtstring",
              "date-prototype-togmtstring",
              "datePrototypeTogmtstring",
              "no-default-parameters",
              "default-parameters",
              "defaultParameters",
              "no-destructuring",
              "destructuring",
              "no-dynamic-import",
              "dynamic-import",
              "dynamicImport",
              "no-error-cause",
              "error-cause",
              "errorCause",
              "no-escape-unescape",
              "escape-unescape",
              "escapeUnescape",
              "no-exponential-operators",
              "exponential-operators",
              "exponentialOperators",
              "no-export-ns-from",
              "export-ns-from",
              "exportNsFrom",
              "no-for-of-loops",
              "for-of-loops",
              "forOfLoops",
              "no-function-declarations-in-if-statement-clauses-without-block",
              "function-declarations-in-if-statement-clauses-without-block",
              "functionDeclarationsInIfStatementClausesWithoutBlock",
              "no-function-prototype-bind",
              "function-prototype-bind",
              "functionPrototypeBind",
              "no-generators",
              "generators",
              "no-global-this",
              "global-this",
              "globalThis",
              "no-hashbang",
              "hashbang",
              "no-import-meta",
              "import-meta",
              "importMeta",
              "no-initializers-in-for-in",
              "initializers-in-for-in",
              "initializersInForIn",
              "no-intl-datetimeformat-prototype-formatrange",
              "intl-datetimeformat-prototype-formatrange",
              "intlDatetimeformatPrototypeFormatrange",
              "no-intl-datetimeformat-prototype-formattoparts",
              "intl-datetimeformat-prototype-formattoparts",
              "intlDatetimeformatPrototypeFormattoparts",
              "no-intl-displaynames",
              "intl-displaynames",
              "intlDisplaynames",
              "no-intl-getcanonicallocales",
              "intl-getcanonicallocales",
              "intlGetcanonicallocales",
              "no-intl-listformat",
              "intl-listformat",
              "intlListformat",
              "no-intl-locale",
              "intl-locale",
              "intlLocale",
              "no-intl-numberformat-prototype-formatrange",
              "intl-numberformat-prototype-formatrange",
              "intlNumberformatPrototypeFormatrange",
              "no-intl-numberformat-prototype-formatrangetoparts",
              "intl-numberformat-prototype-formatrangetoparts",
              "intlNumberformatPrototypeFormatrangetoparts",
              "no-intl-numberformat-prototype-formattoparts",
              "intl-numberformat-prototype-formattoparts",
              "intlNumberformatPrototypeFormattoparts",
              "no-intl-pluralrules-prototype-selectrange",
              "intl-pluralrules-prototype-selectrange",
              "intlPluralrulesPrototypeSelectrange",
              "no-intl-pluralrules",
              "intl-pluralrules",
              "intlPluralrules",
              "no-intl-relativetimeformat",
              "intl-relativetimeformat",
              "intlRelativetimeformat",
              "no-intl-segmenter",
              "intl-segmenter",
              "intlSegmenter",
              "no-intl-supportedvaluesof",
              "intl-supportedvaluesof",
              "intlSupportedvaluesof",
              "no-json-superset",
              "json-superset",
              "jsonSuperset",
              "no-json",
              "json",
              "no-keyword-properties",
              "keyword-properties",
              "keywordProperties",
              "no-labelled-function-declarations",
              "labelled-function-declarations",
              "labelledFunctionDeclarations",
              "no-legacy-object-prototype-accessor-methods",
              "legacy-object-prototype-accessor-methods",
              "legacyObjectPrototypeAccessorMethods",
              "no-logical-assignment-operators",
              "logical-assignment-operators",
              "logicalAssignmentOperators",
              "no-malformed-template-literals",
              "malformed-template-literals",
              "malformedTemplateLiterals",
              "no-map",
              "map",
              "no-math-acosh",
              "math-acosh",
              "mathAcosh",
              "no-math-asinh",
              "math-asinh",
              "mathAsinh",
              "no-math-atanh",
              "math-atanh",
              "mathAtanh",
              "no-math-cbrt",
              "math-cbrt",
              "mathCbrt",
              "no-math-clz32",
              "math-clz32",
              "mathClz32",
              "no-math-cosh",
              "math-cosh",
              "mathCosh",
              "no-math-expm1",
              "math-expm1",
              "mathExpm1",
              "no-math-fround",
              "math-fround",
              "mathFround",
              "no-math-hypot",
              "math-hypot",
              "mathHypot",
              "no-math-imul",
              "math-imul",
              "mathImul",
              "no-math-log10",
              "math-log10",
              "mathLog10",
              "no-math-log1p",
              "math-log1p",
              "mathLog1p",
              "no-math-log2",
              "math-log2",
              "mathLog2",
              "no-math-sign",
              "math-sign",
              "mathSign",
              "no-math-sinh",
              "math-sinh",
              "mathSinh",
              "no-math-tanh",
              "math-tanh",
              "mathTanh",
              "no-math-trunc",
              "math-trunc",
              "mathTrunc",
              "no-modules",
              "modules",
              "no-new-target",
              "new-target",
              "newTarget",
              "new.target",
              "no-nullish-coalescing-operators",
              "nullish-coalescing-operators",
              "nullishCoalescingOperators",
              "no-number-epsilon",
              "number-epsilon",
              "numberEpsilon",
              "no-number-isfinite",
              "number-isfinite",
              "numberIsfinite",
              "no-number-isinteger",
              "number-isinteger",
              "numberIsinteger",
              "no-number-isnan",
              "number-isnan",
              "numberIsnan",
              "no-number-issafeinteger",
              "number-issafeinteger",
              "numberIssafeinteger",
              "no-number-maxsafeinteger",
              "number-maxsafeinteger",
              "numberMaxsafeinteger",
              "no-number-minsafeinteger",
              "number-minsafeinteger",
              "numberMinsafeinteger",
              "no-number-parsefloat",
              "number-parsefloat",
              "numberParsefloat",
              "no-number-parseint",
              "number-parseint",
              "numberParseint",
              "no-numeric-separators",
              "numeric-separators",
              "numericSeparators",
              "no-object-assign",
              "object-assign",
              "objectAssign",
              "no-object-create",
              "object-create",
              "objectCreate",
              "no-object-defineproperties",
              "object-defineproperties",
              "objectDefineproperties",
              "no-object-defineproperty",
              "object-defineproperty",
              "objectDefineproperty",
              "no-object-entries",
              "object-entries",
              "objectEntries",
              "no-object-freeze",
              "object-freeze",
              "objectFreeze",
              "no-object-fromentries",
              "object-fromentries",
              "objectFromentries",
              "no-object-getownpropertydescriptor",
              "object-getownpropertydescriptor",
              "objectGetownpropertydescriptor",
              "no-object-getownpropertydescriptors",
              "object-getownpropertydescriptors",
              "objectGetownpropertydescriptors",
              "no-object-getownpropertynames",
              "object-getownpropertynames",
              "objectGetownpropertynames",
              "no-object-getownpropertysymbols",
              "object-getownpropertysymbols",
              "objectGetownpropertysymbols",
              "no-object-getprototypeof",
              "object-getprototypeof",
              "objectGetprototypeof",
              "no-object-hasown",
              "object-hasown",
              "objectHasown",
              "no-object-is",
              "object-is",
              "objectIs",
              "no-object-isextensible",
              "object-isextensible",
              "objectIsextensible",
              "no-object-isfrozen",
              "object-isfrozen",
              "objectIsfrozen",
              "no-object-issealed",
              "object-issealed",
              "objectIssealed",
              "no-object-keys",
              "object-keys",
              "objectKeys",
              "no-object-map-groupby",
              "object-map-groupby",
              "objectMapGroupby",
              "no-object-preventextensions",
              "object-preventextensions",
              "objectPreventextensions",
              "no-object-seal",
              "object-seal",
              "objectSeal",
              "no-object-setprototypeof",
              "object-setprototypeof",
              "objectSetprototypeof",
              "no-object-super-properties",
              "object-super-properties",
              "objectSuperProperties",
              "no-object-values",
              "object-values",
              "objectValues",
              "no-octal-numeric-literals",
              "octal-numeric-literals",
              "octalNumericLiterals",
              "no-optional-catch-binding",
              "optional-catch-binding",
              "optionalCatchBinding",
              "no-optional-chaining",
              "optional-chaining",
              "optionalChaining",
              "no-private-in",
              "private-in",
              "privateIn",
              "no-promise-all-settled",
              "promise-all-settled",
              "promiseAllSettled",
              "no-promise-any",
              "promise-any",
              "promiseAny",
              "no-promise-prototype-finally",
              "promise-prototype-finally",
              "promisePrototypeFinally",
              "no-promise-withresolvers",
              "promise-withresolvers",
              "promiseWithresolvers",
              "no-promise",
              "promise",
              "no-property-shorthands",
              "property-shorthands",
              "propertyShorthands",
              "no-proxy",
              "proxy",
              "no-reflect",
              "reflect",
              "no-regexp-d-flag",
              "regexp-d-flag",
              "regexpDFlag",
              "no-regexp-lookbehind-assertions",
              "regexp-lookbehind-assertions",
              "regexpLookbehindAssertions",
              "regexpLookbehind",
              "no-regexp-named-capture-groups",
              "regexp-named-capture-groups",
              "regexpNamedCaptureGroups",
              "no-regexp-prototype-compile",
              "regexp-prototype-compile",
              "regexpPrototypeCompile",
              "no-regexp-prototype-flags",
              "regexp-prototype-flags",
              "regexpPrototypeFlags",
              "no-regexp-s-flag",
              "regexp-s-flag",
              "regexpSFlag",
              "regexpS",
              "no-regexp-u-flag",
              "regexp-u-flag",
              "regexpUFlag",
              "regexpU",
              "no-regexp-unicode-property-escapes-2019",
              "regexp-unicode-property-escapes-2019",
              "regexpUnicodePropertyEscapes2019",
              "no-regexp-unicode-property-escapes-2020",
              "regexp-unicode-property-escapes-2020",
              "regexpUnicodePropertyEscapes2020",
              "no-regexp-unicode-property-escapes-2021",
              "regexp-unicode-property-escapes-2021",
              "regexpUnicodePropertyEscapes2021",
              "no-regexp-unicode-property-escapes-2022",
              "regexp-unicode-property-escapes-2022",
              "regexpUnicodePropertyEscapes2022",
              "no-regexp-unicode-property-escapes-2023",
              "regexp-unicode-property-escapes-2023",
              "regexpUnicodePropertyEscapes2023",
              "no-regexp-unicode-property-escapes",
              "regexp-unicode-property-escapes",
              "regexpUnicodePropertyEscapes",
              "regexpUnicodeProperties",
              "no-regexp-v-flag",
              "regexp-v-flag",
              "regexpVFlag",
              "no-regexp-y-flag",
              "regexp-y-flag",
              "regexpYFlag",
              "regexpY",
              "no-resizable-and-growable-arraybuffers",
              "resizable-and-growable-arraybuffers",
              "resizableAndGrowableArraybuffers",
              "no-rest-parameters",
              "rest-parameters",
              "restParameters",
              "no-rest-spread-properties",
              "rest-spread-properties",
              "restSpreadProperties",
              "no-set",
              "set",
              "no-shadow-catch-param",
              "shadow-catch-param",
              "shadowCatchParam",
              "no-shared-array-buffer",
              "shared-array-buffer",
              "sharedArrayBuffer",
              "no-spread-elements",
              "spread-elements",
              "spreadElements",
              "no-string-create-html-methods",
              "string-create-html-methods",
              "stringCreateHtmlMethods",
              "no-string-fromcodepoint",
              "string-fromcodepoint",
              "stringFromcodepoint",
              "no-string-prototype-codepointat",
              "string-prototype-codepointat",
              "stringPrototypeCodepointat",
              "no-string-prototype-endswith",
              "string-prototype-endswith",
              "stringPrototypeEndswith",
              "no-string-prototype-includes",
              "string-prototype-includes",
              "stringPrototypeIncludes",
              "no-string-prototype-iswellformed-towellformed",
              "string-prototype-iswellformed-towellformed",
              "stringPrototypeIswellformedTowellformed",
              "no-string-prototype-matchall",
              "string-prototype-matchall",
              "stringPrototypeMatchall",
              "no-string-prototype-normalize",
              "string-prototype-normalize",
              "stringPrototypeNormalize",
              "no-string-prototype-padstart-padend",
              "string-prototype-padstart-padend",
              "stringPrototypePadstartPadend",
              "no-string-prototype-repeat",
              "string-prototype-repeat",
              "stringPrototypeRepeat",
              "no-string-prototype-replaceall",
              "string-prototype-replaceall",
              "stringPrototypeReplaceall",
              "no-string-prototype-startswith",
              "string-prototype-startswith",
              "stringPrototypeStartswith",
              "no-string-prototype-substr",
              "string-prototype-substr",
              "stringPrototypeSubstr",
              "no-string-prototype-trim",
              "string-prototype-trim",
              "stringPrototypeTrim",
              "no-string-prototype-trimleft-trimright",
              "string-prototype-trimleft-trimright",
              "stringPrototypeTrimleftTrimright",
              "no-string-prototype-trimstart-trimend",
              "string-prototype-trimstart-trimend",
              "stringPrototypeTrimstartTrimend",
              "no-string-raw",
              "string-raw",
              "stringRaw",
              "no-subclassing-builtins",
              "subclassing-builtins",
              "subclassingBuiltins",
              "no-symbol-prototype-description",
              "symbol-prototype-description",
              "symbolPrototypeDescription",
              "no-symbol",
              "symbol",
              "no-template-literals",
              "template-literals",
              "templateLiterals",
              "no-top-level-await",
              "top-level-await",
              "topLevelAwait",
              "no-trailing-commas",
              "trailing-commas",
              "trailingCommas",
              "no-trailing-function-commas",
              "trailing-function-commas",
              "trailingFunctionCommas",
              "trailingCommasInFunctions",
              "no-typed-arrays",
              "typed-arrays",
              "typedArrays",
              "no-unicode-codepoint-escapes",
              "unicode-codepoint-escapes",
              "unicodeCodepointEscapes",
              "unicodeCodePointEscapes",
              "no-weak-map",
              "weak-map",
              "weakMap",
              "no-weak-set",
              "weak-set",
              "weakSet",
              "no-weakrefs",
              "weakrefs"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/no-unsupported-features/node-builtins": [
    {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "allowExperimental": {
          "type": "boolean"
        },
        "ignores": {
          "type": "array",
          "items": {
            "enum": [
              "__filename",
              "__dirname",
              "require",
              "require.cache",
              "require.extensions",
              "require.main",
              "require.resolve",
              "require.resolve.paths",
              "module",
              "module.children",
              "module.exports",
              "module.filename",
              "module.id",
              "module.isPreloading",
              "module.loaded",
              "module.parent",
              "module.path",
              "module.paths",
              "module.require",
              "exports",
              "AbortController",
              "AbortSignal",
              "AbortSignal.abort",
              "AbortSignal.timeout",
              "AbortSignal.any",
              "DOMException",
              "FormData",
              "Headers",
              "MessageEvent",
              "Navigator",
              "Request",
              "Response",
              "WebAssembly",
              "WebSocket",
              "fetch",
              "global",
              "queueMicrotask",
              "navigator",
              "navigator.hardwareConcurrency",
              "navigator.language",
              "navigator.languages",
              "navigator.platform",
              "navigator.userAgent",
              "structuredClone",
              "localStorage",
              "sessionStorage",
              "Storage",
              "Blob",
              "new Buffer()",
              "Buffer",
              "Buffer.alloc",
              "Buffer.allocUnsafe",
              "Buffer.allocUnsafeSlow",
              "Buffer.byteLength",
              "Buffer.compare",
              "Buffer.concat",
              "Buffer.copyBytesFrom",
              "Buffer.from",
              "Buffer.isBuffer",
              "Buffer.isEncoding",
              "File",
              "atob",
              "btoa",
              "console",
              "console.profile",
              "console.profileEnd",
              "console.timeStamp",
              "console.Console",
              "console.assert",
              "console.clear",
              "console.count",
              "console.countReset",
              "console.debug",
              "console.dir",
              "console.dirxml",
              "console.error",
              "console.group",
              "console.groupCollapsed",
              "console.groupEnd",
              "console.info",
              "console.log",
              "console.table",
              "console.time",
              "console.timeEnd",
              "console.timeLog",
              "console.trace",
              "console.warn",
              "crypto",
              "crypto.subtle",
              "crypto.subtle.decrypt",
              "crypto.subtle.deriveBits",
              "crypto.subtle.deriveKey",
              "crypto.subtle.digest",
              "crypto.subtle.encrypt",
              "crypto.subtle.exportKey",
              "crypto.subtle.generateKey",
              "crypto.subtle.importKey",
              "crypto.subtle.sign",
              "crypto.subtle.unwrapKey",
              "crypto.subtle.verify",
              "crypto.subtle.wrapKey",
              "crypto.getRandomValues",
              "crypto.randomUUID",
              "Crypto",
              "CryptoKey",
              "SubtleCrypto",
              "CloseEvent",
              "CustomEvent",
              "Event",
              "EventSource",
              "EventTarget",
              "PerformanceEntry",
              "PerformanceMark",
              "PerformanceMeasure",
              "PerformanceObserver",
              "PerformanceObserverEntryList",
              "PerformanceResourceTiming",
              "performance",
              "performance.clearMarks",
              "performance.clearMeasures",
              "performance.clearResourceTimings",
              "performance.eventLoopUtilization",
              "performance.getEntries",
              "performance.getEntriesByName",
              "performance.getEntriesByType",
              "performance.mark",
              "performance.markResourceTiming",
              "performance.measure",
              "performance.nodeTiming",
              "performance.nodeTiming.bootstrapComplete",
              "performance.nodeTiming.environment",
              "performance.nodeTiming.idleTime",
              "performance.nodeTiming.loopExit",
              "performance.nodeTiming.loopStart",
              "performance.nodeTiming.nodeStart",
              "performance.nodeTiming.uvMetricsInfo",
              "performance.nodeTiming.v8Start",
              "performance.now",
              "performance.onresourcetimingbufferfull",
              "performance.setResourceTimingBufferSize",
              "performance.timeOrigin",
              "performance.timerify",
              "performance.toJSON",
              "process",
              "process.allowedNodeEnvironmentFlags",
              "process.availableMemory",
              "process.arch",
              "process.argv",
              "process.argv0",
              "process.channel",
              "process.config",
              "process.connected",
              "process.debugPort",
              "process.env",
              "process.execArgv",
              "process.execPath",
              "process.exitCode",
              "process.features.cached_builtins",
              "process.features.debug",
              "process.features.inspector",
              "process.features.ipv6",
              "process.features.require_module",
              "process.features.tls",
              "process.features.tls_alpn",
              "process.features.tls_ocsp",
              "process.features.tls_sni",
              "process.features.typescript",
              "process.features.uv",
              "process.finalization.register",
              "process.finalization.registerBeforeExit",
              "process.finalization.unregister",
              "process.getBuiltinModule",
              "process.mainModule",
              "process.noDeprecation",
              "process.permission",
              "process.pid",
              "process.platform",
              "process.ppid",
              "process.release",
              "process.report",
              "process.report.excludeEnv",
              "process.sourceMapsEnabled",
              "process.stdin",
              "process.stdin.isRaw",
              "process.stdin.isTTY",
              "process.stdin.setRawMode",
              "process.stdout",
              "process.stdout.clearLine",
              "process.stdout.clearScreenDown",
              "process.stdout.columns",
              "process.stdout.cursorTo",
              "process.stdout.getColorDepth",
              "process.stdout.getWindowSize",
              "process.stdout.hasColors",
              "process.stdout.isTTY",
              "process.stdout.moveCursor",
              "process.stdout.rows",
              "process.stderr",
              "process.stderr.clearLine",
              "process.stderr.clearScreenDown",
              "process.stderr.columns",
              "process.stderr.cursorTo",
              "process.stderr.getColorDepth",
              "process.stderr.getWindowSize",
              "process.stderr.hasColors",
              "process.stderr.isTTY",
              "process.stderr.moveCursor",
              "process.stderr.rows",
              "process.throwDeprecation",
              "process.title",
              "process.traceDeprecation",
              "process.version",
              "process.versions",
              "process.abort",
              "process.chdir",
              "process.constrainedMemory",
              "process.cpuUsage",
              "process.cwd",
              "process.disconnect",
              "process.dlopen",
              "process.emitWarning",
              "process.exit",
              "process.getActiveResourcesInfo",
              "process.getegid",
              "process.geteuid",
              "process.getgid",
              "process.getgroups",
              "process.getuid",
              "process.hasUncaughtExceptionCaptureCallback",
              "process.hrtime",
              "process.hrtime.bigint",
              "process.initgroups",
              "process.kill",
              "process.loadEnvFile",
              "process.memoryUsage",
              "process.rss",
              "process.nextTick",
              "process.resourceUsage",
              "process.send",
              "process.setegid",
              "process.seteuid",
              "process.setgid",
              "process.setgroups",
              "process.setuid",
              "process.setSourceMapsEnabled",
              "process.setUncaughtExceptionCaptureCallback",
              "process.umask",
              "process.uptime",
              "ReadableStream",
              "ReadableStream.from",
              "ReadableStreamDefaultReader",
              "ReadableStreamBYOBReader",
              "ReadableStreamDefaultController",
              "ReadableByteStreamController",
              "ReadableStreamBYOBRequest",
              "WritableStream",
              "WritableStreamDefaultWriter",
              "WritableStreamDefaultController",
              "TransformStream",
              "TransformStreamDefaultController",
              "ByteLengthQueuingStrategy",
              "CountQueuingStrategy",
              "TextEncoderStream",
              "TextDecoderStream",
              "CompressionStream",
              "DecompressionStream",
              "setInterval",
              "clearInterval",
              "setTimeout",
              "clearTimeout",
              "setImmediate",
              "clearImmediate",
              "URL",
              "URL.canParse",
              "URL.createObjectURL",
              "URL.revokeObjectURL",
              "URLSearchParams",
              "TextDecoder",
              "TextEncoder",
              "BroadcastChannel",
              "MessageChannel",
              "MessagePort",
              "assert",
              "assert.assert",
              "assert.deepEqual",
              "assert.deepStrictEqual",
              "assert.doesNotMatch",
              "assert.doesNotReject",
              "assert.doesNotThrow",
              "assert.equal",
              "assert.fail",
              "assert.ifError",
              "assert.match",
              "assert.notDeepEqual",
              "assert.notDeepStrictEqual",
              "assert.notEqual",
              "assert.notStrictEqual",
              "assert.ok",
              "assert.rejects",
              "assert.strictEqual",
              "assert.throws",
              "assert.CallTracker",
              "assert.strict",
              "assert.strict.assert",
              "assert.strict.deepEqual",
              "assert.strict.deepStrictEqual",
              "assert.strict.doesNotMatch",
              "assert.strict.doesNotReject",
              "assert.strict.doesNotThrow",
              "assert.strict.equal",
              "assert.strict.fail",
              "assert.strict.ifError",
              "assert.strict.match",
              "assert.strict.notDeepEqual",
              "assert.strict.notDeepStrictEqual",
              "assert.strict.notEqual",
              "assert.strict.notStrictEqual",
              "assert.strict.ok",
              "assert.strict.rejects",
              "assert.strict.strictEqual",
              "assert.strict.throws",
              "assert.strict.CallTracker",
              "assert/strict",
              "assert/strict.assert",
              "assert/strict.deepEqual",
              "assert/strict.deepStrictEqual",
              "assert/strict.doesNotMatch",
              "assert/strict.doesNotReject",
              "assert/strict.doesNotThrow",
              "assert/strict.equal",
              "assert/strict.fail",
              "assert/strict.ifError",
              "assert/strict.match",
              "assert/strict.notDeepEqual",
              "assert/strict.notDeepStrictEqual",
              "assert/strict.notEqual",
              "assert/strict.notStrictEqual",
              "assert/strict.ok",
              "assert/strict.rejects",
              "assert/strict.strictEqual",
              "assert/strict.throws",
              "assert/strict.CallTracker",
              "async_hooks",
              "async_hooks.createHook",
              "async_hooks.executionAsyncResource",
              "async_hooks.executionAsyncId",
              "async_hooks.triggerAsyncId",
              "async_hooks.AsyncLocalStorage",
              "async_hooks.AsyncLocalStorage.bind",
              "async_hooks.AsyncLocalStorage.snapshot",
              "async_hooks.AsyncResource",
              "async_hooks.AsyncResource.bind",
              "buffer",
              "buffer.constants",
              "buffer.INSPECT_MAX_BYTES",
              "buffer.kMaxLength",
              "buffer.kStringMaxLength",
              "buffer.atob",
              "buffer.btoa",
              "buffer.isAscii",
              "buffer.isUtf8",
              "buffer.resolveObjectURL",
              "buffer.transcode",
              "buffer.SlowBuffer",
              "buffer.Blob",
              "new buffer.Buffer()",
              "buffer.Buffer",
              "buffer.Buffer.alloc",
              "buffer.Buffer.allocUnsafe",
              "buffer.Buffer.allocUnsafeSlow",
              "buffer.Buffer.byteLength",
              "buffer.Buffer.compare",
              "buffer.Buffer.concat",
              "buffer.Buffer.copyBytesFrom",
              "buffer.Buffer.from",
              "buffer.Buffer.isBuffer",
              "buffer.Buffer.isEncoding",
              "buffer.File",
              "child_process",
              "child_process.exec",
              "child_process.execFile",
              "child_process.fork",
              "child_process.spawn",
              "child_process.execFileSync",
              "child_process.execSync",
              "child_process.spawnSync",
              "child_process.ChildProcess",
              "cluster",
              "cluster.isMaster",
              "cluster.isPrimary",
              "cluster.isWorker",
              "cluster.schedulingPolicy",
              "cluster.settings",
              "cluster.worker",
              "cluster.workers",
              "cluster.disconnect",
              "cluster.fork",
              "cluster.setupMaster",
              "cluster.setupPrimary",
              "cluster.Worker",
              "crypto.constants",
              "crypto.fips",
              "crypto.webcrypto",
              "crypto.webcrypto.subtle",
              "crypto.webcrypto.subtle.decrypt",
              "crypto.webcrypto.subtle.deriveBits",
              "crypto.webcrypto.subtle.deriveKey",
              "crypto.webcrypto.subtle.digest",
              "crypto.webcrypto.subtle.encrypt",
              "crypto.webcrypto.subtle.exportKey",
              "crypto.webcrypto.subtle.generateKey",
              "crypto.webcrypto.subtle.importKey",
              "crypto.webcrypto.subtle.sign",
              "crypto.webcrypto.subtle.unwrapKey",
              "crypto.webcrypto.subtle.verify",
              "crypto.webcrypto.subtle.wrapKey",
              "crypto.webcrypto.getRandomValues",
              "crypto.webcrypto.randomUUID",
              "crypto.checkPrime",
              "crypto.checkPrimeSync",
              "crypto.createCipher",
              "crypto.createCipheriv",
              "crypto.createDecipher",
              "crypto.createDecipheriv",
              "crypto.createDiffieHellman",
              "crypto.createDiffieHellmanGroup",
              "crypto.createECDH",
              "crypto.createHash",
              "crypto.createHmac",
              "crypto.createPrivateKey",
              "crypto.createPublicKey",
              "crypto.createSecretKey",
              "crypto.createSign",
              "crypto.createVerify",
              "crypto.diffieHellman",
              "crypto.generateKey",
              "crypto.generateKeyPair",
              "crypto.generateKeyPairSync",
              "crypto.generateKeySync",
              "crypto.generatePrime",
              "crypto.generatePrimeSync",
              "crypto.getCipherInfo",
              "crypto.getCiphers",
              "crypto.getCurves",
              "crypto.getDiffieHellman",
              "crypto.getFips",
              "crypto.getHashes",
              "crypto.hash",
              "crypto.hkdf",
              "crypto.hkdfSync",
              "crypto.pbkdf2",
              "crypto.pbkdf2Sync",
              "crypto.privateDecrypt",
              "crypto.privateEncrypt",
              "crypto.publicDecrypt",
              "crypto.publicEncrypt",
              "crypto.randomBytes",
              "crypto.randomFillSync",
              "crypto.randomFill",
              "crypto.randomInt",
              "crypto.scrypt",
              "crypto.scryptSync",
              "crypto.secureHeapUsed",
              "crypto.setEngine",
              "crypto.setFips",
              "crypto.sign",
              "crypto.timingSafeEqual",
              "crypto.verify",
              "crypto.Certificate",
              "crypto.Certificate.exportChallenge",
              "crypto.Certificate.exportPublicKey",
              "crypto.Certificate.verifySpkac",
              "crypto.Cipher",
              "crypto.Decipher",
              "crypto.DiffieHellman",
              "crypto.DiffieHellmanGroup",
              "crypto.ECDH",
              "crypto.ECDH.convertKey",
              "crypto.Hash()",
              "new crypto.Hash()",
              "crypto.Hash",
              "crypto.Hmac()",
              "new crypto.Hmac()",
              "crypto.Hmac",
              "crypto.KeyObject",
              "crypto.KeyObject.from",
              "crypto.Sign",
              "crypto.Verify",
              "crypto.X509Certificate",
              "dgram",
              "dgram.createSocket",
              "dgram.Socket",
              "diagnostics_channel",
              "diagnostics_channel.hasSubscribers",
              "diagnostics_channel.channel",
              "diagnostics_channel.subscribe",
              "diagnostics_channel.unsubscribe",
              "diagnostics_channel.tracingChannel",
              "diagnostics_channel.Channel",
              "diagnostics_channel.TracingChannel",
              "dns",
              "dns.Resolver",
              "dns.getServers",
              "dns.lookup",
              "dns.lookupService",
              "dns.resolve",
              "dns.resolve4",
              "dns.resolve6",
              "dns.resolveAny",
              "dns.resolveCname",
              "dns.resolveCaa",
              "dns.resolveMx",
              "dns.resolveNaptr",
              "dns.resolveNs",
              "dns.resolvePtr",
              "dns.resolveSoa",
              "dns.resolveSrv",
              "dns.resolveTxt",
              "dns.reverse",
              "dns.setDefaultResultOrder",
              "dns.getDefaultResultOrder",
              "dns.setServers",
              "dns.promises",
              "dns.promises.Resolver",
              "dns.promises.cancel",
              "dns.promises.getServers",
              "dns.promises.lookup",
              "dns.promises.lookupService",
              "dns.promises.resolve",
              "dns.promises.resolve4",
              "dns.promises.resolve6",
              "dns.promises.resolveAny",
              "dns.promises.resolveCaa",
              "dns.promises.resolveCname",
              "dns.promises.resolveMx",
              "dns.promises.resolveNaptr",
              "dns.promises.resolveNs",
              "dns.promises.resolvePtr",
              "dns.promises.resolveSoa",
              "dns.promises.resolveSrv",
              "dns.promises.resolveTxt",
              "dns.promises.reverse",
              "dns.promises.setDefaultResultOrder",
              "dns.promises.getDefaultResultOrder",
              "dns.promises.setServers",
              "dns/promises",
              "dns/promises.Resolver",
              "dns/promises.cancel",
              "dns/promises.getServers",
              "dns/promises.lookup",
              "dns/promises.lookupService",
              "dns/promises.resolve",
              "dns/promises.resolve4",
              "dns/promises.resolve6",
              "dns/promises.resolveAny",
              "dns/promises.resolveCaa",
              "dns/promises.resolveCname",
              "dns/promises.resolveMx",
              "dns/promises.resolveNaptr",
              "dns/promises.resolveNs",
              "dns/promises.resolvePtr",
              "dns/promises.resolveSoa",
              "dns/promises.resolveSrv",
              "dns/promises.resolveTxt",
              "dns/promises.reverse",
              "dns/promises.setDefaultResultOrder",
              "dns/promises.getDefaultResultOrder",
              "dns/promises.setServers",
              "domain",
              "domain.create",
              "domain.Domain",
              "events",
              "events.Event",
              "events.EventTarget",
              "events.CustomEvent",
              "events.NodeEventTarget",
              "events.EventEmitter",
              "events.EventEmitter.defaultMaxListeners",
              "events.EventEmitter.errorMonitor",
              "events.EventEmitter.captureRejections",
              "events.EventEmitter.captureRejectionSymbol",
              "events.EventEmitter.getEventListeners",
              "events.EventEmitter.getMaxListeners",
              "events.EventEmitter.once",
              "events.EventEmitter.listenerCount",
              "events.EventEmitter.on",
              "events.EventEmitter.setMaxListeners",
              "events.EventEmitter.addAbortListener",
              "events.EventEmitterAsyncResource",
              "events.EventEmitterAsyncResource.defaultMaxListeners",
              "events.EventEmitterAsyncResource.errorMonitor",
              "events.EventEmitterAsyncResource.captureRejections",
              "events.EventEmitterAsyncResource.captureRejectionSymbol",
              "events.EventEmitterAsyncResource.getEventListeners",
              "events.EventEmitterAsyncResource.getMaxListeners",
              "events.EventEmitterAsyncResource.once",
              "events.EventEmitterAsyncResource.listenerCount",
              "events.EventEmitterAsyncResource.on",
              "events.EventEmitterAsyncResource.setMaxListeners",
              "events.EventEmitterAsyncResource.addAbortListener",
              "events.defaultMaxListeners",
              "events.errorMonitor",
              "events.captureRejections",
              "events.captureRejectionSymbol",
              "events.getEventListeners",
              "events.getMaxListeners",
              "events.once",
              "events.listenerCount",
              "events.on",
              "events.setMaxListeners",
              "events.addAbortListener",
              "fs",
              "fs.promises",
              "fs.promises.FileHandle",
              "fs.promises.access",
              "fs.promises.appendFile",
              "fs.promises.chmod",
              "fs.promises.chown",
              "fs.promises.constants",
              "fs.promises.copyFile",
              "fs.promises.cp",
              "fs.promises.glob",
              "fs.promises.lchmod",
              "fs.promises.lchown",
              "fs.promises.link",
              "fs.promises.lstat",
              "fs.promises.lutimes",
              "fs.promises.mkdir",
              "fs.promises.mkdtemp",
              "fs.promises.open",
              "fs.promises.opendir",
              "fs.promises.readFile",
              "fs.promises.readdir",
              "fs.promises.readlink",
              "fs.promises.realpath",
              "fs.promises.rename",
              "fs.promises.rm",
              "fs.promises.rmdir",
              "fs.promises.stat",
              "fs.promises.statfs",
              "fs.promises.symlink",
              "fs.promises.truncate",
              "fs.promises.unlink",
              "fs.promises.utimes",
              "fs.promises.watch",
              "fs.promises.writeFile",
              "fs.access",
              "fs.appendFile",
              "fs.chmod",
              "fs.chown",
              "fs.close",
              "fs.copyFile",
              "fs.cp",
              "fs.createReadStream",
              "fs.createWriteStream",
              "fs.exists",
              "fs.fchmod",
              "fs.fchown",
              "fs.fdatasync",
              "fs.fstat",
              "fs.fsync",
              "fs.ftruncate",
              "fs.futimes",
              "fs.glob",
              "fs.lchmod",
              "fs.lchown",
              "fs.link",
              "fs.lstat",
              "fs.lutimes",
              "fs.mkdir",
              "fs.mkdtemp",
              "fs.native",
              "fs.open",
              "fs.openAsBlob",
              "fs.opendir",
              "fs.read",
              "fs.readdir",
              "fs.readFile",
              "fs.readlink",
              "fs.readv",
              "fs.realpath",
              "fs.realpath.native",
              "fs.rename",
              "fs.rm",
              "fs.rmdir",
              "fs.stat",
              "fs.statfs",
              "fs.symlink",
              "fs.truncate",
              "fs.unlink",
              "fs.unwatchFile",
              "fs.utimes",
              "fs.watch",
              "fs.watchFile",
              "fs.write",
              "fs.writeFile",
              "fs.writev",
              "fs.accessSync",
              "fs.appendFileSync",
              "fs.chmodSync",
              "fs.chownSync",
              "fs.closeSync",
              "fs.copyFileSync",
              "fs.cpSync",
              "fs.existsSync",
              "fs.fchmodSync",
              "fs.fchownSync",
              "fs.fdatasyncSync",
              "fs.fstatSync",
              "fs.fsyncSync",
              "fs.ftruncateSync",
              "fs.futimesSync",
              "fs.globSync",
              "fs.lchmodSync",
              "fs.lchownSync",
              "fs.linkSync",
              "fs.lstatSync",
              "fs.lutimesSync",
              "fs.mkdirSync",
              "fs.mkdtempSync",
              "fs.opendirSync",
              "fs.openSync",
              "fs.readdirSync",
              "fs.readFileSync",
              "fs.readlinkSync",
              "fs.readSync",
              "fs.readvSync",
              "fs.realpathSync",
              "fs.realpathSync.native",
              "fs.renameSync",
              "fs.rmdirSync",
              "fs.rmSync",
              "fs.statfsSync",
              "fs.statSync",
              "fs.symlinkSync",
              "fs.truncateSync",
              "fs.unlinkSync",
              "fs.utimesSync",
              "fs.writeFileSync",
              "fs.writeSync",
              "fs.writevSync",
              "fs.constants",
              "fs.Dir",
              "fs.Dirent",
              "fs.FSWatcher",
              "fs.StatWatcher",
              "fs.ReadStream",
              "fs.Stats()",
              "new fs.Stats()",
              "fs.Stats",
              "fs.StatFs",
              "fs.WriteStream",
              "fs.common_objects",
              "fs/promises",
              "fs/promises.FileHandle",
              "fs/promises.access",
              "fs/promises.appendFile",
              "fs/promises.chmod",
              "fs/promises.chown",
              "fs/promises.constants",
              "fs/promises.copyFile",
              "fs/promises.cp",
              "fs/promises.glob",
              "fs/promises.lchmod",
              "fs/promises.lchown",
              "fs/promises.link",
              "fs/promises.lstat",
              "fs/promises.lutimes",
              "fs/promises.mkdir",
              "fs/promises.mkdtemp",
              "fs/promises.open",
              "fs/promises.opendir",
              "fs/promises.readFile",
              "fs/promises.readdir",
              "fs/promises.readlink",
              "fs/promises.realpath",
              "fs/promises.rename",
              "fs/promises.rm",
              "fs/promises.rmdir",
              "fs/promises.stat",
              "fs/promises.statfs",
              "fs/promises.symlink",
              "fs/promises.truncate",
              "fs/promises.unlink",
              "fs/promises.utimes",
              "fs/promises.watch",
              "fs/promises.writeFile",
              "http2",
              "http2.constants",
              "http2.sensitiveHeaders",
              "http2.createServer",
              "http2.createSecureServer",
              "http2.connect",
              "http2.getDefaultSettings",
              "http2.getPackedSettings",
              "http2.getUnpackedSettings",
              "http2.performServerHandshake",
              "http2.Http2Session",
              "http2.ServerHttp2Session",
              "http2.ClientHttp2Session",
              "http2.Http2Stream",
              "http2.ClientHttp2Stream",
              "http2.ServerHttp2Stream",
              "http2.Http2Server",
              "http2.Http2SecureServer",
              "http2.Http2ServerRequest",
              "http2.Http2ServerResponse",
              "http",
              "http.METHODS",
              "http.STATUS_CODES",
              "http.globalAgent",
              "http.maxHeaderSize",
              "http.createServer",
              "http.get",
              "http.request",
              "http.validateHeaderName",
              "http.validateHeaderValue",
              "http.setMaxIdleHTTPParsers",
              "http.Agent",
              "http.ClientRequest",
              "http.Server",
              "http.ServerResponse",
              "http.IncomingMessage",
              "http.OutgoingMessage",
              "http.WebSocket",
              "https",
              "https.globalAgent",
              "https.createServer",
              "https.get",
              "https.request",
              "https.Agent",
              "https.Server",
              "inspector",
              "inspector.Session",
              "inspector.Network.loadingFailed",
              "inspector.Network.loadingFinished",
              "inspector.Network.requestWillBeSent",
              "inspector.Network.responseReceived",
              "inspector.console",
              "inspector.close",
              "inspector.open",
              "inspector.url",
              "inspector.waitForDebugger",
              "inspector/promises",
              "inspector/promises.Session",
              "inspector/promises.Network.loadingFailed",
              "inspector/promises.Network.loadingFinished",
              "inspector/promises.Network.requestWillBeSent",
              "inspector/promises.Network.responseReceived",
              "inspector/promises.console",
              "inspector/promises.close",
              "inspector/promises.open",
              "inspector/promises.url",
              "inspector/promises.waitForDebugger",
              "module.builtinModules",
              "module.constants.compileCacheStatus",
              "module.createRequire",
              "module.createRequireFromPath",
              "module.enableCompileCache",
              "module.findPackageJSON",
              "module.flushCompileCache",
              "module.getCompileCacheDir",
              "module.isBuiltin",
              "module.register",
              "module.stripTypeScriptTypes",
              "module.syncBuiltinESMExports",
              "module.findSourceMap",
              "module.SourceMap",
              "module.Module.builtinModules",
              "module.Module.createRequire",
              "module.Module.createRequireFromPath",
              "module.Module.enableCompileCache",
              "module.Module.findPackageJSON",
              "module.Module.flushCompileCache",
              "module.Module.getCompileCacheDir",
              "module.Module.isBuiltin",
              "module.Module.register",
              "module.Module.stripTypeScriptTypes",
              "module.Module.syncBuiltinESMExports",
              "module.Module.findSourceMap",
              "module.Module.SourceMap",
              "net",
              "net.connect",
              "net.createConnection",
              "net.createServer",
              "net.getDefaultAutoSelectFamily",
              "net.setDefaultAutoSelectFamily",
              "net.getDefaultAutoSelectFamilyAttemptTimeout",
              "net.setDefaultAutoSelectFamilyAttemptTimeout",
              "net.isIP",
              "net.isIPv4",
              "net.isIPv6",
              "net.BlockList",
              "net.SocketAddress",
              "net.Server",
              "net.Socket",
              "os",
              "os.EOL",
              "os.constants",
              "os.constants.priority",
              "os.devNull",
              "os.availableParallelism",
              "os.arch",
              "os.cpus",
              "os.endianness",
              "os.freemem",
              "os.getPriority",
              "os.homedir",
              "os.hostname",
              "os.loadavg",
              "os.machine",
              "os.networkInterfaces",
              "os.platform",
              "os.release",
              "os.setPriority",
              "os.tmpdir",
              "os.totalmem",
              "os.type",
              "os.uptime",
              "os.userInfo",
              "os.version",
              "path",
              "path.posix",
              "path.posix.delimiter",
              "path.posix.sep",
              "path.posix.basename",
              "path.posix.dirname",
              "path.posix.extname",
              "path.posix.format",
              "path.posix.matchesGlob",
              "path.posix.isAbsolute",
              "path.posix.join",
              "path.posix.normalize",
              "path.posix.parse",
              "path.posix.relative",
              "path.posix.resolve",
              "path.posix.toNamespacedPath",
              "path.win32",
              "path.win32.delimiter",
              "path.win32.sep",
              "path.win32.basename",
              "path.win32.dirname",
              "path.win32.extname",
              "path.win32.format",
              "path.win32.matchesGlob",
              "path.win32.isAbsolute",
              "path.win32.join",
              "path.win32.normalize",
              "path.win32.parse",
              "path.win32.relative",
              "path.win32.resolve",
              "path.win32.toNamespacedPath",
              "path.delimiter",
              "path.sep",
              "path.basename",
              "path.dirname",
              "path.extname",
              "path.format",
              "path.matchesGlob",
              "path.isAbsolute",
              "path.join",
              "path.normalize",
              "path.parse",
              "path.relative",
              "path.resolve",
              "path.toNamespacedPath",
              "path/posix",
              "path/posix.delimiter",
              "path/posix.sep",
              "path/posix.basename",
              "path/posix.dirname",
              "path/posix.extname",
              "path/posix.format",
              "path/posix.matchesGlob",
              "path/posix.isAbsolute",
              "path/posix.join",
              "path/posix.normalize",
              "path/posix.parse",
              "path/posix.relative",
              "path/posix.resolve",
              "path/posix.toNamespacedPath",
              "path/win32",
              "path/win32.delimiter",
              "path/win32.sep",
              "path/win32.basename",
              "path/win32.dirname",
              "path/win32.extname",
              "path/win32.format",
              "path/win32.matchesGlob",
              "path/win32.isAbsolute",
              "path/win32.join",
              "path/win32.normalize",
              "path/win32.parse",
              "path/win32.relative",
              "path/win32.resolve",
              "path/win32.toNamespacedPath",
              "perf_hooks",
              "perf_hooks.performance",
              "perf_hooks.performance.clearMarks",
              "perf_hooks.performance.clearMeasures",
              "perf_hooks.performance.clearResourceTimings",
              "perf_hooks.performance.eventLoopUtilization",
              "perf_hooks.performance.getEntries",
              "perf_hooks.performance.getEntriesByName",
              "perf_hooks.performance.getEntriesByType",
              "perf_hooks.performance.mark",
              "perf_hooks.performance.markResourceTiming",
              "perf_hooks.performance.measure",
              "perf_hooks.performance.nodeTiming",
              "perf_hooks.performance.nodeTiming.bootstrapComplete",
              "perf_hooks.performance.nodeTiming.environment",
              "perf_hooks.performance.nodeTiming.idleTime",
              "perf_hooks.performance.nodeTiming.loopExit",
              "perf_hooks.performance.nodeTiming.loopStart",
              "perf_hooks.performance.nodeTiming.nodeStart",
              "perf_hooks.performance.nodeTiming.uvMetricsInfo",
              "perf_hooks.performance.nodeTiming.v8Start",
              "perf_hooks.performance.now",
              "perf_hooks.performance.onresourcetimingbufferfull",
              "perf_hooks.performance.setResourceTimingBufferSize",
              "perf_hooks.performance.timeOrigin",
              "perf_hooks.performance.timerify",
              "perf_hooks.performance.toJSON",
              "perf_hooks.createHistogram",
              "perf_hooks.monitorEventLoopDelay",
              "perf_hooks.PerformanceEntry",
              "perf_hooks.PerformanceMark",
              "perf_hooks.PerformanceMeasure",
              "perf_hooks.PerformanceNodeEntry",
              "perf_hooks.PerformanceNodeTiming",
              "perf_hooks.PerformanceResourceTiming",
              "perf_hooks.PerformanceObserver",
              "perf_hooks.PerformanceObserverEntryList",
              "perf_hooks.Histogram",
              "perf_hooks.IntervalHistogram",
              "perf_hooks.RecordableHistogram",
              "punycode",
              "punycode.ucs2",
              "punycode.version",
              "punycode.decode",
              "punycode.encode",
              "punycode.toASCII",
              "punycode.toUnicode",
              "querystring",
              "querystring.decode",
              "querystring.encode",
              "querystring.escape",
              "querystring.parse",
              "querystring.stringify",
              "querystring.unescape",
              "readline",
              "readline.promises",
              "readline.promises.createInterface",
              "readline.promises.Interface",
              "readline.promises.Readline",
              "readline.clearLine",
              "readline.clearScreenDown",
              "readline.createInterface",
              "readline.cursorTo",
              "readline.moveCursor",
              "readline.Interface",
              "readline.emitKeypressEvents",
              "readline.InterfaceConstructor",
              "readline/promises",
              "readline/promises.createInterface",
              "readline/promises.Interface",
              "readline/promises.Readline",
              "repl",
              "repl.start",
              "repl.writer",
              "repl.REPLServer()",
              "repl.REPLServer",
              "repl.REPL_MODE_MAGIC",
              "repl.REPL_MODE_SLOPPY",
              "repl.REPL_MODE_STRICT",
              "repl.Recoverable()",
              "repl.Recoverable",
              "repl.builtinModules",
              "sea",
              "sea.isSea",
              "sea.getAsset",
              "sea.getAssetAsBlob",
              "sea.getRawAsset",
              "sea.sea.isSea",
              "sea.sea.getAsset",
              "sea.sea.getAssetAsBlob",
              "sea.sea.getRawAsset",
              "stream",
              "stream.promises",
              "stream.promises.pipeline",
              "stream.promises.finished",
              "stream.finished",
              "stream.pipeline",
              "stream.compose",
              "stream.duplexPair",
              "stream.Readable",
              "stream.Readable.from",
              "stream.Readable.isDisturbed",
              "stream.Readable.fromWeb",
              "stream.Readable.toWeb",
              "stream.Writable",
              "stream.Writable.fromWeb",
              "stream.Writable.toWeb",
              "stream.Duplex",
              "stream.Duplex.from",
              "stream.Duplex.fromWeb",
              "stream.Duplex.toWeb",
              "stream.Transform",
              "stream.isErrored",
              "stream.isReadable",
              "stream.addAbortSignal",
              "stream.getDefaultHighWaterMark",
              "stream.setDefaultHighWaterMark",
              "stream/promises.pipeline",
              "stream/promises.finished",
              "stream/web",
              "stream/web.ReadableStream",
              "stream/web.ReadableStream.from",
              "stream/web.ReadableStreamDefaultReader",
              "stream/web.ReadableStreamBYOBReader",
              "stream/web.ReadableStreamDefaultController",
              "stream/web.ReadableByteStreamController",
              "stream/web.ReadableStreamBYOBRequest",
              "stream/web.WritableStream",
              "stream/web.WritableStreamDefaultWriter",
              "stream/web.WritableStreamDefaultController",
              "stream/web.TransformStream",
              "stream/web.TransformStreamDefaultController",
              "stream/web.ByteLengthQueuingStrategy",
              "stream/web.CountQueuingStrategy",
              "stream/web.TextEncoderStream",
              "stream/web.TextDecoderStream",
              "stream/web.CompressionStream",
              "stream/web.DecompressionStream",
              "stream/consumers",
              "stream/consumers.arrayBuffer",
              "stream/consumers.blob",
              "stream/consumers.buffer",
              "stream/consumers.json",
              "stream/consumers.text",
              "string_decoder",
              "string_decoder.StringDecoder",
              "sqlite",
              "sqlite.DatabaseSync",
              "sqlite.StatementSync",
              "sqlite.SQLITE_CHANGESET_OMIT",
              "sqlite.SQLITE_CHANGESET_REPLACE",
              "sqlite.SQLITE_CHANGESET_ABORT",
              "test",
              "test.after",
              "test.afterEach",
              "test.before",
              "test.beforeEach",
              "test.describe",
              "test.describe.only",
              "test.describe.skip",
              "test.describe.todo",
              "test.it",
              "test.it.only",
              "test.it.skip",
              "test.it.todo",
              "test.mock",
              "test.mock.fn",
              "test.mock.getter",
              "test.mock.method",
              "test.mock.module",
              "test.mock.reset",
              "test.mock.restoreAll",
              "test.mock.setter",
              "test.mock.timers",
              "test.mock.timers.enable",
              "test.mock.timers.reset",
              "test.mock.timers.tick",
              "test.only",
              "test.run",
              "test.snapshot",
              "test.snapshot.setDefaultSnapshotSerializers",
              "test.snapshot.setResolveSnapshotPath",
              "test.skip",
              "test.suite",
              "test.test",
              "test.test.only",
              "test.test.skip",
              "test.test.todo",
              "test.todo",
              "timers",
              "timers.Immediate",
              "timers.Timeout",
              "timers.setImmediate",
              "timers.clearImmediate",
              "timers.setInterval",
              "timers.clearInterval",
              "timers.setTimeout",
              "timers.clearTimeout",
              "timers.promises",
              "timers.promises.setTimeout",
              "timers.promises.setImmediate",
              "timers.promises.setInterval",
              "timers.promises.scheduler.wait",
              "timers.promises.scheduler.yield",
              "timers/promises",
              "timers/promises.setTimeout",
              "timers/promises.setImmediate",
              "timers/promises.setInterval",
              "timers/promises.scheduler.wait",
              "timers/promises.scheduler.yield",
              "tls",
              "tls.rootCertificates",
              "tls.DEFAULT_ECDH_CURVE",
              "tls.DEFAULT_MAX_VERSION",
              "tls.DEFAULT_MIN_VERSION",
              "tls.DEFAULT_CIPHERS",
              "tls.checkServerIdentity",
              "tls.connect",
              "tls.createSecureContext",
              "tls.createSecurePair",
              "tls.createServer",
              "tls.getCiphers",
              "tls.SecureContext",
              "tls.CryptoStream",
              "tls.SecurePair",
              "tls.Server",
              "tls.TLSSocket",
              "trace_events",
              "trace_events.createTracing",
              "trace_events.getEnabledCategories",
              "tty",
              "tty.isatty",
              "tty.ReadStream",
              "tty.WriteStream",
              "url",
              "url.domainToASCII",
              "url.domainToUnicode",
              "url.fileURLToPath",
              "url.format",
              "url.pathToFileURL",
              "url.urlToHttpOptions",
              "url.URL",
              "url.URL.canParse",
              "url.URL.createObjectURL",
              "url.URL.revokeObjectURL",
              "url.URLSearchParams",
              "url.Url",
              "util.promisify",
              "util.promisify.custom",
              "util.callbackify",
              "util.debuglog",
              "util.debug",
              "util.deprecate",
              "util.format",
              "util.formatWithOptions",
              "util.getCallSite",
              "util.getCallSites",
              "util.getSystemErrorName",
              "util.getSystemErrorMap",
              "util.getSystemErrorMessage",
              "util.inherits",
              "util.inspect",
              "util.inspect.custom",
              "util.inspect.defaultOptions",
              "util.inspect.replDefaults",
              "util.isDeepStrictEqual",
              "util.parseArgs",
              "util.parseEnv",
              "util.stripVTControlCharacters",
              "util.styleText",
              "util.toUSVString",
              "util.transferableAbortController",
              "util.transferableAbortSignal",
              "util.aborted",
              "util.MIMEType",
              "util.MIMEParams",
              "util.TextDecoder",
              "util.TextEncoder",
              "util.types",
              "util.types.isExternal",
              "util.types.isDate",
              "util.types.isArgumentsObject",
              "util.types.isBigIntObject",
              "util.types.isBooleanObject",
              "util.types.isNumberObject",
              "util.types.isStringObject",
              "util.types.isSymbolObject",
              "util.types.isNativeError",
              "util.types.isRegExp",
              "util.types.isAsyncFunction",
              "util.types.isGeneratorFunction",
              "util.types.isGeneratorObject",
              "util.types.isPromise",
              "util.types.isMap",
              "util.types.isSet",
              "util.types.isMapIterator",
              "util.types.isSetIterator",
              "util.types.isWeakMap",
              "util.types.isWeakSet",
              "util.types.isArrayBuffer",
              "util.types.isDataView",
              "util.types.isSharedArrayBuffer",
              "util.types.isProxy",
              "util.types.isModuleNamespaceObject",
              "util.types.isAnyArrayBuffer",
              "util.types.isBoxedPrimitive",
              "util.types.isArrayBufferView",
              "util.types.isTypedArray",
              "util.types.isUint8Array",
              "util.types.isUint8ClampedArray",
              "util.types.isUint16Array",
              "util.types.isUint32Array",
              "util.types.isInt8Array",
              "util.types.isInt16Array",
              "util.types.isInt32Array",
              "util.types.isFloat32Array",
              "util.types.isFloat64Array",
              "util.types.isBigInt64Array",
              "util.types.isBigUint64Array",
              "util.types.isKeyObject",
              "util.types.isCryptoKey",
              "util.types.isWebAssemblyCompiledModule",
              "util._extend",
              "util.isArray",
              "util.isBoolean",
              "util.isBuffer",
              "util.isDate",
              "util.isError",
              "util.isFunction",
              "util.isNull",
              "util.isNullOrUndefined",
              "util.isNumber",
              "util.isObject",
              "util.isPrimitive",
              "util.isRegExp",
              "util.isString",
              "util.isSymbol",
              "util.isUndefined",
              "util.log",
              "util",
              "util/types",
              "util/types.isExternal",
              "util/types.isDate",
              "util/types.isArgumentsObject",
              "util/types.isBigIntObject",
              "util/types.isBooleanObject",
              "util/types.isNumberObject",
              "util/types.isStringObject",
              "util/types.isSymbolObject",
              "util/types.isNativeError",
              "util/types.isRegExp",
              "util/types.isAsyncFunction",
              "util/types.isGeneratorFunction",
              "util/types.isGeneratorObject",
              "util/types.isPromise",
              "util/types.isMap",
              "util/types.isSet",
              "util/types.isMapIterator",
              "util/types.isSetIterator",
              "util/types.isWeakMap",
              "util/types.isWeakSet",
              "util/types.isArrayBuffer",
              "util/types.isDataView",
              "util/types.isSharedArrayBuffer",
              "util/types.isProxy",
              "util/types.isModuleNamespaceObject",
              "util/types.isAnyArrayBuffer",
              "util/types.isBoxedPrimitive",
              "util/types.isArrayBufferView",
              "util/types.isTypedArray",
              "util/types.isUint8Array",
              "util/types.isUint8ClampedArray",
              "util/types.isUint16Array",
              "util/types.isUint32Array",
              "util/types.isInt8Array",
              "util/types.isInt16Array",
              "util/types.isInt32Array",
              "util/types.isFloat32Array",
              "util/types.isFloat64Array",
              "util/types.isBigInt64Array",
              "util/types.isBigUint64Array",
              "util/types.isKeyObject",
              "util/types.isCryptoKey",
              "util/types.isWebAssemblyCompiledModule",
              "v8",
              "v8.serialize",
              "v8.deserialize",
              "v8.Serializer",
              "v8.Deserializer",
              "v8.DefaultSerializer",
              "v8.DefaultDeserializer",
              "v8.promiseHooks",
              "v8.promiseHooks.onInit",
              "v8.promiseHooks.onSettled",
              "v8.promiseHooks.onBefore",
              "v8.promiseHooks.onAfter",
              "v8.promiseHooks.createHook",
              "v8.startupSnapshot",
              "v8.startupSnapshot.addSerializeCallback",
              "v8.startupSnapshot.addDeserializeCallback",
              "v8.startupSnapshot.setDeserializeMainFunction",
              "v8.startupSnapshot.isBuildingSnapshot",
              "v8.cachedDataVersionTag",
              "v8.getHeapCodeStatistics",
              "v8.getHeapSnapshot",
              "v8.getHeapSpaceStatistics",
              "v8.getHeapStatistics",
              "v8.queryObjects",
              "v8.setFlagsFromString",
              "v8.stopCoverage",
              "v8.takeCoverage",
              "v8.writeHeapSnapshot",
              "v8.setHeapSnapshotNearHeapLimit",
              "v8.GCProfiler",
              "vm.constants",
              "vm.compileFunction",
              "vm.createContext",
              "vm.isContext",
              "vm.measureMemory",
              "vm.runInContext",
              "vm.runInNewContext",
              "vm.runInThisContext",
              "vm.Script",
              "vm.Module",
              "vm.SourceTextModule",
              "vm.SyntheticModule",
              "vm",
              "wasi.WASI",
              "wasi",
              "worker_threads",
              "worker_threads.isMainThread",
              "worker_threads.parentPort",
              "worker_threads.resourceLimits",
              "worker_threads.SHARE_ENV",
              "worker_threads.threadId",
              "worker_threads.workerData",
              "worker_threads.getEnvironmentData",
              "worker_threads.markAsUncloneable",
              "worker_threads.markAsUntransferable",
              "worker_threads.isMarkedAsUntransferable",
              "worker_threads.moveMessagePortToContext",
              "worker_threads.postMessageToThread",
              "worker_threads.receiveMessageOnPort",
              "worker_threads.setEnvironmentData",
              "worker_threads.BroadcastChannel",
              "worker_threads.MessageChannel",
              "worker_threads.MessagePort",
              "worker_threads.Worker",
              "zlib.constants",
              "zlib.crc32",
              "zlib.createBrotliCompress",
              "zlib.createBrotliDecompress",
              "zlib.createDeflate",
              "zlib.createDeflateRaw",
              "zlib.createGunzip",
              "zlib.createGzip",
              "zlib.createInflate",
              "zlib.createInflateRaw",
              "zlib.createUnzip",
              "zlib.brotliCompress",
              "zlib.brotliCompressSync",
              "zlib.brotliDecompress",
              "zlib.brotliDecompressSync",
              "zlib.deflate",
              "zlib.deflateSync",
              "zlib.deflateRaw",
              "zlib.deflateRawSync",
              "zlib.gunzip",
              "zlib.gunzipSync",
              "zlib.gzip",
              "zlib.gzipSync",
              "zlib.inflate",
              "zlib.inflateSync",
              "zlib.inflateRaw",
              "zlib.inflateRawSync",
              "zlib.unzip",
              "zlib.unzipSync",
              "zlib.BrotliCompress()",
              "zlib.BrotliCompress",
              "zlib.BrotliDecompress()",
              "zlib.BrotliDecompress",
              "zlib.Deflate()",
              "zlib.Deflate",
              "zlib.DeflateRaw()",
              "zlib.DeflateRaw",
              "zlib.Gunzip()",
              "zlib.Gunzip",
              "zlib.Gzip()",
              "zlib.Gzip",
              "zlib.Inflate()",
              "zlib.Inflate",
              "zlib.InflateRaw()",
              "zlib.InflateRaw",
              "zlib.Unzip()",
              "zlib.Unzip",
              "zlib",
              "import.meta.resolve",
              "import.meta.dirname",
              "import.meta.filename"
            ]
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "n/prefer-global/buffer": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/console": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/process": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/text-decoder": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/text-encoder": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/url": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-global/url-search-params": [
    {
      "enum": [
        "always",
        "never"
      ]
    }
  ],
  "n/prefer-node-protocol": [
    {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "n/prefer-promises/dns": [],
  "n/prefer-promises/fs": [],
  "n/process-exit-as-throw": [],
  "n/shebang": [
    {
      "type": "object",
      "properties": {
        "convertPath": {
          "anyOf": [
            {
              "type": "object",
              "properties": {},
              "patternProperties": {
                "^.+$": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 2,
                  "maxItems": 2
                }
              },
              "additionalProperties": false
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "include": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "exclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "replace": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 2,
                    "maxItems": 2
                  }
                },
                "additionalProperties": false,
                "required": [
                  "include",
                  "replace"
                ]
              },
              "minItems": 1
            }
          ]
        },
        "ignoreUnpublished": {
          "type": "boolean"
        },
        "additionalExecutables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "executableMap": {
          "type": "object",
          "patternProperties": {
            "^\\\\.\\\\w+$": {
              "type": "string",
              "pattern": "^[\\\\w-]+$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ]
}
`;

exports[`Plugin \"perfectionist\" config rules > Snapshot of the schema has not been changed 1`] = `
{
  "perfectionist/sort-array-includes": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "literals-first",
            "spreads-first"
          ],
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "literal",
                            "spread"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "literal",
                      "spread"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-classes": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "modifiers": {
                          "items": {
                            "enum": [
                              "async",
                              "protected",
                              "private",
                              "public",
                              "static",
                              "abstract",
                              "override",
                              "readonly",
                              "decorated",
                              "declare",
                              "optional"
                            ],
                            "type": "string"
                          },
                          "description": "Modifier filters.",
                          "type": "array"
                        },
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "accessor-property",
                            "index-signature",
                            "constructor",
                            "static-block",
                            "get-method",
                            "set-method",
                            "function-property",
                            "property",
                            "method"
                          ],
                          "type": "string"
                        },
                        "decoratorNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "elementValuePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "modifiers": {
                    "items": {
                      "enum": [
                        "async",
                        "protected",
                        "private",
                        "public",
                        "static",
                        "abstract",
                        "override",
                        "readonly",
                        "decorated",
                        "declare",
                        "optional"
                      ],
                      "type": "string"
                    },
                    "description": "Modifier filters.",
                    "type": "array"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "accessor-property",
                      "index-signature",
                      "constructor",
                      "static-block",
                      "get-method",
                      "set-method",
                      "function-property",
                      "property",
                      "method"
                    ],
                    "type": "string"
                  },
                  "decoratorNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "elementValuePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "ignoreCallbackDependenciesPatterns": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-decorators": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "sortOnParameters": {
          "description": "Controls whether sorting should be enabled for method parameter decorators.",
          "type": "boolean"
        },
        "sortOnProperties": {
          "description": "Controls whether sorting should be enabled for class property decorators.",
          "type": "boolean"
        },
        "sortOnAccessors": {
          "description": "Controls whether sorting should be enabled for class accessor decorators.",
          "type": "boolean"
        },
        "sortOnMethods": {
          "description": "Controls whether sorting should be enabled for class method decorators.",
          "type": "boolean"
        },
        "sortOnClasses": {
          "description": "Controls whether sorting should be enabled for class decorators.",
          "type": "boolean"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "customGroups": {
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "description": "Specifies custom groups.",
          "type": "object"
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-enums": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "oneOf": [
            {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "description": "Specifies custom groups.",
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "forceNumericSort": {
          "description": "Will always sort numeric enums by their value regardless of the sort type specified.",
          "type": "boolean"
        },
        "sortByValue": {
          "description": "Compare enum values instead of names.",
          "type": "boolean"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-exports": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "values-first",
            "types-first"
          ],
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "modifiers": {
                          "items": {
                            "enum": [
                              "value",
                              "type"
                            ],
                            "type": "string"
                          },
                          "description": "Modifier filters.",
                          "type": "array"
                        },
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "export"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "modifiers": {
                    "items": {
                      "enum": [
                        "value",
                        "type"
                      ],
                      "type": "string"
                    },
                    "description": "Modifier filters.",
                    "type": "array"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "export"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-heritage-clauses": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ]
          },
          "description": "Specifies custom groups.",
          "type": "object"
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-imports": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "oneOf": [
            {
              "properties": {
                "value": {
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "description": "Specifies custom groups for value imports.",
                  "type": "object"
                },
                "type": {
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "description": "Specifies custom groups for type imports.",
                  "type": "object"
                }
              },
              "description": "Specifies custom groups.",
              "additionalProperties": false,
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "modifiers": {
                              "items": {
                                "enum": [
                                  "default",
                                  "named",
                                  "require",
                                  "side-effect",
                                  "ts-equals",
                                  "type",
                                  "value",
                                  "wildcard"
                                ],
                                "type": "string"
                              },
                              "description": "Modifier filters.",
                              "type": "array"
                            },
                            "selector": {
                              "description": "Selector filter.",
                              "enum": [
                                "side-effect-style",
                                "tsconfig-path",
                                "side-effect",
                                "external",
                                "internal",
                                "builtin",
                                "sibling",
                                "subpath",
                                "import",
                                "parent",
                                "index",
                                "style",
                                "type"
                              ],
                              "type": "string"
                            },
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "modifiers": {
                        "items": {
                          "enum": [
                            "default",
                            "named",
                            "require",
                            "side-effect",
                            "ts-equals",
                            "type",
                            "value",
                            "wildcard"
                          ],
                          "type": "string"
                        },
                        "description": "Modifier filters.",
                        "type": "array"
                      },
                      "selector": {
                        "description": "Selector filter.",
                        "enum": [
                          "side-effect-style",
                          "tsconfig-path",
                          "side-effect",
                          "external",
                          "internal",
                          "builtin",
                          "sibling",
                          "subpath",
                          "import",
                          "parent",
                          "index",
                          "style",
                          "type"
                        ],
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "tsconfig": {
          "properties": {
            "rootDir": {
              "description": "Specifies the tsConfig root directory.",
              "type": "string"
            },
            "filename": {
              "description": "Specifies the tsConfig filename.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "rootDir"
          ],
          "type": "object"
        },
        "maxLineLength": {
          "description": "Specifies the maximum line length.",
          "exclusiveMinimum": true,
          "type": "integer",
          "minimum": 0
        },
        "sortSideEffects": {
          "description": "Controls whether side-effect imports should be sorted.",
          "type": "boolean"
        },
        "environment": {
          "description": "Specifies the environment.",
          "enum": [
            "node",
            "bun"
          ],
          "type": "string"
        },
        "tsconfigRootDir": {
          "description": "Specifies the tsConfig root directory.",
          "type": "string"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "internalPattern": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-interfaces": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            },
            "sortBy": {
              "enum": [
                "name",
                "value"
              ],
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "oneOf": [
            {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "description": "Specifies custom groups.",
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          },
                          "sortBy": {
                            "enum": [
                              "name",
                              "value"
                            ],
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "modifiers": {
                              "items": {
                                "enum": [
                                  "optional",
                                  "required",
                                  "multiline"
                                ],
                                "type": "string"
                              },
                              "description": "Modifier filters.",
                              "type": "array"
                            },
                            "selector": {
                              "description": "Selector filter.",
                              "enum": [
                                "index-signature",
                                "member",
                                "method",
                                "multiline",
                                "property"
                              ],
                              "type": "string"
                            },
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "sortBy": {
                              "enum": [
                                "name",
                                "value"
                              ],
                              "type": "string"
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          },
                          "sortBy": {
                            "enum": [
                              "name",
                              "value"
                            ],
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "modifiers": {
                        "items": {
                          "enum": [
                            "optional",
                            "required",
                            "multiline"
                          ],
                          "type": "string"
                        },
                        "description": "Modifier filters.",
                        "type": "array"
                      },
                      "selector": {
                        "description": "Selector filter.",
                        "enum": [
                          "index-signature",
                          "member",
                          "method",
                          "multiline",
                          "property"
                        ],
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "sortBy": {
                        "enum": [
                          "name",
                          "value"
                        ],
                        "type": "string"
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "required-first",
            "optional-first"
          ],
          "type": "string"
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            "declarationMatchesPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "ignorePattern": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "sortBy": {
          "enum": [
            "name",
            "value"
          ],
          "type": "string"
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-intersection-types": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "intersection",
                            "conditional",
                            "function",
                            "operator",
                            "keyword",
                            "literal",
                            "nullish",
                            "import",
                            "object",
                            "named",
                            "tuple",
                            "union"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "intersection",
                      "conditional",
                      "function",
                      "operator",
                      "keyword",
                      "literal",
                      "nullish",
                      "import",
                      "object",
                      "named",
                      "tuple",
                      "union"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-jsx-props": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "oneOf": [
            {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "description": "Specifies custom groups.",
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "modifiers": {
                              "items": {
                                "enum": [
                                  "shorthand",
                                  "multiline"
                                ],
                                "type": "string"
                              },
                              "description": "Modifier filters.",
                              "type": "array"
                            },
                            "selector": {
                              "description": "Selector filter.",
                              "enum": [
                                "multiline",
                                "prop",
                                "shorthand"
                              ],
                              "type": "string"
                            },
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "modifiers": {
                        "items": {
                          "enum": [
                            "shorthand",
                            "multiline"
                          ],
                          "type": "string"
                        },
                        "description": "Modifier filters.",
                        "type": "array"
                      },
                      "selector": {
                        "description": "Selector filter.",
                        "enum": [
                          "multiline",
                          "prop",
                          "shorthand"
                        ],
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            "tagMatchesPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "ignorePattern": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-maps": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-modules": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "modifiers": {
                          "items": {
                            "enum": [
                              "async",
                              "declare",
                              "decorated",
                              "default",
                              "export"
                            ],
                            "type": "string"
                          },
                          "description": "Modifier filters.",
                          "type": "array"
                        },
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "enum",
                            "function",
                            "interface",
                            "type",
                            "class"
                          ],
                          "type": "string"
                        },
                        "decoratorNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "modifiers": {
                    "items": {
                      "enum": [
                        "async",
                        "declare",
                        "decorated",
                        "default",
                        "export"
                      ],
                      "type": "string"
                    },
                    "description": "Modifier filters.",
                    "type": "array"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "enum",
                      "function",
                      "interface",
                      "type",
                      "class"
                    ],
                    "type": "string"
                  },
                  "decoratorNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-named-exports": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "values-first",
            "types-first"
          ],
          "type": "string"
        },
        "ignoreAlias": {
          "description": "Controls whether to ignore alias names.",
          "type": "boolean"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "modifiers": {
                          "items": {
                            "enum": [
                              "value",
                              "type"
                            ],
                            "type": "string"
                          },
                          "description": "Modifier filters.",
                          "type": "array"
                        },
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "export"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "modifiers": {
                    "items": {
                      "enum": [
                        "value",
                        "type"
                      ],
                      "type": "string"
                    },
                    "description": "Modifier filters.",
                    "type": "array"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "export"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-named-imports": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "values-first",
            "types-first"
          ],
          "type": "string"
        },
        "ignoreAlias": {
          "description": "Controls whether to ignore alias names.",
          "type": "boolean"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "modifiers": {
                          "items": {
                            "enum": [
                              "value",
                              "type"
                            ],
                            "type": "string"
                          },
                          "description": "Modifier filters.",
                          "type": "array"
                        },
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "import"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "modifiers": {
                    "items": {
                      "enum": [
                        "value",
                        "type"
                      ],
                      "type": "string"
                    },
                    "description": "Modifier filters.",
                    "type": "array"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "import"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-object-types": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            },
            "sortBy": {
              "enum": [
                "name",
                "value"
              ],
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "oneOf": [
            {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "description": "Specifies custom groups.",
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          },
                          "sortBy": {
                            "enum": [
                              "name",
                              "value"
                            ],
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "modifiers": {
                              "items": {
                                "enum": [
                                  "optional",
                                  "required",
                                  "multiline"
                                ],
                                "type": "string"
                              },
                              "description": "Modifier filters.",
                              "type": "array"
                            },
                            "selector": {
                              "description": "Selector filter.",
                              "enum": [
                                "index-signature",
                                "member",
                                "method",
                                "multiline",
                                "property"
                              ],
                              "type": "string"
                            },
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "sortBy": {
                              "enum": [
                                "name",
                                "value"
                              ],
                              "type": "string"
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          },
                          "sortBy": {
                            "enum": [
                              "name",
                              "value"
                            ],
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "modifiers": {
                        "items": {
                          "enum": [
                            "optional",
                            "required",
                            "multiline"
                          ],
                          "type": "string"
                        },
                        "description": "Modifier filters.",
                        "type": "array"
                      },
                      "selector": {
                        "description": "Selector filter.",
                        "enum": [
                          "index-signature",
                          "member",
                          "method",
                          "multiline",
                          "property"
                        ],
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "sortBy": {
                        "enum": [
                          "name",
                          "value"
                        ],
                        "type": "string"
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "required-first",
            "optional-first"
          ],
          "type": "string"
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            "declarationMatchesPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "ignorePattern": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "sortBy": {
          "enum": [
            "name",
            "value"
          ],
          "type": "string"
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-objects": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "destructuredObjects": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "properties": {
                "groups": {
                  "description": "Controls whether to use groups to sort destructured objects.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          ],
          "description": "Controls whether to sort destructured objects."
        },
        "customGroups": {
          "oneOf": [
            {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "description": "Specifies custom groups.",
              "type": "object"
            },
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "anyOf": {
                        "items": {
                          "properties": {
                            "modifiers": {
                              "items": {
                                "enum": [
                                  "optional",
                                  "required",
                                  "multiline"
                                ],
                                "type": "string"
                              },
                              "description": "Modifier filters.",
                              "type": "array"
                            },
                            "selector": {
                              "description": "Selector filter.",
                              "enum": [
                                "member",
                                "method",
                                "multiline",
                                "property"
                              ],
                              "type": "string"
                            },
                            "elementValuePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "elementNamePattern": {
                              "oneOf": [
                                {
                                  "items": {
                                    "oneOf": [
                                      {
                                        "properties": {
                                          "pattern": {
                                            "description": "Regular expression pattern.",
                                            "type": "string"
                                          },
                                          "flags": {
                                            "description": "Regular expression flags.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "pattern"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "Regular expression."
                                  },
                                  "type": "array"
                                },
                                {
                                  "oneOf": [
                                    {
                                      "properties": {
                                        "pattern": {
                                          "description": "Regular expression pattern.",
                                          "type": "string"
                                        },
                                        "flags": {
                                          "description": "Regular expression flags.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "pattern"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "description": "Regular expression."
                                }
                              ],
                              "description": "Regular expression."
                            }
                          },
                          "description": "Custom group.",
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "description": "Custom group block.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "newlinesInside": {
                        "oneOf": [
                          {
                            "description": "Specifies how to handle newlines between members of the custom group.",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "type": "string"
                          },
                          {
                            "type": "number",
                            "minimum": 0
                          }
                        ]
                      },
                      "fallbackSort": {
                        "properties": {
                          "order": {
                            "description": "Specifies whether to sort items in ascending or descending order.",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "alphabetical",
                              "natural",
                              "line-length",
                              "custom",
                              "unsorted"
                            ],
                            "description": "Specifies the sorting method.",
                            "type": "string"
                          }
                        },
                        "description": "Fallback sort order.",
                        "additionalProperties": false,
                        "minProperties": 1,
                        "type": "object"
                      },
                      "groupName": {
                        "description": "Custom group name.",
                        "type": "string"
                      },
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      },
                      "modifiers": {
                        "items": {
                          "enum": [
                            "optional",
                            "required",
                            "multiline"
                          ],
                          "type": "string"
                        },
                        "description": "Modifier filters.",
                        "type": "array"
                      },
                      "selector": {
                        "description": "Selector filter.",
                        "enum": [
                          "member",
                          "method",
                          "multiline",
                          "property"
                        ],
                        "type": "string"
                      },
                      "elementValuePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      },
                      "elementNamePattern": {
                        "oneOf": [
                          {
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            },
                            "type": "array"
                          },
                          {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          }
                        ],
                        "description": "Regular expression."
                      }
                    },
                    "description": "Custom group.",
                    "additionalProperties": false,
                    "required": [
                      "groupName"
                    ],
                    "type": "object"
                  }
                ]
              },
              "description": "Defines custom groups to match specific members.",
              "type": "array"
            }
          ]
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            "callingFunctionNamePattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "destructureOnly": {
          "description": "[DEPRECATED] Controls whether to sort only destructured objects.",
          "type": "boolean"
        },
        "objectDeclarations": {
          "description": "Controls whether to sort object declarations.",
          "type": "boolean"
        },
        "styledComponents": {
          "description": "Controls whether to sort styled components.",
          "type": "boolean"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "ignorePattern": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "pattern": {
                        "description": "Regular expression pattern.",
                        "type": "string"
                      },
                      "flags": {
                        "description": "Regular expression flags.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "pattern"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Regular expression."
              },
              "type": "array"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "pattern": {
                      "description": "Regular expression pattern.",
                      "type": "string"
                    },
                    "flags": {
                      "description": "Regular expression flags.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "pattern"
                  ],
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Regular expression."
            }
          ],
          "description": "Regular expression."
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-sets": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "groupKind": {
          "description": "[DEPRECATED] Specifies top-level groups.",
          "enum": [
            "mixed",
            "literals-first",
            "spreads-first"
          ],
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "literal",
                            "spread"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "literal",
                      "spread"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "useConfigurationIf": {
          "description": "Specifies filters to match a particular options configuration for a given element to sort.",
          "properties": {
            "allNamesMatchPattern": {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-switch-case": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ],
  "perfectionist/sort-union-types": {
    "items": {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "intersection",
                            "conditional",
                            "function",
                            "operator",
                            "keyword",
                            "literal",
                            "nullish",
                            "import",
                            "object",
                            "named",
                            "tuple",
                            "union"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "intersection",
                      "conditional",
                      "function",
                      "operator",
                      "keyword",
                      "literal",
                      "nullish",
                      "import",
                      "object",
                      "named",
                      "tuple",
                      "union"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "uniqueItems": true,
    "type": "array"
  },
  "perfectionist/sort-variable-declarations": [
    {
      "properties": {
        "fallbackSort": {
          "properties": {
            "order": {
              "description": "Specifies whether to sort items in ascending or descending order.",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            },
            "type": {
              "enum": [
                "alphabetical",
                "natural",
                "line-length",
                "custom",
                "unsorted"
              ],
              "description": "Specifies the sorting method.",
              "type": "string"
            }
          },
          "description": "Fallback sort order.",
          "additionalProperties": false,
          "minProperties": 1,
          "type": "object"
        },
        "specialCharacters": {
          "description": "Specifies whether to trim, remove, or keep special characters before sorting.",
          "enum": [
            "remove",
            "trim",
            "keep"
          ],
          "type": "string"
        },
        "ignoreCase": {
          "description": "Controls whether sorting should be case-sensitive or not.",
          "type": "boolean"
        },
        "alphabet": {
          "description": "Used only when the \`type\` option is set to \`'custom'\`. Specifies the custom alphabet for sorting.",
          "type": "string"
        },
        "locales": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ],
          "description": "Specifies the sorting locales."
        },
        "order": {
          "description": "Specifies whether to sort items in ascending or descending order.",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "alphabetical",
            "natural",
            "line-length",
            "custom",
            "unsorted"
          ],
          "description": "Specifies the sorting method.",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "oneOf": [
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "anyOf": {
                    "items": {
                      "properties": {
                        "selector": {
                          "description": "Selector filter.",
                          "enum": [
                            "initialized",
                            "uninitialized"
                          ],
                          "type": "string"
                        },
                        "elementNamePattern": {
                          "oneOf": [
                            {
                              "items": {
                                "oneOf": [
                                  {
                                    "properties": {
                                      "pattern": {
                                        "description": "Regular expression pattern.",
                                        "type": "string"
                                      },
                                      "flags": {
                                        "description": "Regular expression flags.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "pattern"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Regular expression."
                              },
                              "type": "array"
                            },
                            {
                              "oneOf": [
                                {
                                  "properties": {
                                    "pattern": {
                                      "description": "Regular expression pattern.",
                                      "type": "string"
                                    },
                                    "flags": {
                                      "description": "Regular expression flags.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "pattern"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "description": "Regular expression."
                            }
                          ],
                          "description": "Regular expression."
                        }
                      },
                      "description": "Custom group.",
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "description": "Custom group block.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "newlinesInside": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between members of the custom group.",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "fallbackSort": {
                    "properties": {
                      "order": {
                        "description": "Specifies whether to sort items in ascending or descending order.",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "alphabetical",
                          "natural",
                          "line-length",
                          "custom",
                          "unsorted"
                        ],
                        "description": "Specifies the sorting method.",
                        "type": "string"
                      }
                    },
                    "description": "Fallback sort order.",
                    "additionalProperties": false,
                    "minProperties": 1,
                    "type": "object"
                  },
                  "groupName": {
                    "description": "Custom group name.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies whether to sort items in ascending or descending order.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "alphabetical",
                      "natural",
                      "line-length",
                      "custom",
                      "unsorted"
                    ],
                    "description": "Specifies the sorting method.",
                    "type": "string"
                  },
                  "selector": {
                    "description": "Selector filter.",
                    "enum": [
                      "initialized",
                      "uninitialized"
                    ],
                    "type": "string"
                  },
                  "elementNamePattern": {
                    "oneOf": [
                      {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        },
                        "type": "array"
                      },
                      {
                        "oneOf": [
                          {
                            "properties": {
                              "pattern": {
                                "description": "Regular expression pattern.",
                                "type": "string"
                              },
                              "flags": {
                                "description": "Regular expression flags.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "pattern"
                            ],
                            "type": "object"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Regular expression."
                      }
                    ],
                    "description": "Regular expression."
                  }
                },
                "description": "Custom group.",
                "additionalProperties": false,
                "required": [
                  "groupName"
                ],
                "type": "object"
              }
            ]
          },
          "description": "Defines custom groups to match specific members.",
          "type": "array"
        },
        "partitionByComment": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "oneOf": [
                {
                  "items": {
                    "oneOf": [
                      {
                        "properties": {
                          "pattern": {
                            "description": "Regular expression pattern.",
                            "type": "string"
                          },
                          "flags": {
                            "description": "Regular expression flags.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "pattern"
                        ],
                        "type": "object"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "description": "Regular expression."
                  },
                  "type": "array"
                },
                {
                  "oneOf": [
                    {
                      "properties": {
                        "pattern": {
                          "description": "Regular expression pattern.",
                          "type": "string"
                        },
                        "flags": {
                          "description": "Regular expression flags.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "pattern"
                      ],
                      "type": "object"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Regular expression."
                }
              ],
              "description": "Regular expression."
            },
            {
              "properties": {
                "block": {
                  "description": "Enables specific block comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                },
                "line": {
                  "description": "Enables specific line comments to separate the nodes.",
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "oneOf": [
                        {
                          "items": {
                            "oneOf": [
                              {
                                "properties": {
                                  "pattern": {
                                    "description": "Regular expression pattern.",
                                    "type": "string"
                                  },
                                  "flags": {
                                    "description": "Regular expression flags.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "pattern"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Regular expression."
                          },
                          "type": "array"
                        },
                        {
                          "oneOf": [
                            {
                              "properties": {
                                "pattern": {
                                  "description": "Regular expression pattern.",
                                  "type": "string"
                                },
                                "flags": {
                                  "description": "Regular expression flags.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "pattern"
                              ],
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Regular expression."
                        }
                      ],
                      "description": "Regular expression."
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "minProperties": 1,
              "type": "object"
            }
          ],
          "description": "Enables the use of comments to separate the nodes into logical groups."
        },
        "partitionByNewLine": {
          "description": "Enables the use of newlines to separate the nodes into logical groups.",
          "type": "boolean"
        },
        "newlinesBetween": {
          "oneOf": [
            {
              "description": "Specifies how to handle newlines between groups.",
              "enum": [
                "ignore",
                "always",
                "never"
              ],
              "type": "string"
            },
            {
              "type": "number",
              "minimum": 0
            }
          ]
        },
        "groups": {
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "properties": {
                  "newlinesBetween": {
                    "oneOf": [
                      {
                        "description": "Specifies how to handle newlines between groups.",
                        "enum": [
                          "ignore",
                          "always",
                          "never"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number",
                        "minimum": 0
                      }
                    ]
                  },
                  "commentAbove": {
                    "description": "Specifies a comment to enforce above the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "type": "object"
              }
            ]
          },
          "description": "Specifies a list of groups for sorting.",
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  ]
}
`;

exports[`Plugin \"promise\" config rules > Snapshot of the schema has not been changed 1`] = `
{
  "promise/always-return": [
    {
      "type": "object",
      "properties": {
        "ignoreLastCallback": {
          "type": "boolean"
        },
        "ignoreAssignmentVariable": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[\\\\w$]+$"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/avoid-new": [],
  "promise/catch-or-return": [
    {
      "type": "object",
      "properties": {
        "allowFinally": {
          "type": "boolean"
        },
        "allowThen": {
          "type": "boolean"
        },
        "allowThenStrict": {
          "type": "boolean"
        },
        "terminationMethod": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/no-callback-in-promise": [
    {
      "type": "object",
      "properties": {
        "exceptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeoutsErr": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/no-multiple-resolved": [],
  "promise/no-native": [],
  "promise/no-nesting": [],
  "promise/no-new-statics": [],
  "promise/no-promise-in-callback": [],
  "promise/no-return-in-finally": [],
  "promise/no-return-wrap": [
    {
      "type": "object",
      "properties": {
        "allowReject": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/param-names": [
    {
      "type": "object",
      "properties": {
        "resolvePattern": {
          "type": "string"
        },
        "rejectPattern": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/prefer-await-to-callbacks": [],
  "promise/prefer-await-to-then": [
    {
      "type": "object",
      "properties": {
        "strict": {
          "type": "boolean"
        }
      }
    }
  ],
  "promise/prefer-catch": [],
  "promise/spec-only": [
    {
      "type": "object",
      "properties": {
        "allowedMethods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "promise/valid-params": [
    {
      "type": "object",
      "properties": {
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  ]
}
`;
